(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("three"));
	else if(typeof define === 'function' && define.amd)
		define(["three"], factory);
	else if(typeof exports === 'object')
		exports["THREEx"] = factory(require("three"));
	else
		root["THREEx"] = factory(root["THREE"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_three__) {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js ***!
  \*****************************************************************/
/***/ (function(module) {

!function(A,I){ true?module.exports=I():0}("undefined"!=typeof self?self:this,(function(){return(()=>{var A={757:(A,I,g)=>{A.exports=g(666)},669:(A,I,g)=>{A.exports=g(609)},448:(A,I,g)=>{"use strict";var B=g(867),C=g(26),Q=g(372),E=g(327),i=g(97),o=g(109),D=g(985),a=g(61),w=g(655),F=g(263);A.exports=function(A){return new Promise((function(I,g){var G,h=A.data,s=A.headers,R=A.responseType;function U(){A.cancelToken&&A.cancelToken.unsubscribe(G),A.signal&&A.signal.removeEventListener("abort",G)}B.isFormData(h)&&delete s["Content-Type"];var y=new XMLHttpRequest;if(A.auth){var t=A.auth.username||"",S=A.auth.password?unescape(encodeURIComponent(A.auth.password)):"";s.Authorization="Basic "+btoa(t+":"+S)}var M=i(A.baseURL,A.url);function n(){if(y){var B="getAllResponseHeaders"in y?o(y.getAllResponseHeaders()):null,Q={data:R&&"text"!==R&&"json"!==R?y.response:y.responseText,status:y.status,statusText:y.statusText,headers:B,config:A,request:y};C((function(A){I(A),U()}),(function(A){g(A),U()}),Q),y=null}}if(y.open(A.method.toUpperCase(),E(M,A.params,A.paramsSerializer),!0),y.timeout=A.timeout,"onloadend"in y?y.onloadend=n:y.onreadystatechange=function(){y&&4===y.readyState&&(0!==y.status||y.responseURL&&0===y.responseURL.indexOf("file:"))&&setTimeout(n)},y.onabort=function(){y&&(g(a("Request aborted",A,"ECONNABORTED",y)),y=null)},y.onerror=function(){g(a("Network Error",A,null,y)),y=null},y.ontimeout=function(){var I=A.timeout?"timeout of "+A.timeout+"ms exceeded":"timeout exceeded",B=A.transitional||w.transitional;A.timeoutErrorMessage&&(I=A.timeoutErrorMessage),g(a(I,A,B.clarifyTimeoutError?"ETIMEDOUT":"ECONNABORTED",y)),y=null},B.isStandardBrowserEnv()){var c=(A.withCredentials||D(M))&&A.xsrfCookieName?Q.read(A.xsrfCookieName):void 0;c&&(s[A.xsrfHeaderName]=c)}"setRequestHeader"in y&&B.forEach(s,(function(A,I){void 0===h&&"content-type"===I.toLowerCase()?delete s[I]:y.setRequestHeader(I,A)})),B.isUndefined(A.withCredentials)||(y.withCredentials=!!A.withCredentials),R&&"json"!==R&&(y.responseType=A.responseType),"function"==typeof A.onDownloadProgress&&y.addEventListener("progress",A.onDownloadProgress),"function"==typeof A.onUploadProgress&&y.upload&&y.upload.addEventListener("progress",A.onUploadProgress),(A.cancelToken||A.signal)&&(G=function(A){y&&(g(!A||A&&A.type?new F("canceled"):A),y.abort(),y=null)},A.cancelToken&&A.cancelToken.subscribe(G),A.signal&&(A.signal.aborted?G():A.signal.addEventListener("abort",G))),h||(h=null),y.send(h)}))}},609:(A,I,g)=>{"use strict";var B=g(867),C=g(849),Q=g(321),E=g(185),i=function A(I){var g=new Q(I),i=C(Q.prototype.request,g);return B.extend(i,Q.prototype,g),B.extend(i,g),i.create=function(g){return A(E(I,g))},i}(g(655));i.Axios=Q,i.Cancel=g(263),i.CancelToken=g(972),i.isCancel=g(502),i.VERSION=g(288).version,i.all=function(A){return Promise.all(A)},i.spread=g(713),i.isAxiosError=g(268),A.exports=i,A.exports.default=i},263:A=>{"use strict";function I(A){this.message=A}I.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},I.prototype.__CANCEL__=!0,A.exports=I},972:(A,I,g)=>{"use strict";var B=g(263);function C(A){if("function"!=typeof A)throw new TypeError("executor must be a function.");var I;this.promise=new Promise((function(A){I=A}));var g=this;this.promise.then((function(A){if(g._listeners){var I,B=g._listeners.length;for(I=0;I<B;I++)g._listeners[I](A);g._listeners=null}})),this.promise.then=function(A){var I,B=new Promise((function(A){g.subscribe(A),I=A})).then(A);return B.cancel=function(){g.unsubscribe(I)},B},A((function(A){g.reason||(g.reason=new B(A),I(g.reason))}))}C.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},C.prototype.subscribe=function(A){this.reason?A(this.reason):this._listeners?this._listeners.push(A):this._listeners=[A]},C.prototype.unsubscribe=function(A){if(this._listeners){var I=this._listeners.indexOf(A);-1!==I&&this._listeners.splice(I,1)}},C.source=function(){var A;return{token:new C((function(I){A=I})),cancel:A}},A.exports=C},502:A=>{"use strict";A.exports=function(A){return!(!A||!A.__CANCEL__)}},321:(A,I,g)=>{"use strict";var B=g(867),C=g(327),Q=g(782),E=g(572),i=g(185),o=g(875),D=o.validators;function a(A){this.defaults=A,this.interceptors={request:new Q,response:new Q}}a.prototype.request=function(A){"string"==typeof A?(A=arguments[1]||{}).url=arguments[0]:A=A||{},(A=i(this.defaults,A)).method?A.method=A.method.toLowerCase():this.defaults.method?A.method=this.defaults.method.toLowerCase():A.method="get";var I=A.transitional;void 0!==I&&o.assertOptions(I,{silentJSONParsing:D.transitional(D.boolean),forcedJSONParsing:D.transitional(D.boolean),clarifyTimeoutError:D.transitional(D.boolean)},!1);var g=[],B=!0;this.interceptors.request.forEach((function(I){"function"==typeof I.runWhen&&!1===I.runWhen(A)||(B=B&&I.synchronous,g.unshift(I.fulfilled,I.rejected))}));var C,Q=[];if(this.interceptors.response.forEach((function(A){Q.push(A.fulfilled,A.rejected)})),!B){var a=[E,void 0];for(Array.prototype.unshift.apply(a,g),a=a.concat(Q),C=Promise.resolve(A);a.length;)C=C.then(a.shift(),a.shift());return C}for(var w=A;g.length;){var F=g.shift(),G=g.shift();try{w=F(w)}catch(A){G(A);break}}try{C=E(w)}catch(A){return Promise.reject(A)}for(;Q.length;)C=C.then(Q.shift(),Q.shift());return C},a.prototype.getUri=function(A){return A=i(this.defaults,A),C(A.url,A.params,A.paramsSerializer).replace(/^\?/,"")},B.forEach(["delete","get","head","options"],(function(A){a.prototype[A]=function(I,g){return this.request(i(g||{},{method:A,url:I,data:(g||{}).data}))}})),B.forEach(["post","put","patch"],(function(A){a.prototype[A]=function(I,g,B){return this.request(i(B||{},{method:A,url:I,data:g}))}})),A.exports=a},782:(A,I,g)=>{"use strict";var B=g(867);function C(){this.handlers=[]}C.prototype.use=function(A,I,g){return this.handlers.push({fulfilled:A,rejected:I,synchronous:!!g&&g.synchronous,runWhen:g?g.runWhen:null}),this.handlers.length-1},C.prototype.eject=function(A){this.handlers[A]&&(this.handlers[A]=null)},C.prototype.forEach=function(A){B.forEach(this.handlers,(function(I){null!==I&&A(I)}))},A.exports=C},97:(A,I,g)=>{"use strict";var B=g(793),C=g(303);A.exports=function(A,I){return A&&!B(I)?C(A,I):I}},61:(A,I,g)=>{"use strict";var B=g(481);A.exports=function(A,I,g,C,Q){var E=new Error(A);return B(E,I,g,C,Q)}},572:(A,I,g)=>{"use strict";var B=g(867),C=g(527),Q=g(502),E=g(655),i=g(263);function o(A){if(A.cancelToken&&A.cancelToken.throwIfRequested(),A.signal&&A.signal.aborted)throw new i("canceled")}A.exports=function(A){return o(A),A.headers=A.headers||{},A.data=C.call(A,A.data,A.headers,A.transformRequest),A.headers=B.merge(A.headers.common||{},A.headers[A.method]||{},A.headers),B.forEach(["delete","get","head","post","put","patch","common"],(function(I){delete A.headers[I]})),(A.adapter||E.adapter)(A).then((function(I){return o(A),I.data=C.call(A,I.data,I.headers,A.transformResponse),I}),(function(I){return Q(I)||(o(A),I&&I.response&&(I.response.data=C.call(A,I.response.data,I.response.headers,A.transformResponse))),Promise.reject(I)}))}},481:A=>{"use strict";A.exports=function(A,I,g,B,C){return A.config=I,g&&(A.code=g),A.request=B,A.response=C,A.isAxiosError=!0,A.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code,status:this.response&&this.response.status?this.response.status:null}},A}},185:(A,I,g)=>{"use strict";var B=g(867);A.exports=function(A,I){I=I||{};var g={};function C(A,I){return B.isPlainObject(A)&&B.isPlainObject(I)?B.merge(A,I):B.isPlainObject(I)?B.merge({},I):B.isArray(I)?I.slice():I}function Q(g){return B.isUndefined(I[g])?B.isUndefined(A[g])?void 0:C(void 0,A[g]):C(A[g],I[g])}function E(A){if(!B.isUndefined(I[A]))return C(void 0,I[A])}function i(g){return B.isUndefined(I[g])?B.isUndefined(A[g])?void 0:C(void 0,A[g]):C(void 0,I[g])}function o(g){return g in I?C(A[g],I[g]):g in A?C(void 0,A[g]):void 0}var D={url:E,method:E,data:E,baseURL:i,transformRequest:i,transformResponse:i,paramsSerializer:i,timeout:i,timeoutMessage:i,withCredentials:i,adapter:i,responseType:i,xsrfCookieName:i,xsrfHeaderName:i,onUploadProgress:i,onDownloadProgress:i,decompress:i,maxContentLength:i,maxBodyLength:i,transport:i,httpAgent:i,httpsAgent:i,cancelToken:i,socketPath:i,responseEncoding:i,validateStatus:o};return B.forEach(Object.keys(A).concat(Object.keys(I)),(function(A){var I=D[A]||Q,C=I(A);B.isUndefined(C)&&I!==o||(g[A]=C)})),g}},26:(A,I,g)=>{"use strict";var B=g(61);A.exports=function(A,I,g){var C=g.config.validateStatus;g.status&&C&&!C(g.status)?I(B("Request failed with status code "+g.status,g.config,null,g.request,g)):A(g)}},527:(A,I,g)=>{"use strict";var B=g(867),C=g(655);A.exports=function(A,I,g){var Q=this||C;return B.forEach(g,(function(g){A=g.call(Q,A,I)})),A}},655:(A,I,g)=>{"use strict";var B=g(867),C=g(16),Q=g(481),E={"Content-Type":"application/x-www-form-urlencoded"};function i(A,I){!B.isUndefined(A)&&B.isUndefined(A["Content-Type"])&&(A["Content-Type"]=I)}var o,D={transitional:{silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},adapter:(("undefined"!=typeof XMLHttpRequest||"undefined"!=typeof process&&"[object process]"===Object.prototype.toString.call(process))&&(o=g(448)),o),transformRequest:[function(A,I){return C(I,"Accept"),C(I,"Content-Type"),B.isFormData(A)||B.isArrayBuffer(A)||B.isBuffer(A)||B.isStream(A)||B.isFile(A)||B.isBlob(A)?A:B.isArrayBufferView(A)?A.buffer:B.isURLSearchParams(A)?(i(I,"application/x-www-form-urlencoded;charset=utf-8"),A.toString()):B.isObject(A)||I&&"application/json"===I["Content-Type"]?(i(I,"application/json"),function(A,I,g){if(B.isString(A))try{return(0,JSON.parse)(A),B.trim(A)}catch(A){if("SyntaxError"!==A.name)throw A}return(0,JSON.stringify)(A)}(A)):A}],transformResponse:[function(A){var I=this.transitional||D.transitional,g=I&&I.silentJSONParsing,C=I&&I.forcedJSONParsing,E=!g&&"json"===this.responseType;if(E||C&&B.isString(A)&&A.length)try{return JSON.parse(A)}catch(A){if(E){if("SyntaxError"===A.name)throw Q(A,this,"E_JSON_PARSE");throw A}}return A}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(A){return A>=200&&A<300},headers:{common:{Accept:"application/json, text/plain, */*"}}};B.forEach(["delete","get","head"],(function(A){D.headers[A]={}})),B.forEach(["post","put","patch"],(function(A){D.headers[A]=B.merge(E)})),A.exports=D},288:A=>{A.exports={version:"0.24.0"}},849:A=>{"use strict";A.exports=function(A,I){return function(){for(var g=new Array(arguments.length),B=0;B<g.length;B++)g[B]=arguments[B];return A.apply(I,g)}}},327:(A,I,g)=>{"use strict";var B=g(867);function C(A){return encodeURIComponent(A).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}A.exports=function(A,I,g){if(!I)return A;var Q;if(g)Q=g(I);else if(B.isURLSearchParams(I))Q=I.toString();else{var E=[];B.forEach(I,(function(A,I){null!=A&&(B.isArray(A)?I+="[]":A=[A],B.forEach(A,(function(A){B.isDate(A)?A=A.toISOString():B.isObject(A)&&(A=JSON.stringify(A)),E.push(C(I)+"="+C(A))})))})),Q=E.join("&")}if(Q){var i=A.indexOf("#");-1!==i&&(A=A.slice(0,i)),A+=(-1===A.indexOf("?")?"?":"&")+Q}return A}},303:A=>{"use strict";A.exports=function(A,I){return I?A.replace(/\/+$/,"")+"/"+I.replace(/^\/+/,""):A}},372:(A,I,g)=>{"use strict";var B=g(867);A.exports=B.isStandardBrowserEnv()?{write:function(A,I,g,C,Q,E){var i=[];i.push(A+"="+encodeURIComponent(I)),B.isNumber(g)&&i.push("expires="+new Date(g).toGMTString()),B.isString(C)&&i.push("path="+C),B.isString(Q)&&i.push("domain="+Q),!0===E&&i.push("secure"),document.cookie=i.join("; ")},read:function(A){var I=document.cookie.match(new RegExp("(^|;\\s*)("+A+")=([^;]*)"));return I?decodeURIComponent(I[3]):null},remove:function(A){this.write(A,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},793:A=>{"use strict";A.exports=function(A){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(A)}},268:A=>{"use strict";A.exports=function(A){return"object"==typeof A&&!0===A.isAxiosError}},985:(A,I,g)=>{"use strict";var B=g(867);A.exports=B.isStandardBrowserEnv()?function(){var A,I=/(msie|trident)/i.test(navigator.userAgent),g=document.createElement("a");function C(A){var B=A;return I&&(g.setAttribute("href",B),B=g.href),g.setAttribute("href",B),{href:g.href,protocol:g.protocol?g.protocol.replace(/:$/,""):"",host:g.host,search:g.search?g.search.replace(/^\?/,""):"",hash:g.hash?g.hash.replace(/^#/,""):"",hostname:g.hostname,port:g.port,pathname:"/"===g.pathname.charAt(0)?g.pathname:"/"+g.pathname}}return A=C(window.location.href),function(I){var g=B.isString(I)?C(I):I;return g.protocol===A.protocol&&g.host===A.host}}():function(){return!0}},16:(A,I,g)=>{"use strict";var B=g(867);A.exports=function(A,I){B.forEach(A,(function(g,B){B!==I&&B.toUpperCase()===I.toUpperCase()&&(A[I]=g,delete A[B])}))}},109:(A,I,g)=>{"use strict";var B=g(867),C=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];A.exports=function(A){var I,g,Q,E={};return A?(B.forEach(A.split("\n"),(function(A){if(Q=A.indexOf(":"),I=B.trim(A.substr(0,Q)).toLowerCase(),g=B.trim(A.substr(Q+1)),I){if(E[I]&&C.indexOf(I)>=0)return;E[I]="set-cookie"===I?(E[I]?E[I]:[]).concat([g]):E[I]?E[I]+", "+g:g}})),E):E}},713:A=>{"use strict";A.exports=function(A){return function(I){return A.apply(null,I)}}},875:(A,I,g)=>{"use strict";var B=g(288).version,C={};["object","boolean","number","function","string","symbol"].forEach((function(A,I){C[A]=function(g){return typeof g===A||"a"+(I<1?"n ":" ")+A}}));var Q={};C.transitional=function(A,I,g){function C(A,I){return"[Axios v"+B+"] Transitional option '"+A+"'"+I+(g?". "+g:"")}return function(g,B,E){if(!1===A)throw new Error(C(B," has been removed"+(I?" in "+I:"")));return I&&!Q[B]&&(Q[B]=!0,console.warn(C(B," has been deprecated since v"+I+" and will be removed in the near future"))),!A||A(g,B,E)}},A.exports={assertOptions:function(A,I,g){if("object"!=typeof A)throw new TypeError("options must be an object");for(var B=Object.keys(A),C=B.length;C-- >0;){var Q=B[C],E=I[Q];if(E){var i=A[Q],o=void 0===i||E(i,Q,A);if(!0!==o)throw new TypeError("option "+Q+" must be "+o)}else if(!0!==g)throw Error("Unknown option "+Q)}},validators:C}},867:(A,I,g)=>{"use strict";var B=g(849),C=Object.prototype.toString;function Q(A){return"[object Array]"===C.call(A)}function E(A){return void 0===A}function i(A){return null!==A&&"object"==typeof A}function o(A){if("[object Object]"!==C.call(A))return!1;var I=Object.getPrototypeOf(A);return null===I||I===Object.prototype}function D(A){return"[object Function]"===C.call(A)}function a(A,I){if(null!=A)if("object"!=typeof A&&(A=[A]),Q(A))for(var g=0,B=A.length;g<B;g++)I.call(null,A[g],g,A);else for(var C in A)Object.prototype.hasOwnProperty.call(A,C)&&I.call(null,A[C],C,A)}A.exports={isArray:Q,isArrayBuffer:function(A){return"[object ArrayBuffer]"===C.call(A)},isBuffer:function(A){return null!==A&&!E(A)&&null!==A.constructor&&!E(A.constructor)&&"function"==typeof A.constructor.isBuffer&&A.constructor.isBuffer(A)},isFormData:function(A){return"undefined"!=typeof FormData&&A instanceof FormData},isArrayBufferView:function(A){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(A):A&&A.buffer&&A.buffer instanceof ArrayBuffer},isString:function(A){return"string"==typeof A},isNumber:function(A){return"number"==typeof A},isObject:i,isPlainObject:o,isUndefined:E,isDate:function(A){return"[object Date]"===C.call(A)},isFile:function(A){return"[object File]"===C.call(A)},isBlob:function(A){return"[object Blob]"===C.call(A)},isFunction:D,isStream:function(A){return i(A)&&D(A.pipe)},isURLSearchParams:function(A){return"undefined"!=typeof URLSearchParams&&A instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&"undefined"!=typeof window&&"undefined"!=typeof document},forEach:a,merge:function A(){var I={};function g(g,B){o(I[B])&&o(g)?I[B]=A(I[B],g):o(g)?I[B]=A({},g):Q(g)?I[B]=g.slice():I[B]=g}for(var B=0,C=arguments.length;B<C;B++)a(arguments[B],g);return I},extend:function(A,I,g){return a(I,(function(I,C){A[C]=g&&"function"==typeof I?B(I,g):I})),A},trim:function(A){return A.trim?A.trim():A.replace(/^\s+|\s+$/g,"")},stripBOM:function(A){return 65279===A.charCodeAt(0)&&(A=A.slice(1)),A}}},666:A=>{var I=function(A){"use strict";var I,g=Object.prototype,B=g.hasOwnProperty,C="function"==typeof Symbol?Symbol:{},Q=C.iterator||"@@iterator",E=C.asyncIterator||"@@asyncIterator",i=C.toStringTag||"@@toStringTag";function o(A,I,g){return Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}),A[I]}try{o({},"")}catch(A){o=function(A,I,g){return A[I]=g}}function D(A,I,g,B){var C=I&&I.prototype instanceof R?I:R,Q=Object.create(C.prototype),E=new Y(B||[]);return Q._invoke=function(A,I,g){var B=w;return function(C,Q){if(B===G)throw new Error("Generator is already running");if(B===h){if("throw"===C)throw Q;return J()}for(g.method=C,g.arg=Q;;){var E=g.delegate;if(E){var i=k(E,g);if(i){if(i===s)continue;return i}}if("next"===g.method)g.sent=g._sent=g.arg;else if("throw"===g.method){if(B===w)throw B=h,g.arg;g.dispatchException(g.arg)}else"return"===g.method&&g.abrupt("return",g.arg);B=G;var o=a(A,I,g);if("normal"===o.type){if(B=g.done?h:F,o.arg===s)continue;return{value:o.arg,done:g.done}}"throw"===o.type&&(B=h,g.method="throw",g.arg=o.arg)}}}(A,g,E),Q}function a(A,I,g){try{return{type:"normal",arg:A.call(I,g)}}catch(A){return{type:"throw",arg:A}}}A.wrap=D;var w="suspendedStart",F="suspendedYield",G="executing",h="completed",s={};function R(){}function U(){}function y(){}var t={};o(t,Q,(function(){return this}));var S=Object.getPrototypeOf,M=S&&S(S(e([])));M&&M!==g&&B.call(M,Q)&&(t=M);var n=y.prototype=R.prototype=Object.create(t);function c(A){["next","throw","return"].forEach((function(I){o(A,I,(function(A){return this._invoke(I,A)}))}))}function r(A,I){function g(C,Q,E,i){var o=a(A[C],A,Q);if("throw"!==o.type){var D=o.arg,w=D.value;return w&&"object"==typeof w&&B.call(w,"__await")?I.resolve(w.__await).then((function(A){g("next",A,E,i)}),(function(A){g("throw",A,E,i)})):I.resolve(w).then((function(A){D.value=A,E(D)}),(function(A){return g("throw",A,E,i)}))}i(o.arg)}var C;this._invoke=function(A,B){function Q(){return new I((function(I,C){g(A,B,I,C)}))}return C=C?C.then(Q,Q):Q()}}function k(A,g){var B=A.iterator[g.method];if(B===I){if(g.delegate=null,"throw"===g.method){if(A.iterator.return&&(g.method="return",g.arg=I,k(A,g),"throw"===g.method))return s;g.method="throw",g.arg=new TypeError("The iterator does not provide a 'throw' method")}return s}var C=a(B,A.iterator,g.arg);if("throw"===C.type)return g.method="throw",g.arg=C.arg,g.delegate=null,s;var Q=C.arg;return Q?Q.done?(g[A.resultName]=Q.value,g.next=A.nextLoc,"return"!==g.method&&(g.method="next",g.arg=I),g.delegate=null,s):Q:(g.method="throw",g.arg=new TypeError("iterator result is not an object"),g.delegate=null,s)}function K(A){var I={tryLoc:A[0]};1 in A&&(I.catchLoc=A[1]),2 in A&&(I.finallyLoc=A[2],I.afterLoc=A[3]),this.tryEntries.push(I)}function N(A){var I=A.completion||{};I.type="normal",delete I.arg,A.completion=I}function Y(A){this.tryEntries=[{tryLoc:"root"}],A.forEach(K,this),this.reset(!0)}function e(A){if(A){var g=A[Q];if(g)return g.call(A);if("function"==typeof A.next)return A;if(!isNaN(A.length)){var C=-1,E=function g(){for(;++C<A.length;)if(B.call(A,C))return g.value=A[C],g.done=!1,g;return g.value=I,g.done=!0,g};return E.next=E}}return{next:J}}function J(){return{value:I,done:!0}}return U.prototype=y,o(n,"constructor",y),o(y,"constructor",U),U.displayName=o(y,i,"GeneratorFunction"),A.isGeneratorFunction=function(A){var I="function"==typeof A&&A.constructor;return!!I&&(I===U||"GeneratorFunction"===(I.displayName||I.name))},A.mark=function(A){return Object.setPrototypeOf?Object.setPrototypeOf(A,y):(A.__proto__=y,o(A,i,"GeneratorFunction")),A.prototype=Object.create(n),A},A.awrap=function(A){return{__await:A}},c(r.prototype),o(r.prototype,E,(function(){return this})),A.AsyncIterator=r,A.async=function(I,g,B,C,Q){void 0===Q&&(Q=Promise);var E=new r(D(I,g,B,C),Q);return A.isGeneratorFunction(g)?E:E.next().then((function(A){return A.done?A.value:E.next()}))},c(n),o(n,i,"Generator"),o(n,Q,(function(){return this})),o(n,"toString",(function(){return"[object Generator]"})),A.keys=function(A){var I=[];for(var g in A)I.push(g);return I.reverse(),function g(){for(;I.length;){var B=I.pop();if(B in A)return g.value=B,g.done=!1,g}return g.done=!0,g}},A.values=e,Y.prototype={constructor:Y,reset:function(A){if(this.prev=0,this.next=0,this.sent=this._sent=I,this.done=!1,this.delegate=null,this.method="next",this.arg=I,this.tryEntries.forEach(N),!A)for(var g in this)"t"===g.charAt(0)&&B.call(this,g)&&!isNaN(+g.slice(1))&&(this[g]=I)},stop:function(){this.done=!0;var A=this.tryEntries[0].completion;if("throw"===A.type)throw A.arg;return this.rval},dispatchException:function(A){if(this.done)throw A;var g=this;function C(B,C){return i.type="throw",i.arg=A,g.next=B,C&&(g.method="next",g.arg=I),!!C}for(var Q=this.tryEntries.length-1;Q>=0;--Q){var E=this.tryEntries[Q],i=E.completion;if("root"===E.tryLoc)return C("end");if(E.tryLoc<=this.prev){var o=B.call(E,"catchLoc"),D=B.call(E,"finallyLoc");if(o&&D){if(this.prev<E.catchLoc)return C(E.catchLoc,!0);if(this.prev<E.finallyLoc)return C(E.finallyLoc)}else if(o){if(this.prev<E.catchLoc)return C(E.catchLoc,!0)}else{if(!D)throw new Error("try statement without catch or finally");if(this.prev<E.finallyLoc)return C(E.finallyLoc)}}}},abrupt:function(A,I){for(var g=this.tryEntries.length-1;g>=0;--g){var C=this.tryEntries[g];if(C.tryLoc<=this.prev&&B.call(C,"finallyLoc")&&this.prev<C.finallyLoc){var Q=C;break}}Q&&("break"===A||"continue"===A)&&Q.tryLoc<=I&&I<=Q.finallyLoc&&(Q=null);var E=Q?Q.completion:{};return E.type=A,E.arg=I,Q?(this.method="next",this.next=Q.finallyLoc,s):this.complete(E)},complete:function(A,I){if("throw"===A.type)throw A.arg;return"break"===A.type||"continue"===A.type?this.next=A.arg:"return"===A.type?(this.rval=this.arg=A.arg,this.method="return",this.next="end"):"normal"===A.type&&I&&(this.next=I),s},finish:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.finallyLoc===A)return this.complete(g.completion,g.afterLoc),N(g),s}},catch:function(A){for(var I=this.tryEntries.length-1;I>=0;--I){var g=this.tryEntries[I];if(g.tryLoc===A){var B=g.completion;if("throw"===B.type){var C=B.arg;N(g)}return C}}throw new Error("illegal catch attempt")},delegateYield:function(A,g,B){return this.delegate={iterator:e(A),resultName:g,nextLoc:B},"next"===this.method&&(this.arg=I),s}},A}(A.exports);try{regeneratorRuntime=I}catch(A){"object"==typeof globalThis?globalThis.regeneratorRuntime=I:Function("r","regeneratorRuntime = r")(I)}},654:()=>{},231:()=>{},703:()=>{}},I={};function g(B){var C=I[B];if(void 0!==C)return C.exports;var Q=I[B]={exports:{}};return A[B](Q,Q.exports,g),Q.exports}g.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return g.d(I,{a:I}),I},g.d=(A,I)=>{for(var B in I)g.o(I,B)&&!g.o(A,B)&&Object.defineProperty(A,B,{enumerable:!0,get:I[B]})},g.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),g.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I);var B={};return(()=>{"use strict";function A(A,I,g,B,C,Q,E){try{var i=A[Q](E),o=i.value}catch(A){return void g(A)}i.done?I(o):Promise.resolve(o).then(B,C)}function I(I){return function(){var g=this,B=arguments;return new Promise((function(C,Q){var E=I.apply(g,B);function i(I){A(E,C,Q,i,o,"next",I)}function o(I){A(E,C,Q,i,o,"throw",I)}i(void 0)}))}}function C(A,I){if(!(A instanceof I))throw new TypeError("Cannot call a class as a function")}function Q(A,I){for(var g=0;g<I.length;g++){var B=I[g];B.enumerable=B.enumerable||!1,B.configurable=!0,"value"in B&&(B.writable=!0),Object.defineProperty(A,B.key,B)}}function E(A,I,g){return I&&Q(A.prototype,I),g&&Q(A,g),A}g.d(B,{default:()=>n});var i=g(757),o=g.n(i);function D(A){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(A){return typeof A}:function(A){return A&&"function"==typeof Symbol&&A.constructor===Symbol&&A!==Symbol.prototype?"symbol":typeof A},D(A)}var a,w=(a=(a="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(A){A=void 0!==(A=A||{})?A:{};var I,B={};for(I in A)A.hasOwnProperty(I)&&(B[I]=A[I]);var C=[],Q="./this.program",E=function(A,I){throw I},i=!1,o=!1,w=!1,F=!1;i="object"===("undefined"==typeof window?"undefined":D(window)),o="function"==typeof importScripts,w="object"===("undefined"==typeof process?"undefined":D(process))&&"object"===D(process.versions)&&"string"==typeof process.versions.node,F=!i&&!w&&!o;var G,h,s,R,U="";function y(I){return A.locateFile?A.locateFile(I,U):U+I}w?(U=o?g(703).dirname(U)+"/":"//",G=function(A,I){var B=jg(A);return B?I?B:B.toString():(s||(s=g(231)),R||(R=g(703)),A=R.normalize(A),s.readFileSync(A,I?null:"utf8"))},h=function(A){var I=G(A,!0);return I.buffer||(I=new Uint8Array(I)),H(I.buffer),I},process.argv.length>1&&(Q=process.argv[1].replace(/\\/g,"/")),C=process.argv.slice(2),process.on("uncaughtException",(function(A){if(!(A instanceof NB))throw A})),process.on("unhandledRejection",JA),E=function(A){process.exit(A)},A.inspect=function(){return"[Emscripten Module object]"}):F?("undefined"!=typeof read&&(G=function(A){var I=jg(A);return I?Vg(I):read(A)}),h=function(A){var I;return(I=jg(A))?I:"function"==typeof readbuffer?new Uint8Array(readbuffer(A)):(H("object"===D(I=read(A,"binary"))),I)},"undefined"!=typeof scriptArgs?C=scriptArgs:void 0!==arguments&&(C=arguments),"function"==typeof quit&&(E=function(A){quit(A)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(i||o)&&(o?U=self.location.href:document.currentScript&&(U=document.currentScript.src),a&&(U=a),U=0!==U.indexOf("blob:")?U.substr(0,U.lastIndexOf("/")+1):"",G=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.send(null),I.responseText}catch(I){var g=jg(A);if(g)return Vg(g);throw I}},o&&(h=function(A){try{var I=new XMLHttpRequest;return I.open("GET",A,!1),I.responseType="arraybuffer",I.send(null),new Uint8Array(I.response)}catch(I){var g=jg(A);if(g)return g;throw I}}));var t=A.print||console.log.bind(console),S=A.printErr||console.warn.bind(console);for(I in B)B.hasOwnProperty(I)&&(A[I]=B[I]);function M(A){var I=AA[iA>>2],g=I+A+15&-16;return g>Sg()&&JA(),AA[iA>>2]=g,I}B=null,A.arguments&&(C=A.arguments),A.thisProgram&&(Q=A.thisProgram),A.quit&&(E=A.quit);var n,c,r,k={"f64-rem":function(A,I){return A%I},debugger:function(){}},K=(new Array(0),0),N=function(A){K=A},Y=function(){return K};A.wasmBinary&&(n=A.wasmBinary),A.noExitRuntime&&(c=A.noExitRuntime),"object"!==("undefined"==typeof WebAssembly?"undefined":D(WebAssembly))&&S("no native wasm support detected");var e=new WebAssembly.Table({initial:878,maximum:878,element:"anyfunc"}),J=!1;function H(A,I){A||JA("Assertion failed: "+I)}function L(A){return hA?RB(A):M(A)}var q="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function d(A,I,g){for(var B=I+g,C=I;A[C]&&!(C>=B);)++C;if(C-I>16&&A.subarray&&q)return q.decode(A.subarray(I,C));for(var Q="";I<C;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)Q+=String.fromCharCode(E);else{var D=E-65536;Q+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else Q+=String.fromCharCode((31&E)<<6|i)}else Q+=String.fromCharCode(E)}return Q}function f(A,I){return A?d(z,A,I):""}function l(A,I,g,B){if(!(B>0))return 0;for(var C=g,Q=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=Q)break;I[g++]=i}else if(i<=2047){if(g+1>=Q)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=Q)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=Q)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-C}function u(A,I,g){return l(A,z,I,g)}function W(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&(B=65536+((1023&B)<<10)|1023&A.charCodeAt(++g)),B<=127?++I:I+=B<=2047?2:B<=65535?3:4}return I}var p="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function Z(A){for(var I=A,g=I>>1;_[g];)++g;if((I=g<<1)-A>32&&p)return p.decode(z.subarray(A,I));for(var B=0,C="";;){var Q=_[A+2*B>>1];if(0==Q)return C;++B,C+=String.fromCharCode(Q)}}function b(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,C=(g-=2)<2*A.length?g/2:A.length,Q=0;Q<C;++Q){var E=A.charCodeAt(Q);_[I>>1]=E,I+=2}return _[I>>1]=0,I-B}function x(A){return 2*A.length}function m(A){for(var I=0,g="";;){var B=AA[A+4*I>>2];if(0==B)return g;if(++I,B>=65536){var C=B-65536;g+=String.fromCharCode(55296|C>>10,56320|1023&C)}else g+=String.fromCharCode(B)}}function X(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,C=B+g-4,Q=0;Q<A.length;++Q){var E=A.charCodeAt(Q);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++Q)),AA[I>>2]=E,(I+=4)+4>C)break}return AA[I>>2]=0,I-B}function V(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function O(A){var I=W(A)+1,g=RB(I);return g&&l(A,v,g,I),g}function T(A,I){v.set(A,I)}function j(A,I,g){for(var B=0;B<A.length;++B)v[I++>>0]=A.charCodeAt(B);g||(v[I>>0]=0)}var P,v,z,_,$,AA,IA,gA,BA,CA=65536;function QA(I){P=I,A.HEAP8=v=new Int8Array(I),A.HEAP16=_=new Int16Array(I),A.HEAP32=AA=new Int32Array(I),A.HEAPU8=z=new Uint8Array(I),A.HEAPU16=$=new Uint16Array(I),A.HEAPU32=IA=new Uint32Array(I),A.HEAPF32=gA=new Float32Array(I),A.HEAPF64=BA=new Float64Array(I)}var EA=5304176,iA=61104,oA=A.TOTAL_MEMORY||268435456;function DA(I){for(;I.length>0;){var g=I.shift();if("function"!=typeof g){var B=g.func;"number"==typeof B?void 0===g.arg?A.dynCall_v(B):A.dynCall_vi(B,g.arg):B(void 0===g.arg?null:g.arg)}else g()}}(r=A.wasmMemory?A.wasmMemory:new WebAssembly.Memory({initial:oA/CA,maximum:oA/CA}))&&(P=r.buffer),oA=P.byteLength,QA(P),AA[iA>>2]=EA;var aA=[],wA=[],FA=[],GA=[],hA=!1;function sA(){if(A.preRun)for("function"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)tA(A.preRun.shift());DA(aA)}function RA(){hA=!0,A.noFSInit||iI.init.initialized||iI.init(),QI.init(),DA(wA)}function UA(){iI.ignorePermissions=!1,DA(FA)}function yA(){if(A.postRun)for("function"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)SA(A.postRun.shift());DA(GA)}function tA(A){aA.unshift(A)}function SA(A){GA.unshift(A)}var MA=Math.abs,nA=Math.ceil,cA=Math.floor,rA=Math.min,kA=0,KA=null,NA=null;function YA(I){kA++,A.monitorRunDependencies&&A.monitorRunDependencies(kA)}function eA(I){if(kA--,A.monitorRunDependencies&&A.monitorRunDependencies(kA),0==kA&&(null!==KA&&(clearInterval(KA),KA=null),NA)){var g=NA;NA=null,g()}}function JA(I){throw A.onAbort&&A.onAbort(I),t(I+=""),S(I),J=!0,I="abort("+I+"). Build with -s ASSERTIONS=1 for more info.",new WebAssembly.RuntimeError(I)}A.preloadedImages={},A.preloadedAudios={};var HA="data:application/octet-stream;base64,";function LA(A){return String.prototype.startsWith?A.startsWith(HA):0===A.indexOf(HA)}var qA,dA,fA="data:application/octet-stream;base64,AGFzbQEAAAABjwhzYAF/AX9gAX8AYAJ/fwF/YAJ/fwBgA39/fwF/YAV/f39/fwBgA39/fwBgBH9/f38AYAV/f39/fwF/YAR/f39/AX9gBn9/f39/fwF/YAAAYAZ/f39/f38AYAd/f39/f39/AGAIf39/f39/f38Bf2AHf39/f39/fwF/YAABf2ABfQF9YAF/AXxgBX9/f398AX9gA39+fwF+YAV/f39/fgF/YAh/f39/f39/fwBgCn9/f39/f39/f38AYAN/f30AYAN/f3wAYAJ/fABgBn9/f39/fAF/YAN/f38BfWACfX0BfWACf38BfGADf39/AXxgAnx8AXxgCX9/f39/f39/fwF/YAZ/fH9/f38Bf2AEf39/fwF+YAF8AXxgBX9/fn9/AGACf30AYAp/f39/f39/f39/AX9gDH9/f39/f39/f39/fwF/YAV/fX1/fwF/YAF9AX9gAX8BfWAGf39/f39/AXxgAnx/AXxgD39/f39/f39/f39/f39/fwBgDX9/f39/fX19fX19fX0AYAR/f399AGAFf399fX8AYAV/fX19fQBgBn98fH9/fwBgC39/f39/f39/f39/AX9gEX9/f39/f39/f319fX19fX19AX9gBn9/fX1/fwF/YAJ+fwF/YAF8AX9gBH9/f34BfmACf38BfWAEf39/fwF9YAN/fX0BfWABfAF9YAl/f39/f39/f38AYBF/f39/f39/f399fX19fX19fQBgBn9/f39/fQBgCH9/f39/fX19AGAJf39/f399fX19AGAFf39/fX0AYAd/f399fX1/AGAEf39/fABgA39/fgBgBn9/fX99fwBgAn9+AGADf35/AGADf319AGAEf319fwBgBn99fX19fwBgBH98fH8AYAx/f39/f39/f39/fH8Bf2AOf39/f39/f39/f3x/f38Bf2ATf39/f39/f39/fH9/f39/f39/fwF/YAx/f39/f39/f31/f38Bf2Aif39/f39/f398fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fwF/YAd/f39/f398AX9gB39/f398f38Bf2ADf399AX9gBX9/fX1/AX9gB39/fH9/f38Bf2APf398fHx8fHx8fHx8fHx8AX9gBH9+f38Bf2ACf30Bf2AFf319fX0Bf2ACf3wBf2ADfn9/AX9gAn1/AX9gAnx/AX9gAX8BfmACf38BfmACfn4BfmAFf39/f38BfWAHf39/f39/fwF9YAd/f39/f399AX1gBn9/f39/fQF9YAZ/f39/fX0BfWAEf39/fQF9YAN/f30BfWAFf319f38BfWACfX8BfWADfX19AX1gBH19fX0BfWAFf39/f38BfGAEf398fwF8YAN8fH8BfGADfHx8AXxgBnx8fHx8fAF8ApsEPANlbnYBYQALA2VudgFiAAEDZW52AWMAAQNlbnYBZAABA2VudgFlAAYDZW52AWYAAANlbnYBZwADA2VudgFoABADZW52AWkABgNlbnYBagAMA2VudgFrAAUDZW52AWwAEANlbnYBbQABA2VudgFuAAADZW52AW8AAQNlbnYBcAADA2VudgFxAAIDZW52AXIABQNlbnYBcwAGA2VudgF0AAADZW52AXUAAgNlbnYBdgADA2VudgF3AAYDZW52AXgAGQNlbnYBeQAAA2VudgF6AAIDZW52AUEAAQNlbnYBQgAHA2VudgFDAAYDZW52AUQACAhhc20yd2FzbQdmNjQtcmVtACADZW52AUUACANlbnYBRgAJA2VudgFHAAkDZW52AUgAAANlbnYBSQAkA2VudgFKAAADZW52AUsABANlbnYBTAAEA2VudgFNABADZW52AU4AUgNlbnYBTwAPA2VudgFQABMDZW52AVEAWANlbnYBUgACA2VudgFTAAMDZW52AVQAAwNlbnYBVQAFA2VudgFWAAkDZW52AVcACQNlbnYBWAACA2VudgFZAAIDZW52AVoAAgNlbnYBXwACA2VudgEkAAEDZW52DF9fdGFibGVfYmFzZQN/AAZnbG9iYWwDTmFOA3wABmdsb2JhbAhJbmZpbml0eQN8AANlbnYGbWVtb3J5AgGAIIAgA2VudgV0YWJsZQFwAe4G7gYDyAvGCwIBAgIDAQcCAQMCACoABAEBAgEDAwQ8AgICAAAAAAEDAwBqKwYQAgEDAAkAAQQGCgkCEQEBAikDAQAABjgABQUIBwMCAwgEBgBtBEgEAxwAAwEEAAIDGiwDPT0qCRgBAwoICAgJAB0CLQgcAw4OCikGBgkGVAQJAwcCAgACAAQDMAYYACoGADcCAwIGAgIAAgEHBw4GAwYnAScAESBwBgAJCQJlZAMBHQYGMQMdAzYCBAIDCAYCBgMCAw0DAAYAYgwCBwZOBgodOgMA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dCABaigCACIERQ0AIAAgBEYEQCADQQN0QQRqIAFqKAIADwUgA0EBaiEDDAILAAsLQQALcgEDfyMGIQMjBkEQaiQGIAJBb0sEQBAACyACQQtJBEAgACACOgALBSAAIAJBEGpBcHEiBBBRIgU2AgAgACAEQYCAgIB4cjYCCCAAIAI2AgQgBSEACyAAIAEgAhCoASADQQA6AAAgACACaiADEF8gAyQGCwQAQQALDQAgACADlCABIAKUkwsbACACBH8gACgCBCABKAIEELMBRQUgACABRgsLRQICfwF+IAAgATcDcCAAIAAoAggiAiAAKAIEIgNrrCIENwN4IAFCAFIgBCABVXEEQCAAIAMgAadqNgJoBSAAIAI2AmgLCycBAn8jBiEDIwZBEGokBiADIAI2AgAgACABIAMQlQMhBCADJAYgBAsoAQJ/An8jBiEDIwZBEGokBiAAQQJBzIcBQZjPAkEeIAEQCSADCyQGCzEBAn0gASoCACAAKgIAIgOTIAIqAgQgACoCBCIEk5QgASoCBCAEkyACKgIAIAOTlJMLBwAgAEEIags8AQJ/IAAoAgQgACgCACIDa0ECdSICIAFJBEAgACABIAJrEP8IBSACIAFLBEAgACABQQJ0IANqNgIECwsLEwAgAEGgiwE2AgAgAEEEahDoCQuBAQACQAJAIAIoAgRBsAFxQRh0QRh1QRBrIgIEQCACQRBGBEAMAgUMAwsACwJAAkAgACwAACICQStrDgMAAQABCyAAQQFqIQAMAgsgAkEwRiABIABrQQFKcUUNASAALAABQdgAayIBQQAgAUEgRxsNASAAQQJqIQAMAQsgASEACyAACwoAIABBUGpBCkkLQQECf0EMEEQiAgRAIAIgASAAQQN0bBBEIgM2AgAgAwRAIAIgADYCBCACIAE2AggFIAIQOEEAIQILBUEAIQILIAIL3AEBAX8gACgCACECIAAgASgCADYCACABIAI2AgAgACgCBCECIAAgASgCBDYCBCABIAI2AgQgACgCCCECIAAgASgCCDYCCCABIAI2AgggACgCDCECIAAgASgCDDYCDCABIAI2AgwgACgCECECIAAgASgCEDYCECABIAI2AhAgACgCFCECIAAgASgCFDYCFCABIAI2AhQgACgCGCECIAAgASgCGDYCGCABIAI2AhggACgCHCECIAAgASgCHDYC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J0sEQCAAECRFBEBBpMUDQTA2AgBBfw8LC0Gw3QMgADYCACABCwsAIAC7EN0JthBDCyoBAX8jBiEDIwZBEGokBiADIAI2AgAgAEH/////ByABIAMQqQEaIAMkBgsOACAAQeiJASgCABD/BAuGAQICfwF+IACnIQIgAEL/////D1YEQANAIAFBf2oiASAAIABCChD2ASIEQgp+fadB/wFxQTByOgAAIABC/////58BVgRAIAQhAAwBCwsgBKchAgsgAgRAA0AgAUF/aiIBIAIgAkEKEEgiA0EKbGtBMHI6AAAgAkEKTwRAIAMhAgwBCwsLIAELGgAgACABEKoCIgBBACAALQAAIAFB/wFxRhsLKAECfwJ/IwYhAyMGQRBqJAYgAEEDQYCHAUGutwJBAiABEAkgAwskBgsNACAAKAIEIAEoAgRLCxAAIAAgATYCACAAIAI2AgQLDQAgACgCECABQRRsagsQACAAKAIEIAEgACgCAGxqCwgAIABB9ABqCwwAIAAgASAAIAFKGws/AQJ/IAAoAgQhAiAAKAIIIQEDQCABIAJHBEAgACABQXxqIgE2AggMAQsLIAAoAgAiAQRAIAAoAgwaIAEQOAsLcwEBfyAAQQA2AgwgACADNgIQIAEEQCABQf////8DSwRAQQgQBSIDEIgBIANBtIsBNgIAIANB+PcAQRYQBAUgAUECdBBRIQQLCyAAIAQ2AgAgACACQQJ0IARqIgI2AgggACACNgIEIAAgAUECdCAEajYCDAsGAEEYEAILCABBDRACQQALiwEBA38jBiEDIwZBEGokBiACQe////8DSwRAEAALIAJBAkkEQCAAIAI6AAsgACEEBSACQQRqQXxxIgVB/////wNLBEAQAAUgACAFQQJ0EFEiBDYCACAAIAVBgICAgHhyNgIIIAAgAjYCBAsLIAQgASACEKcBIANBADYCACACQQJ0IARqIAMQbiADJAYLuQEBBX8jBiEDIwZBEGokBiADIAE6AAAgACwACyIBQQBIIgUEfyAAKAIEIQIgACgCCEH/////B3FBf2oFIAFB/wFxIQJBCgshASADQQFqIQQCQAJAIAEgAkYEQCAAIAFBASABIAEQ3QIgACwAC0EASA0BBSAFDQELIAAgAkEBajoACwwBCyAAKAIAIQYgACACQQFqNgIEIAYhAAsgACACaiIAIAMQXyAEQQA6AAAgAEEBaiAEEF8gAyQGC7gBAQV/IAIoAgAgACgCACIDIgZrIgVBAXQiBEEEIAQbQX8gBUH/////B0kbIQUgASgCACEHIANBACAAKAIEQZEBRyIEGyAFEOgBIgNFBEAQAAsgBARAIAAgAzYCAAUgACgCACEEIAAgAzYCACAEBEAgBCAAKAIEQf8BcUGsA2oRAQAgACgCACEDCwsgAEGSATYCBCABIAcgBmtBAnVBAnQgA2o2AgAgAiAAKAIAIAVBAnZBAnRqNgIAC6QDAQN/An8CQCACIAMoAgAiCkYiC0UNACAAIAkoAmBGIgxFBEAgCSgCZCAARw0BCyADIAJBAWo2AgAgAkErQS0gDBs6AAAgBEEANgIAQQAMAQsgACAFRiAGKAIEIAYsAAsiBkH/AXEgBkEASBtBAEdxBEBBACAIKAIAIgAgB2tBoAFODQEaIAQoAgAhASAIIABBBGo2AgAgACABNgIAIARBADYCAEEADAELIAlB6ABqIQdBACEFA38gBUEaRgR/IAcFIAVBAWohBiAAIAVBAnQgCWoiBSgCAEYEfyAFBSAGIQUMAgsLCyAJayIFQQJ1IQAgBUHcAEoEf0F/BQJAAkACQCABQQhrDgkAAgACAgICAgECC0F/IAAgAU4NAxoMAQsgBUHYAE4EQEF/IAsNAxpBfyAKIAJrQQNODQMaQX8gCkF/aiwAAEEwRw0DGiAEQQA2AgAgAEHw7wBqLAAAIQAgAyAKQQFqNgIAIAogADoAAEEADAMLCyAAQfDvAGosAAAhACADIApBAWo2AgAgCiAAOgAAIAQgBCgCAEEBajYCAEEACwsLDQAgACgCABA4IAAQOAurAwEDfwJ/AkAgAiADKAIAIgpGIgtFDQAgCS0AGCAAQf8BcUYiDEUEQCAJLQAZIABB/wFxRw0BCyADIAJBAWo2AgAgAkErQS0gDBs6AAAgBEEANgIAQQAMAQsgAEH/AXEgBUH/AXFGIAYoAgQgBiwACyIGQf8BcSAGQQBIG0EAR3EEQEEAIAgoAgAiACAHa0GgAU4NARogBCgCACEBIAggAEEEajYCACAAIAE2AgAgBEEANgIAQQAMAQsgCUEaaiEHQQAhBQN/IAVBGkYEfyAHBSAFQQFqIQYgBSAJaiIFLQAAIABB/wFxRgR/IAUFIAYhBQwCCwsLIAlrIgBBF0oEf0F/BQJAAkACQCABQQhrDgkAAgACAgICAgECC0F/IAAgAU4NAxoMAQsgAEEWTgRAQX8gCw0DGkF/IAogAmtBA04NAxpBfyAKQX9qLAAAQTBHDQMaIARBADYCACAAQfDvAGosAAAhACADIApBAWo2AgAgCiAAOgAAQQAMAwsLIABB8O8AaiwAACEAIAMgCkEBajYCACAKIAA6AAAgBCAEKAIAQQFqNgIAQQALCwuoFQEJfyMGIQIjBkEQaiQGIAIiBUEEaiEDIAJBCGoiBiAANgIAIABB1AFJBEBB8OwAQbDuACAGENcEKAIAIQAFAkAgAyAAIABB0gEQSCIIQdIBbCICazYCAEEAIQBBsO4AQfDvACADENcEQbDuAGtBAnUhBwJAA0ACQCACIAdBAnRBsO4AaigCAGohA0EFIQICQAJAA0AgAkEvTw0BIAMgAkECdEHw7ABqKAIAIgEQSCIEIAFJDQMgAkEBaiECIAEgBGwgA0cNAAsMAQtB0wEhAgNAAkAgAyACEEgiASACSQR/IAMhAEEBBSADIAEgAmxGBH9BCQUgAyACQQpqIgEQSCIEIAFJBH8gASECIAMhAEEBBSADIAEgBGxGBH8gASECQQkFIAMgAkEMaiIBEEgiBCABSQR/IAEhAiADIQBBAQUgAyABIARsRgR/IAEhAkEJBSADIAJBEGoiARBIIgQgAUkEfyABIQIgAyEAQQEFIAMgASAEbEYEfyABIQJBCQUgAyACQRJqIgEQSCIEIAFJBH8gASECIAMhAEEBBSADIAEgBGxGBH8gASECQQkFIAMgAkEWaiIBEEgiBCABSQR/IAEhAiADIQBBAQUgAyABIARsRgR/IAEhAkEJBSADIAJBHGoiARBIIgQgAUkEfyABIQIgAyEAQQEFIAMgASAEbEYEfyABIQJBCQUCfyADIAJBHmoiARBIIgQgAUkEQCABIQIgAyEAQQEMAQsgAyABIARsRgRAIAEhAkEJDAELIAMgAkEkaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQShqIgEQSCIEIAFJBEAgASECIAMhAEEBDAELIAMgASAEbEYEQCABIQJBCQwBCyADIAJBKmoiARBIIgQgAUkEQCABIQIgAyEAQQEMAQsgAyABIARsRgRAIAEhAkEJDAELIAMgAkEuaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQTRqIgEQSCIEIAFJBEAgASECIAMhAEEBDAELIAMgASAEbEYEQCABIQJBCQwBCyADIAJBOmoiARBIIgQgAUkEQCABIQIgAyEAQQEMAQsgAyABIARsRgRAIAEhAkEJDAELIAMgAkE8aiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcIAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQcYAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQcgAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQc4AaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQdIAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQdgAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeAAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeQAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeYAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQeoAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQewAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQfAAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyABIARsIANGBEAgASECQQkMAQsgAyACQfgAaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQf4AaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQYIBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQYgBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQYoBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQY4BaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQZQBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQZYBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQZwBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQaIBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQaYBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQagBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQawBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQbIBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQbQBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQboBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQb4BaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcABaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcQBaiIBEEgiBCABSQRAIAEhAiADIQBBAQwBCyADIAEgBGxGBEAgASECQQkMAQsgAyACQcYBaiIBEEgiBCABSQRAIAEhAiAD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BiwAAwRAQQEhAgNAIARBkAFqIAFBAnQgCmooAgBBBXQiCUECdGpBAzYCACAJIARBkAlqaiABIAZBEWpqIgMsAAA6AAAgBEGQAWogCUEBciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogCUEDciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUECaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEDaiIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogCUEHciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUECaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEDaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEEaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEFaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEGaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEHaiIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogCUEPciIFQQJ0akEDNgIAIAUgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEBaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUECaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEDaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEEaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEFaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEGaiIHQQJ0akEDNgIAIAcgBEGQCWpqIAMsAAA6AAAgBEGQAWogBUEHaiIH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AgggACgCBGusfSEBCwJAAkAgACgCFCAAKAIcTQ0AIABBAEEAIAAoAiRBP3FBygFqEQQAGiAAKAIUDQAMAQsgAEEANgIQIABBADYCHCAAQQA2AhQgACABIAIgACgCKEEDcUGmA2oRFABCAFMEf0F/BSAAQQA2AgggAEEANgIEIAAgACgCAEFvcTYCAEEACxoLC5EBAgF/An4CQAJAIAC9IgNCNIgiBKdB/w9xIgIEQCACQf8PRgRADAMFDAILAAsgASAARAAAAAAAAAAAYgR/IABEAAAAAAAA8EOiIAEQigMhACABKAIAQUBqBUEACzYCAAwBCyABIASnQf8PcUGCeGo2AgAgA0L/////////h4B/g0KAgICAgICA8D+EvyEACyAACxEAIAAEfyAAIAEQngEFQQALC74DAwF/AX4BfCABQRRNBEACQAJAAkACQAJAAkACQAJAAkACQAJAIAFBCWsOCgABAgMEBQYHCAkKCyACKAIAQQNqQXxxIgEoAgAhAyACIAFBBGo2AgAgACADNgIADAkLIAIoAgBBA2pBfHEiASgCACEDIAIgAUEEajYCACAAIAOsNwMADAgLIAIoAgBBA2pBfHEiASgCACEDIAIgAUEEajYCACAAIAOtNwMADAcLIAIoAgBBB2pBeHEiASkDACEEIAIgAUEIajYCACAAIAQ3AwAMBgsgAigCAEEDakF8cSIBKAIAIQMgAiABQQRqNgIAIAAgA0H//wNxQRB0QRB1rDcDAAwFCyACKAIAQQNqQXxxIgEoAgAhAyACIAFBBGo2AgAgACADQf//A3GtNwMADAQLIAIoAgBBA2pBfHEiASgCACEDIAIgAUEEajYCACAAIANB/wFxQRh0QRh1rDcDAAwDCyACKAIAQQNqQXxxIgEoAgAhAyACIAFBBGo2AgAgACADQf8Bca03AwAMAgsgAigCAEEHakF4cSIBKwMAIQUgAiABQQhqNgIAIAAgBTkDAAwBCyAAIAJB6QURAwALCwtAAQJ/IAAoAgAsAAAQigEEQANAIAAoAgAiAiwAACABQQpsQVBqaiEBIAAgAkEBajYCACACLAABEIoBDQALCyABCwkAIAAgARCfAQsJACAAIAEQjgULIgAgAL1C////////////AIMgAb1CgICAgICAgICAf4OEvwvgAwIDfwF+An4CQAJAAkACQCAAKAIEIgIgACgCaEkEfyAAIAJBAWo2AgQgAi0AAAUgABBUCyICQStrDgMAAQABCyACQS1GIQQgAUEARyAAKAIEIgMgACgCaEkEfyAAIANBAWo2AgQgAy0AAAUgABBUCyIDQVBqIgJBCUtxBH4gACgCaAR+IAAgACgCBEF/ajYCBAwEBUKAgICAgICAgIB/CwUgAyEBDAILDAMLIAIiAUFQaiECCyACQQlLDQBBACECA0AgAUFQaiACQQpsaiECIAJBzJmz5gBIIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIgFBUGoiA0EKSXENAAsgAqwhBSADQQpJBEADQCABrEJQfCAFQgp+fCEFIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIgFBUGoiAkEKSSAFQq6PhdfHwuujAVNxDQALIAJBCkkEQANAIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLQVBqQQpJDQALCwsgACgCaARAIAAgACgCBEF/ajYCBAtCACAFfSAFIAQbDAELIAAoAmgEQCAAIAAoAgRBf2o2AgQLQoCAgICAgICAgH8LC8kHAQV/AnwCQAJAAkACQAJAIAEOAwABAgMLQet+IQRBGCEFDAMLQc53IQRBNSEFDAILQc53IQRBNSEFDAELRAAAAAAAAAAADAELA0AgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAsiARCyAQ0ACwJAAkACQCABQStrDgMAAQABC0EBIAFBLUZBAXRrIQYgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAshAQwBC0EBIQYLAkACQAJAA38gA0H+/QJqLAAAIAFBIHJGBH8gA0EHSQRAIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIQELIANBAWoiA0EISQ0BQQgFIAMLCyIDQf////8HcUEDaw4GAQAAAAACAAsgAkEARyIHIANBA0txBEAgA0EIRg0CDAELIANFBEACQEEAIQMDfyADQbz+AmosAAAgAUEgckcNASADQQJJBEAgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAshAQsgA0EBaiIDQQNJDQBBAwshAwsLAkACQAJAIAMOBAECAgACCyAAKAIEIgEgACgCaEkEfyAAIAFBAWo2AgQgAS0AAAUgABBUC0EoRwRAIwEgACgCaEUNBRogACAAKAIEQX9qNgIEIwEMBQtBASEBA0BBACAAKAIEIgIgACgCaEkEfyAAIAJBAWo2AgQgAi0AAAUgABBUCyICQVBqQQpJIAJBv39qQRpJckUgAkHfAEYgAkGff2pBGklyG0UEQCABQQFqIQEMAQsLIwEgAkEpRg0EGiAAKAJoRSICRQRAIAAgACgCBEF/ajYCBAsgB0UEQEGkxQNBHDYCACAAQgAQggFEAAAAAAAAAAAMBQsjASABRQ0EGgNAIAJFBEAgACAAKAIEQX9qNgIECyMBIAFBf2oiAUUNBRoMAAALAAsgACABQTBGBH8gACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAtBIHJB+ABGBEAgACAFIAQgBiACEJAFDAULIAAoAmgEQCAAIAAoAgRBf2o2AgQLQTAFIAELIAUgBCAGIAIQjwUMAwsgACgCaARAIAAgACgCBEF/ajYCBAtBpMUDQRw2AgAgAEIAEIIBRAAAAAAAAAAADAILIAAoAmhFIgFFBEAgACAAKAIEQX9qNgIECyACQQBHIANBA0txBEADQCABRQRAIAAgACgCBEF/ajYCBAsgA0F/aiIDQQNLDQALCwsgBrIjAraUuwsLvgsCBX8FfiABQSRLBEBBpMUDQRw2AgBCACEDBQJAA0AgACgCBCIEIAAoAmhJBH8gACAEQQFqNgIEIAQtAAAFIAAQVAsiBBCyAQ0ACwJAAkAgBEEraw4DAAEAAQsgBEEtRkEfdEEfdSEHIAAoAgQiBCAAKAJoSQR/IAAgBEEBajYCBCAELQAABSAAEFQLIQQMAAsgAUUhBQJAAkACQCABQRByQRBGIARBMEZxBEACQCAAKAIEIgQgACgCaEkEfyAAIARBAWo2AgQgBC0AAAUgABBUCyIEQSByQfgARwRAIAUEQCAEIQJBCCEBDAQFIAQhAgwCCwALIAAoAgQiASAAKAJoSQR/IAAgAUEBajYCBCABLQAABSAAEFQLIgFBwdQAai0AAEEPSgRAIAAoAmhFIgFFBEAgACAAKAIEQX9qNgIECyACRQRAIABCABCCAUIAIQMMBwsgAQRAQgAhAwwHCyAAIAAoAgRBf2o2AgRCACEDDAYFIAEhAkEQIQEMAwsACwVBCiABIAUbIgEgBEHB1ABqLQAASwR/IAQFIAAoAmgEQCAAIAAoAgRBf2o2AgQLIABCABCCAUGkxQNBHDYCAEIAIQMMBQshAgsgAUEKRw0AIAJBUGoiAkEKSQRAQQAhAQNAIAFBCmwgAmohASAAKAIEIgIgACgCaEkEfyAAIAJBAWo2AgQgAi0AAAUgABBUCyIEQVBqIgJBCkkgAUGZs+bMAUlxDQALIAGtIQkgAkEKSQRAIAQhAQNAIAlCCn4iCiACrCILQn+FVgRAQQohAgwFCyAKIAt8IQkgACgCBCIBIAAoAmhJBH8gACABQQFqNgIEIAEtAAAFIAAQVAsiAUFQaiICQQpJIAlCmrPmzJmz5swZVHENAAsgAkEJTQRAQQohAgwECwsLDAILIAEgAUF/anFFBEAgAUEXbEEFdkEHcUGH/gJqLAAAIQYgASACQcHUAGosAAAiCEH/AXEiBUsEQEEAIQQgBSECA0AgBCAGdCACciIEQYCAgMAASSABIAAoAgQiAiAAKAJoSQR/IAAgAkEBajYCBCACLQAABSAAEFQLIgVBwdQAaiwAACIIQf8BcSICS3ENAAsgBK0hCSAFIQQgAiEFBSACIQQLIAghAiABIAVNQn8gBq0iCogiCyAJVHIEQCABIQIgBCEBDAILA0AgASAAKAIEIgQgACgCaEkEfyAAIARBAWo2AgQgBC0AAAUgABBUCyIFQcHUAGosAAAiBEH/AXFNIAJB/wFxrSAJIAqGhCIJIAtWcgRAIAEhAiAFIQEMAwUgBCECDAELAAALAAsgASACQcHUAGosAAAiBkH/AXEiBUsEQEEAIQQgBSECA0AgASAEbCACaiIEQcfj8ThJIAEgACgCBCICIAAoAmhJBH8gACACQQFqNgIEIAItAAAFIAAQVAsiBUHB1ABqLAAAIgZB/wFxIgJLcQ0ACyAErSEJIAUhBCACIQUFIAIhBAsgBiECIAGtIQogASAFSwR/Qn8gChD2ASELA38gCSALVgRAIAEhAiAEIQEMAwsgCSAKfiIMIAJB/wFxrSINQn+FVgRAIAEhAiAEIQEMAwsgDCANfCEJIAEgACgCBCICIAAoAmhJBH8gACACQQFqNgIEIAItAAAFIAAQVAsiBEHB1ABqLAAAIgJB/wFxSw0AIAEhAiAECwUgASECIAQLIQELIAIgAUHB1ABqLQAASwRAA0AgAiAAKAIEIgEgACgCaEkEfyAAIAFBAWo2AgQgAS0AAAUgABBUC0HB1ABqLQAASw0AC0GkxQNBxAA2AgAgB0EAIANCAYNQGyEHIAMhCQsLIAAoAmgEQCAAIAAoAgRBf2o2AgQLIAkgA1oEQCAHQQBHIANCAYNCAFJyRQRAQaTFA0HEADYCACADQn98IQMMAgsgCSADVgRAQaTFA0HEADYCAAwCCwsgCSAHrCIDhSADfSEDCwsgAwtSACAABEACQAJAAkACQAJAAkAgAUF+aw4GAAECAwUEBQsgACACPAAADAQLIAAgAj0BAAwDCyAAIAI+AgAMAgsgACACPgIADAELIAAgAjcDAAsLC0cBAn8jBiEDIwZBkAFqJAYgA0EAQZABEEUaIANBIzYCICADIAA2AiwgA0F/NgJMIAMgADYCVCADIAEgAhCUBSEEIAMkBiAEC5wCAQd/IAEoAkxBf0oEf0EBBUEACxpB/wEhBSAAIQQCQAJAA0ACQCABKAIIIAEoAgQiAiIGayEDIAJBCiADEKYCIghFIQcgBCACIAMgCEEBIAZraiAHGyICIAUgAiAFSRsiAxBMGiABIAMgASgCBGoiBjYCBCADIARqIQIgByAFIANrIgVBAEdxRQRAIAIhBAwDCyAGIAEoAghJBH8gASAGQQFqNgIEIAYtAAAFIAEQ9QEiBEEASA0BIAQLIQMgAkEBaiEEIAIgAzoAACAFQX9qIgVFIANB/wFxQQpGckUNAQwCCwsgACACRgR/QQAFIAEoAgBBEHEEfyACIQQMAgVBAAsLIQAMAQsgAARAIARBADoAAAVBACEACwsgAAvwAQEDfwJAAkAgAigCECIDDQAgAhCYAwR/QQAFIAIoAhAhAwwBCyEEDAELIAMgAigCFCIEayABSQRAIAIoAiQhAyACIAAgASADQT9xQcoBahEEACEEDAELIAFFIAIsAEtBAEhyBEBBACEDBQJAIAEhAwNAIAAgA0F/aiIFaiwAAEEKRwRAIAUEQCAFIQMMAgVBACEDDAMLAAsLIAIoAiQhBCACIAAgAyAEQT9xQcoBahEEACIEIANJDQIgACADaiEAIAEgA2shASACKAIUIQQLCyAEIAAgARBMGiACIAEgAigCFGo2AhQgASADaiEECyAEC2EBAX8gACAALABKIgEgAUH/AWpyOgBKIAAoAgAiAUEIcQR/IAAgAUEgcjYCAEF/BSAAQQA2AgggAEEANgIEIAAgACgCLCIBNgIcIAAgATYCFCAAIAEgACgCMGo2AhBBAAsLjAEBA38jBiEBIwZBEGokBiABQQo6AAACQAJAIAAoAhAiAg0AIAAQmANFBEAgACgCECECDAELDAELIAAoAhQiAyACSQRAIAAsAEtBCkcEQCAAIANBAWo2AhQgA0EKOgAADAILCyAAIAFBASAAKAIkQT9xQcoBahEEAEEBRgR/IAEtAAAFQX8LGgsgASQGCxwAIABBgGBLBH9BpMUDQQAgAGs2AgBBfwUgAAsLEQBBBEEBQeiJASgCACgCABsL7AECCX8BfSABKAIIIgggAigCBEYEfyAAKAIEIgogASgCBEYEfyAAKAIIIgkgAigCCEYEfyAAKAIAIQADfyADIApIBH8gAyAIbCELQQAhBANAIAQgCUgEQCAAQwAAAAA4AgAgAigCACAEQQJ0aiEFIAEoAgAgC0ECdGohBkEAIQdDAAAAACEMA0AgByAISARAIAAgDCAGKgIAIAUqAgCUkiIMOAIAIAlBAnQgBWohBSAGQQRqIQYgB0EBaiEHDAELCyAEQQFqIQQgAEEEaiEADAELCyADQQFqIQMMAQVBAAsLBUF/CwVBfwsFQX8LC0gBAX8gACgCBCIBRQRADwsgASgCJCEBIABBASABQT9xQbIFahEDACAAKAIQBEAgAEHIATYCFCAAQQA2ArgCBSAAQeQANgIUCwsyAQF/IAAoAgQiAQRAIAEoAighASAAIAFB/wFxQawDahEBAAsgAEEANgIEIABBADYCFAsgACAAKAIAIgFBMzYCFCAAIAEoAgBB/wFxQawDahEBAAsyAQF/IAAoAgggACgCBBCLASIBBEAgASAAEPEEQQBIBEAgARBJQQAhAQsFQQAhAQsgAQuCBAEJfyAAKALkAyIFIAAoAlhBAUYiAjYCHCAAKAIEKAIIIQEgBSAAQQFB/gVBgAIgAhsgACgCeCABQQ9xQYoCahEJACIENgIYIAUoAhQhASAAKAJ4QQBMBEAPCyACRQRAA0AgASAFQSBqIANBAnRqKAIAIgIQOSEHIANBAnQgBGooAgAhBkEAIQEgAkH+AWogAkF/aiIIQQF0IgkQOSEEQQAhAgNAIAIgBEoEQANAIAIgCCABQQFqIgFBAXRBAXJB/wFsaiAJEDkiBEoNAAsLIAIgBmogASAHbDoAACACQQFqIgJBgAJHDQALIANBAWoiAyAAKAJ4SARAIAchASAFKAIYIQQMAQsLDwtBACECA0AgASAFQSBqIAJBAnRqKAIAIgMQOSEHIAJBAnQgBGoiASABKAIAQf8BajYCACAFKAIYIAJBAnRqKAIAIQZBACEBIANB/gFqIANBf2oiCEEBdCIJEDkhBEEAIQMDQCADIARKBEADQCADIAggAUEBaiIBQQF0QQFyQf8BbGogCRA5IgRKDQALCyADIAZqIAEgB2w6AAAgA0EBaiIDQYACRw0AC0EBIQEDQCAGIAFrIAYsAAA6AAAgBiABQf8BamogBiwA/wE6AAAgAUEBaiIBQYACRw0ACyACQQFqIgIgACgCeEgEQCAHIQEgBSgCGCEEDAELCwvjHwEdfyMGIRcjBkGAC2okBiAXQYADaiEEIBdBgAFqIRkgACgC5AMoAhghGiABQQJ2QQV0IgVBBHIiFCAFQRxyIgxqQQF1IQ4gAkEDdkEFdCIFQQJyIhUgBUEeciIPakEBdSEQIANBAnZBBXQiBUEEciIWIAVBHHIiEWpBAXUhEiAAKAKEASILQQBKBH8gACgCiAEiBSgCACEKIAUoAgQhCSAFKAIIIRhB/////wchBwNAIBQgCCAKai0AACIFSgR/IAUgDGtBAXQiBiAGbCENIAUgFGtBAXQiBSAFbAUCfyAMIAVIBEAgBSAUa0EBdCIGIAZsIQ0gBSAMa0EBdCIFIAVsDAELIA4gBUgEQCAFIBRrQQF0IgUgBWwhDQUgBSAMa0EBdCIFIAVsIQ0LQQALCyEFIBUgCCAJai0AACIGSgR/IAUgBiAVa0EDbCIFIAVsaiEFIAYgD2tBA2wiBiAGbAUCfyAPIAZIBEAgBSAGIA9rQQNsIgUgBWxqIQUgBiAVa0EDbCIGIAZsDAELIBAgBkgEfyAGIBVrQQNsIgYgBmwFIAYgD2tBA2wiBiAGbAsLCyETIBYgCCAYai0AACIGSgR/IAUgBiAWayIFIAVsaiEFIAYgEWsiBiAGbAUCfyARIAZIBEAgBSAGIBFrIgUgBWxqIQUgBiAWayIGIAZsDAELIBIgBkgEfyAGIBZrIgYgBmwFIAYgEWsiBiAGbAsLCyEGIAhBAnQgBGogBTYCACANIBNqIAZqIgUgByAFIAdIGyEHIAsgCEEBaiIIRw0AC0EAIQVBACEIA38gCEECdCAEaigCACAHTARAIAUgGWogCDoAACAFQQFqIQULIAsgCEEBaiIIRw0AIAULBUEACyETIBchCCAEQf////8HNgIAIARB/////wc2AgQgBEH/////BzYCCCAEQf////8HNgIMIARB/////wc2AhAgBEH/////BzYCFCAEQf////8HNgIYIARB/////wc2AhwgBEH/////BzYCICAEQf////8HNgIkIARB/////wc2AiggBEH/////BzYCLCAEQf////8HNgIwIARB/////wc2AjQgBEH/////BzYCOCAEQf////8HNgI8IARBQGtB/////wc2AgAgBEH/////BzYCRCAEQf////8HNgJIIARB/////wc2AkwgBEH/////BzYCUCAEQf////8HNgJUIARB/////wc2AlggBEH/////BzYCXCAEQf////8HNgJgIARB/////wc2AmQgBEH/////BzYCaCAEQf////8HNgJsIARB/////wc2AnAgBEH/////BzYCdCAEQf////8HNgJ4IARB/////wc2AnwgBEH/////BzYCgAEgBEH/////BzYChAEgBEH/////BzYCiAEgBEH/////BzYCjAEgBEH/////BzYCkAEgBEH/////BzYClAEgBEH/////BzYCmAEgBEH/////BzYCnAEgBEH/////BzYCoAEgBEH/////BzYCpAEgBEH/////BzYCqAEgBEH/////BzYCrAEgBEH/////BzYCsAEgBEH/////BzYCtAEgBEH/////BzYCuAEgBEH/////BzYCvAEgBEH/////BzYCwAEgBEH/////BzYCxAEgBEH/////BzYCyAEgBEH/////BzYCzAEgBEH/////BzYC0AEgBEH/////BzYC1AEgBEH/////BzYC2AEgBEH/////BzYC3AEgBEH/////BzYC4AEgBEH/////BzYC5AEgBEH/////BzYC6AEgBEH/////BzYC7AEgBEH/////BzYC8AEgBEH/////BzYC9AEgBEH/////BzYC+AEgBEH/////BzYC/AEgBEH/////BzYCgAIgBEH/////BzYChAIgBEH/////BzYCiAIgBEH/////BzYCjAIgBEH/////BzYCkAIgBEH/////BzYClAIgBEH/////BzYCmAIgBEH/////BzYCnAIgBEH/////BzYCoAIgBEH/////BzYCpAIgBEH/////BzYCqAIgBEH/////BzYCrAIgBEH/////BzYCsAIgBEH/////BzYCtAIgBEH/////BzYCuAIgBEH/////BzYCvAIgBEH/////BzYCwAIgBEH/////BzYCxAIgBEH/////BzYCyAIgBEH/////BzYCzAIgBEH/////BzYC0AIgBEH/////BzYC1AIgBEH/////BzYC2AIgBEH/////BzYC3AIgBEH/////BzYC4AIgBEH/////BzYC5AIgBEH/////BzYC6AIgBEH/////BzYC7AIgBEH/////BzYC8AIgBEH/////BzYC9AIgBEH/////BzYC+AIgBEH/////BzYC/AIgBEH/////BzYCgAMgBEH/////BzYChAMgBEH/////BzYCiAMgBEH/////BzYCjAMgBEH/////BzYCkAMgBEH/////BzYClAMgBEH/////BzYCmAMgBEH/////BzYCnAMgBEH/////BzYCoAMgBEH/////BzYCpAMgBEH/////BzYCqAMgBEH/////BzYCrAMgBEH/////BzYCsAMgBEH/////BzYCtAMgBEH/////BzYCuAMgBEH/////BzYCvAMgBEH/////BzYCwAMgBEH/////BzYCxAMgBEH/////BzYCyAMgBEH/////BzYCzAMgBEH/////BzYC0AMgBEH/////BzYC1AMgBEH/////BzYC2AMgBEH/////BzYC3AMgBEH/////BzYC4AMgBEH/////BzYC5AMgBEH/////BzYC6AMgBEH/////BzYC7AMgBEH/////BzYC8AMgBEH/////BzYC9AMgBEH/////BzYC+AMgBEH/////BzYC/AMgE0EASgRAQQAhDwNAIBQgDyAZaiwAACILQf8BcSIHIAAoAogBIgYoAgBqLQAAayINQQF0IQwgFSAHIAYoAgRqLQAAayIFQQNsIQogBUHIAGwiBUGQAWohGCAWIAcgBigCCGotAABrIgdBBHQiBkFAayEOIAZBwAFqIRAgBkHAAmohEiAFQbADaiEbIAVB0AVqIRwgBUHwB2ohHSAFQZAKaiEeIAVBsAxqIR8gBUHQDmohIEEDIREgDUEGdEGAAmohDSAM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BEEAgABA/EAALEwAgACAAKAIEIgBBAWo2AgQgAAvFAwEIfyABBEACQCABQf////8DSwRAQQgQBSICEIgBIAJBtIsBNgIAIAJB+PcAQRYQBAsgAUECdBBRIQIgACgCACEDIAAgAjYCACADBEAgACgCBBogAxA4CyAAIAE2AgRBACECA0AgASACRwRAIAAoAgAgAkECdGpBADYCACACQQFqIQIMAQsLIABBCGohAyAAKAIIIgIEQCACKAIEIQQgASABQX9qIghxRSIJBH8gBCAIcQUgBCABTwR/IAQgARBOBSAECwshBiAAKAIAIAZBAnRqIAM2AgADQCACIQQDQAJAA0ACQCAEKAIAIgJFDQYgAigCBCEDIAYgCQR/IAMgCHEFIAMgAU8EfyADIAEQTgUgAwsLIgVGDQAgACgCACAFQQJ0aiIDKAIARQ0CIAIhAwNAIAMoAgAiBwRAIAIoAgggBygCCEYEQCAHIQMMAgsLCyAEIAc2AgAgAyAAKAIAIAVBAnRqKAIAKAIANgIAIAAoAgAgBUECdGooAgAgAjYCAAwBCwsgAiEEDAELCyADIAQ2AgAgBSEGDAAACwALCwUgACgCACEBIABBADYCACABBEAgACgCBBogARA4CyAAQQA2AgQLCzsAQeC8AywAAEUEQEHgvAMQcARAQYjEA0EANgIAQYzEA0EANgIAQZDEA0EANgIAQeC8AxBvCwtBiMQDCwkAIAAgATYCBAsJACAAIAE2AgALUQECfyMGIQMjBkEQaiQGIAAgATYCAEEQEFEiAkEANgIEIAJBADYCCCACQZyGATYCACACIAE2AgwgACACNgIEIAMgATYCACADIAE2AgQgAyQGCzQAIABBADYCACAAQQA2AgQgAEIANwIIIABCADcCECAAQgA3AhggAEEANgIgIABBJGoQlAgLuQEBBX8gASgCACEBIAAoAgQiAgRAAkAgAiACQX9qIgRxRSIFBH8gASAEcQUgASACSQR/IAEFIAEgAhBOCwsiBkECdCAAKAIAaigCACIABH8DQCAAKAIAIgBFBEBBACEADAMLIAAoAgQiAyABRgRAIAEgACgCCEYNAwUgBQRAIAMgBHEhAwUgAyACTwRAIAMgAhBOIQMLCyADIAZHBEBBACEADAQLCwwAAAsABUEACyEACwVBACEACyAACykBAX8gACgCCBC2CCA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iAkHQAWogAUYEQCAAKAIAIgFB5AA2AhQgASACNgIYIAAoAgAoAgQhASAAQQMgAUE/cUGyBWoRAwAgAEEANgK4AwUgACgCGCgCFCEBIAAgAiABQT9xQYoBahECAEUEQEEADwsLIAAoAtADIgAgACgCFEEBakEHcTYCFEEBC6RUASl/IwYhKSMGQYACaiQGICkhCiAAKAK4AyEBA0ACQCABRQRAAn8gACgC0AMoAgwEQCAAELECRQRAQd4CIQEMBAsgACgCuAMMAQsgACgCGCIGKAIEIgFFBEAgBigCDCEBIAAgAUH/AHFBCGoRAABFBEBB3gIhAQwECyAGKAIEIQELIAYoAgAiBEEBaiECIAQsAAAhAyABQX9qIgQEfyACBSAGKAIMIQEgACABQf8AcUEIahEAAEUEQEHeAiEBDAQLIAYoAgQhBCAGKAIACyEBIANB/wFxIQUgASwAACIHQf8BcSECIANBf0cgB0FYR3IEQCAAKAIAIgNBNzYCFCADIAU2AhggACgCACACNgIcIAAoAgAoAgAhAyAAIANB/wFxQawDahEBAAsgACACNgK4AyAGIAFBAWo2AgAgBiAEQX9qNgIEIAILIQELAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQCABQQFrDv4BEBISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhISEhIDBAUICggICAgGBwgJCAgIEBAQEBAQEBACAQALEQwSEg4ODg4ODg4ODg4ODg4ODg4SEhISEhISEg0SEhISEg8SC0EZIQEMEwtBywAhAQwSCyAAKAIAIgFB6AA2AhQgASgCBCEBIABBASABQT9xQbIFahEDACAAKALQA0EMaiIBKAIABEAgACgCACIBQcAANgIUIAEoAgAhASAAIAFB/wFxQawDahEBACAAKALQA0EMaiEBCyAAQgA3AOgBIABCADcA8AEgAEKBgoSIkKD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AKAIAIQMgACADQf8BcUGsA2oRAQALIABBpAFqIAFBAnRqIgEoAgAiA0UEQCABIAAQrwUiAzYCAAsgBEF/aiEJAn8CfwJAAkACQAJAAkACQAJAAkACQCACQQBHIgsEfyAEQYEBTg0JIANBATsBACADQQE7AQIgA0EBOwEEIANBATsBBiADQQE7AQggA0EBOwEKIANBATsBDCADQQE7AQ4gA0EBOwEQIANBATsBEiADQQE7ARQgA0EBOwEWIANBATsBGCADQQE7ARogA0EBOwEcIANBATsBHiADQQE7ASAgA0EBOwEiIANBATsBJCADQQE7ASYgA0EBOwEoIANBATsBKiADQQE7ASwgA0EBOwEuIANBATsBMCADQQE7ATIgA0EBOwE0IANBATsBNiADQQE7ATggA0EBOwE6IANBATsBPCADQQE7AT4gA0FAa0EBOwEAIANBATsBQiADQQE7AUQgA0EBOwFGIANBATsBSCADQQE7AUogA0EBOwFMIANBATsBTiADQQE7AVAgA0EBOwFSIANBATsBVCADQQE7AVYgA0EBOwFYIANBATsBWiADQQE7AVwgA0EBOwFeIANBATsBYCADQQE7AWIgA0EBOwFkIANBATsBZiADQQE7AWggA0EBOwFqIANBATsBbCADQQE7AW4gA0EBOwFwIANBATsBciADQQE7AXQgA0EBOwF2IANBATsBeCADQQE7AXogA0EBOwF8IANBATsBfiAJQQF1BSAEQcEATg0JIANBATsBACADQQE7AQIgA0EBOwEEIANBATsBBiADQQE7AQggA0EBOwEKIANBATsBDCADQQE7AQ4gA0EBOwEQIANBATsBEiADQQE7ARQgA0EBOwEWIANBATsBGCADQQE7ARogA0EBOwEcIANBATsBHiADQQE7ASAgA0EBOwEiIANBATsBJCADQQE7ASYgA0EBOwEoIANBATsBKiADQQE7ASwgA0EBOwEuIANBATsBMCADQQE7ATIgA0EBOwE0IANBATsBNiADQQE7ATggA0EBOwE6IANBATsBPCADQQE7AT4gA0FAa0EBOwEAIANBATsBQiADQQE7AUQgA0EBOwFGIANBATsBSCADQQE7AUogA0EBOwFMIANBATsBTiADQQE7AVAgA0EBOwFSIANBATsBVCADQQE7AVYgA0EBOwFYIANBATsBWiADQQE7AVw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Bf2o2AgQgAEEANgK4AyAKJAZBAQ8FIAFBywBGBEAgACgCACIBQdcANgIUIAEoAgQhASAAQQEgAUE/cUGyBWoRAwAgAEEANgK4AyAKJAZBAg8FIAFBrgFGBEAMAwUgAUHeAkYNAwsLC0EADwsgCiQGQQALQQEBfyAAKALQAyEBIABBADYC2AEgAEEANgKQASAAQQA2ArgDIAFBADYCDCABQQA2AhAgAUEANgIYIAFBADYCpAELiQMBAX8gACgCBCgCACEBIAAgAEEAQawBIAFBP3FBygFqEQQAIgE2AtADIAFBiwE2AgAgAUHXADYCBCABQdgANgIIIAFB2QA2AhwgAUEANgJgIAFBADYCZCABQdkANgIkIAFBADYCaCABQdkANgIoIAFBADYCbCABQdkANgIsIAFBADYCcCABQdkANgIwIAFBADYCdCABQdkANgI0IAFBADYCeCABQdkANgI4IAFBADYCfCABQdkANgI8IAFBADYCgAEgAUFAa0HZADYCACABQQA2AoQBIAFB2QA2AkQgAUEANgKIASABQdkANgJIIAFBADYCjAEgAUHZADYCTCABQQA2ApABIAFB2QA2AlAgAUEANgKUASABQdkANgJUIAFBADYCmAEgAUEANgKcASABQdkANgJcIAFBADYCoAEgAUHaADYCICABQdoANgJYIAAoAtADIQEgAEEANgLYASAAQQA2ApABIABBADYCuAMgAUEANgIMIAFBADYCECABQQA2AhggAUEANgKkAQseACAAQQEQrgIgAEEAEK4CIAAoAgQQOCAAQQA2AgQL2QcBB38CQAJAIAIgA2oiCSABKAIESw0AIAEoAgwgA0kNACABKAIARQ0ADAELIAAoAgAiA0EXNgIUIAMoAgAhAyAAIANB/wFxQawDahEBAAsCQAJAIAEoAhgiAyACSw0AIAkgAyABKAIQaksNAAwBCyABKAIoRQRAIAAoAgAiA0HHADYCFCADKAIAIQMgACADQf8BcUGsA2oRAQALIAEoAiQEQCABKAIIQQd0IQogASgCGCEGIAEoAhAiBUEASgRAAkAgAUEwaiELIAEoAhQiAyAFIAMgBUgbIgUgASgCHCAGayIDIAUgA0gbIgUgASgCBCAGayIDIAUgA0gbIgNBAU4EQCAGIApsIQVBACEGA0AgASgCNCEHIAAgCyABKAIAIAZBAnR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BzABqIAMgAkF/akkbKAIACzYCHCABQQA2AhQgAUEANgIYQQMLoQEBBH8DQAJAAkACQCAAIAFqLAAAIgMEQCADQS5GBEAMAgUMAwsACwwCCyABIQILIAFBAWohAQwBCwsgACABaiEDQZy4ARBgQQJqIQQCfwJAIAIEfyACIARqQYACSgR/QX8FDAILBSABIARqQYACSgR/QX8FIANBLjoAACABIQIMAgsLDAELIAAgAkEBampBADoAACAAEGAgAGoQgQVBAAsaC9oDAQ9/IAAoAsQDIQsgACgCzAJBf2ohDAJAAkADQAJAIAAoApABIgIgACgCmAEiA04EQCACIANHDQEgACgClAEgACgCnAFLDQELIAAoAswDKAIAIQIgACACQf8AcUEIahEAAA0BDAILCwwBC0EADwsgACgCJEEASgRAIAAoAtgBIQIDQCACKAI0BEAgACgCBCgCICEDIAAgC0HIAGogBEECdGooAgAgAigCDCIFIAAoApwBbCAFQQAgA0EfcUGiAmoRCAAhDSAAKAKcASAMSQR/IAIoAgwFIAIoAiAgAigCDCIFEE4hAyADIAUgAxsLIQkgACgC2ANBBGogBEECdGooAgAhDiAJQQBKBEAgBEECdCABaigCACEGQQAhByACIgUiDygCHCEDA0AgAwR/QQAhAyAHQQJ0IA1qKAIAIQhBACEKA38gACACIAggBiADIA5BP3FBmgZqEQUAIAhBgAFqIQggAyAPKAIkaiEDIApBAWoiCiACKAIcIhBJDQAgEAsFQQALIQMgBSgCKEECdCAGaiEGIAdBAWoiByAJRw0ACwsLIAJB2ABqIQIgBEEBaiIEIAAoAiRIDQALCyAAIAAoApwBQQFqIgE2ApwBQQNBBCABIAAoAswCSRsLnQUBE38jBiETIwZBEGokBiATIQYgACgCxAMhBCAAKALUAkEASgRAQQAhAQNAIAAoAgQoAiAhBSAAQdgCaiABQQJ0aigCACIDKAIMIQIgAUECdCAGaiAAIARByABqIAMoAgRBAnRqKAIAIAAoApQBIAJsIAJBASAFQR9xQaICahEIADYCACABQQFqIgEgACgC1AJIDQALCyAEKAIYIgUgBCgCHCIBSARAAkAgBEEgaiEMIAQoAhQhAyAAKALoAiECA0ACQCADIAJJBEAgAyECA0AgACgC1AIiDUEASgRAQQA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DIQsgACgCJEEATARADwsgACgC2AEhAQNAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkAgASIIKAIoIAEoAiQiBEEIdGpBgQJrDpAeAB4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBYBIB0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAIgIBwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBUgAyAgIBsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAEICAgIBogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBQgIAUgICAgIBkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgBiAgICAgIBggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBMgICAfICAgICAgIBcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBIgICAgCCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBEgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBAgICAgICAMICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA8gICAgICAgDiALQQAhAkEEIQMMIAtBACECQQUhAwwfC0EAIQJBBiEDDB4LQQAhAkEHIQMMHQtBACECQQghAwwcC0EAIQJBCSEDDBsLQQAhAkEKIQMMGgtBACECQQshAwwZC0EAIQJBDCEDDBgLQQAhAkENIQMMFwtBACECQQ4hAwwWC0EAIQJBDyEDDBULQQAhAkEQIQMMFAtBACECQREhAwwTC0EAIQJBEiEDDBILQQAhAkETIQMMEQtBACECQRQhAwwQC0EAIQJBFSEDDA8LQQAhAkEWIQMMDgtBACECQRchAwwNC0EAIQJBGCEDDAwLQQAhAkEZIQMMCwtBACECQRohAwwKC0EAIQJBGyEDDAkLQQAhAkEcIQMMCAtBACECQR0hAwwHC0EAIQJBHiEDDAYLQQAhAkEfIQMMBQtBACECQSAhAwwEC0EAIQJBISEDDAMLQQAhAkEiIQMMAgsCQAJAAkACQCAAKAJIIgEOAwABAgMLIAEhAkEjIQMMBAsgASECQSQhAwwDCyABIQJBJSEDDAILIAAoAgAiAUExNgIUIAEoAgAhASAAIAFB/wFxQawDahEBAAwBCyAAKAIAIgFBBzYCFCABIAQ2AhggACgCACAIKAIoNgIcIAAoAgAoAgAhASAAIAFB/wFxQawDahEBAAsgC0EEaiAJQQJ0aiADNgIAIAgoAjQEQCALQSxqIAlBAnR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DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCAwsgDiASp0HgCWosAAAiAKw3AwAgAEEASARAIAJBfzYCACAERAAAAAAAAPC/OQMAQXwMBQsMAwsgDiASpyIAQeAIaiwAACIBrDcDACAGBEAgBiAAQaAJai0AADYCAAsgAUEASARAIAJBfzYCACAERAAAAAAAAPC/OQMAQXwMBAsMAgsgBSASQQAgDhC1AyIAQQBIBEAgAkF/NgIAIAREAAAAAAAA8L85AwBBfAwDCyAAQQBHIAZBAEdxBEAgBiA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BDGwQUSICNgIEIAAgAjYCACAAIAFBDGwgAmo2AggLC+cBAQd/IAIgAWtBDBA5IQMgACgCACIEIQcgAyAAKAIIIARrQQwQOUsEQCAAEM8DQdWq1aoBIANJBEAQAAUgACADIAAoAgggACgCAGtBDBA5IgRBAXQiBSAFIANJG0HVqtWqASAEQarVqtUASRsQjAggACABIAIgAxDQAwsFIAMgACgCBCAEa0EMEDkiBkshBSAGQQxsIAFqIAIgBRsiCCABayIGQQwQOSEJIAYEQCAEIAEgBhDnARoLIAUEQCAAIAggAiADIAAoAgQgACgCAGtBDBA5axDQAwUgACAJQQxsIAdqNgIECwsLyAEBAn8jBiEEIwZBEGokBiAEQQRqIQMgBCACNgIAIABByABqIgIgBBDoAwRAQRAQBSEAIANCADcCACADQQA2AgggA0Ho8AFB6PABEGAQfiAAIAMQhgIgAEGI8gBBBRAECyACIAQQqwghACADIAEoAgAiAjYCACADIAEoAgQiATYCBCABBH8gASABKAIEQQFqNgIEIAMoAgQFQQALIQEgAyAAKAIANgIAIAAgAjYCACADIAAoAgQ2AgQgACABNgIEIAMQlQEgBCQGC8MBAQV/IAAoAgAiAyEFIAIgAWsiBCAAKAIIIANrSwRAIAAQzwNB/////wcgBEkEQBAABSAAIAQgACgCCCAAKAIAayIDQQF0IgUgBSAESRtB/////wcgA0H/////A0kbEIsIIAAgASACIAQQzgMLBSAEIAAoAgQgA2siBkshAyABIAZqIAIgAxsiByABayIGBEAgBSABIAYQ5wEaCyADBEAgACAHIAIgACgCACAEIAAoAgRrahDOAwUgACAFIAZqNgIECwsLNgECfyAAKAIEIAAoAgAiA2siAiABSQRAIAAgASACaxCKCAUgAiABSwRAIAAgASADajYCBAsLC4kCAQh/IAIgAWtBFBA5IQMgACgCACIEIQcgAyAAKAIIIARrQRQQOUsEQCAAEIcIQcyZs+YAIANJBEAQAAUgACADIAAoAgggACgCAGtBFBA5IgRBAXQiBSAFIANJG0HMmbPmACAEQebMmTNJGxDWAyAAIAEgAiADEM0DCwUCQCADIAAoAgQgBGtBFBA5IgZLIQUgBkEUbCABaiACIAUbIgggAWsiBkEUEDkhCiAGBEAgBCABIAY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CCCEDDAAACwALIApBDGwgDmogBDYCBCAKQQFqIQoMAQsLDAELQQBBA0G52AIgDxA9QQEQAQtBACEEQQAhCAJAAkADQCAIIAxIBEAgASgCACgCCCIHIAhBDGxqKAIIIQVBACECAkACQANAIAIgC04NASACQQFqIQMgACgCACgCCCACQQxsaigCCCAFRwRAIAMhAgwBCwsgBEEBaiEEDAELIAggC2ogBGsiD0EMbCAOaiEJIA9BDGwgDmogBTYCCCAJIAhBDGwgB2ooAgQiB0EMbBBEIgM2AgAgA0UNA0EAIQUDQCAFIAdIBEAgCSgCACAFQQxsaiICIAEoAgAoAgggCEEMbGooAgAgBUEMbGoiAykCADcCACACIAMoAgg2AgggBUEBaiEFDAELCyAPQQxsIA5qIAc2AgQLIAhBAWohCAwBCwsMAQtBAEEDQbnYAiAQED1BARABCyAAKAIAIgJBCGoiAygCACIEBEBBACEDA0AgAyACKAIMSARAIANBDGwgBGooAgAQOCADQQFqIQMgACgCACIEIQIgBCgCCCEEDAELCyAEEDggACgCAEEIaiEDCyADIA42AgAgACgCACAGNgIMIAEQ/wMLQQAFQQBBA0GguAEgDRA9QX8LIREgDSQGIBELowEBAn8gACgCACIBBH8gASgCACICBEAgAigCACEBIAJBADYCACABBEAgARDrAyABEDgLIAIQOCAAKAIAIQELIAEoAhwiAgRAIAIQOCAAKAIAIQELIAEoAiQiAgRAIAIQOCAAKAIAIQELIAEoAjQiAgRAIAIQOCAAKAIAIQELIAEoAiwiAgR/IAIQOCAAKAIABSABCxA4IABBADYCAEEABUF/CxoLjAEBA38jBiEEIwZBEGokBkEBQbwgEI0CIgMEQEEEEFEiBRC7CCADIAU2AgAgAyAANgIEIANBATYCCCADIAE2AgwgAyACNgIQIANBATYCFCADQX82AhggA0IANwIcIANCADcCJCADQgA3AiwgA0IANwI0IAQkBiADDwVBAEEDQbnYAiAEED1BARABC0EAC8cBAgJ/B30CfyMGIQYjBkFAayQGIAAqAgwgACoCLCIMIAGUkyEJIAAqAiQiByAClCAAKgIUkyEKIAAqAiAiCCAClCAAKgIQkyELIAcgAZQgACoCBJMhByAIIAGUIAAqAgCTIQggACoCHCENIAw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Bf2oiADYCCCAABH8gBUEAIABBAnQQRRogBEGQgChqQQAgAEEEdBBFGkEAIQcDQCAHIABIBEAgBEGMgAhqIAdBAnQiBkECdGogATYCACAEQYyACGogBkEBckECdGpBADYCACAEQYyACGogBkECckECdGogAjYCACAEQYyACGogBkEDckECdGpBADYCACAHQQFqIQcMAQsLQQAhAQNAIAEgA0gEQCAEQQxqIARBkIDIAGogAUECdGooAgBBf2oiAkECdGoiByAEQZCA0ABqIAFBB2wiAEECdGooAgAgBygCAGo2AgAgBEGQgChqIAJBAXQiB0EDdGoiBiAGKwMAIABBAnQgBGpBlIDQAGooAgC3oDkDACAEQZCAKGogB0EBckEDdGoiByAHKwMAIABBAnQgBGpBmIDQAGooAgC3oDkDACAEQYyACGogAkECdCICQQJ0aiIHKAIAIABBAnQgBGpBnIDQAGooAgAiBkoEQCAHIAY2AgALIARBjIAIaiACQQFyQQJ0aiIHKAIAIABBAnQgBGpBoIDQAGooAgAiBkgEQCAHIAY2AgALIARBjIAIaiACQQJyQQJ0aiIHKAIAIABBAnQgBGpBpIDQAGooAgAiBkoEQCAHIAY2AgALIARBjIAIaiACQQNyQQJ0aiICKAIAIABBAnQgBGpBqIDQAGooAgAiAEgEQCACIAA2AgALIAFBAWohAQwBCwsgBCgCCCEBQQAhAAN/IAAgAUgEfyAEQZCAKGogAEEBdCICQQN0aiIDIAMrAwAgBEEMaiAAQQJ0aigCALciFaM5AwAgBEGQgChqIAJBAXJBA3RqIgIgAisDACAVozkDACAAQQFqIQAMAQVBAAsLBUEACwshFCAPJAYgFAthAQN/IwYhAyMGQRBqJAYgAyECQRQQRCIBRQRAQQBBA0G52AIgAhA9QQEQAQsgASAAIAFBCGogAUEMaiABQQRqIAFBEGoQswkiADYCACAARQRAIAEQOEEAIQELIAIkBiABCyAAIAEgAiADrSAErUIghoQgBSAGIABBA3FB6gZqESUACykBAX4gASACrSADrUIghoQgBCAAQQNxQaYDahEUACIFQiCIpxADIAWnC3YBA38gAAR/IAAoAgAiAgR/A0AgAigCACEDIAEgAigCBEgEQCABQQJ0IANqKAIAKAIAEDggACgCACgCACABQQJ0aig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GIQojBkEQaiQGIAAEfyABQfjPAxA6IgEoAgAoAiwFIAFB8M8DEDoiASgCACgCLAshACAKQQxqIgsgASAAQT9xQbIFahEDACACIAsoAgA2AAAgCiABIAEoAgAoAiBBP3FBsgVqEQMAIAgsAAtBAEgEQAJ/IAgoAgAhDCALQQA2AgAgDAsgCxBuIAhBADYCBCAILAALQQBIBEAgCCgCCBogCCgCABA4IAhBADYCCAsFIAtBADYCACAIIAsQbiAIQQA6AAsLIAggCikCADcCACAIIAooAgg2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAoQRyAKIAEgASgCACgCHEE/cUGyBWoRAwAgBywAC0EASARAAn8gBygCACENIAtBADYCACANCyALEG4gB0EANgIEIAcsAAtBAEgEQCAHKAIIGiAHKAIAEDggB0EANgIICwUgC0EANgIAIAcgCxBuIAdBADoACwsgByAKKQIANwIAIAcgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAMgASABKAIAKAIMQf8AcUEIahEAADYCACAEIAEgASgCACgCEEH/AHFBCGoRAAA2AgAgCiABIAEoAgAoAhRBP3FBsgVqEQMAIAUsAAtBAEgEQAJ/IAUoAgAhDiALQQA6AAAgDgsgCxBfIAVBADYCBCAFLAALQQBIBEAgBSgCCBogBSgCABA4IAVBADYCCAsFIAtBADoAACAFIAsQXyAFQQA6AAsLIAUgCikCADcCACAFIAooAgg2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAoQRyAKIAEgASgCACgCGEE/cUGyBWoRAwAgBiwAC0EASARAAn8gBigCACEPIAtBADYCACAPCyALEG4gBkEANgIEIAYsAAtBAEgEQCAGKAIIGiAGKAIAEDggBkEANgIICwUgC0EANgIAIAYgCxBuIAZBADoACwsgBiAKKQIANwIAIAYgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAkgASABKAIAKAIkQf8AcUEIahEAADYCACAKJAYL2QIBB38jBiEDIwZBEGokBiAALAALIgZBAEgiBwR/IAAoAgh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qIQAMAQsLIAoQRyAKIAEgASgCACgCHEE/cUGyBWoRAwAgBywAC0EASARAAn8gBygCACENIAtBADoAACANCyALEF8gB0EANgIEIAcsAAtBAEgEQCAHKAIIGiAHKAIAEDggB0EANgIICwUgC0EAOgAAIAcgCxBfIAdBADoACwsgByAKKQIANwIAIAcgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAMgASABKAIAKAIMQf8AcUEIahEAADoAACAEIAEgASgCACgCEEH/AHFBCGoRAAA6AAAgCiABIAEoAgAoAhRBP3FBsgVqEQMAIAUsAAtBAEgEQAJ/IAUoAgAhDiALQQA6AAAgDgsgCxBfIAVBADYCBCAFLAALQQBIBEAgBSgCCBogBSgCABA4IAVBADYCCAsFIAtBADoAACAFIAsQXyAFQQA6AAsLIAUgCikCADcCACAFIAooAgg2AghBACEAA0AgAEEDRwRAIABBAnQgCmpBADYCACAAQQFqIQAMAQsLIAoQRyAKIAEgASgCACgCGEE/cUGyBWoRAwAgBiwAC0EASARAAn8gBigCACEPIAtBADoAACAPCyALEF8gBkEANgIEIAYsAAtBAEgEQCAGKAIIGiAGKAIAEDggBkEANgIICwUgC0EAOgAAIAYgCxBfIAZBADoACwsgBiAKKQIANwIAIAYgCigCCDYCCEEAIQADQCAAQQNHBEAgAEECdCAKakEANgIAIABBAWohAAwBCwsgChBHIAkgASABKAIAKAIkQf8AcUEIahEAADYCACAKJAYL2wIBB38jBiEDIwZBEGokBiAALAALIgVBAEgiBwR/IAAoAghB/////wdxQX9qIQQgACgCBAVBCiEEIAVB/wFxCyEGIAIgAWsiCARAAkAgBwR/IAAoAgQhBSAAKAIABSAFQf8BcSEFIAALIgchCSABIAUgB2pJIAkgAU1xBEAgA0IANwIAIANBADYCCCADIAEgAhD+AyAAIAMoAgAgAyADLAALIgBBAEgiARsgAygCBCAAQf8BcSABGxDjCSADEEcMAQsgBCAGayAISQRAIAAgBCAGIAhqIARrIAYgBhDdAgsgAiAGIAFraiEHIAYgACwAC0EASAR/IAAoAgAFIAALIgVqIQQDQCABIAJHBEAgBCABEF8gBEEBaiE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BgM4DEDohAyAHEDwgBiACKAIANgIAIAcgBigCADYCACAAIAVBGGogASAHIAQgAxC2BCABKAIAIQggBiQGIAgLogEBBH8jBiEHIwZBEGokBiAAQQhqIgYoAgAoAhQhCCAGIAhB/wBxQQhqEQAAIQYgByABKAIANgIEIAcgAigCADYCACAGKAIAIAYgBiwACyIBQQBIIgIbIgggBigCBCABQf8BcSACG2ohASAHQQhqIgIgBygCBDYCACAHQQxqIgYgBygCADYCACAAIAIgBiADIAQgBSAIIAEQpAEhCSAHJAYgCQtgAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACAAIAEgAiADIAQgBUHtmANB9ZgDEKQBIQcgBiQGIAcL3wUCA38GfCMGIQUjBkHgBmokBiABIAIrAxggAisDACADKwMAoiACKwMIIAMrAwgiCKKgIAIrAxAgAysDECIJoqCgOQMAIAEgAisDOCACKwMgIAMrAwAiB6IgCCACKwMooqAgCSACKwMwoqCgOQMIIAEgAisDWCAHIAJBQGsiBCsDAKIgAisDSCADKwMIIgiioCAJIAIrA1CioKA5AxAgBUHABGoiASAHIAIrAwAiCqI5AwAgASAIIAqiOQMIIAEgCiADKwMQIgmiOQMQIAEgByACKwMIIguiOQMYIAEgCCALojkDICABIAkgC6I5AyggASAHIAIrAxAiDKI5AzAgASAIIAyiOQM4IAFBQGsgCSAMojkDACABIAo5A0ggASALOQNQIAEgDDkDWCABIAcgAisDICIKojkDYCABIAggCqI5A2ggASAJIAqiOQNwIAEgByACKwMoIguiOQN4IAEgCCALojkDgAEgASAJIAuiOQOIASABIAcgAisDMCIMojkDkAEgASAIIAyiOQOYASABIAkgDKI5A6ABIAEgCjkDqAEgASALOQOwASABIAw5A7gBIAEgByAEKwMAIgqiOQPAASABIAggCqI5A8gBIAEgCSAKojkD0AEgASAHIAIrA0giC6I5A9gBIAEgCCALojkD4AEgASAJIAuiOQPoASABIAcgAisDUCIHojkD8AEgASAIIAeiOQP4ASABIAkgB6I5A4ACIAEgCjkDiAIgASALOQOQAiABIAc5A5gCIAUQ4Ap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B/wBxQQhqEQAABSADLAAAEEILQX8QQQRAIAJBADYCAAwBBSAARQ0CCwwCCyAADQAMAQsgBCAEKAIAQQJyNgIACyABKAIAIRMgBhBHIAsQRyAIJAYgEwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQoAshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQnwshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQngshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQnQshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQmwshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQmgshByAGJAYgBwtWAQJ/IwYhBiMGQRBqJAYgBiABKAIANgIEIAYgAigCADYCACAGQQhqIgEgBigCBDYCACAGQQxqIgIgBigCADYCACABIAIgAyAEIAUQmQshByAGJAYgBwvtAgEEfyMGIQYjBkEwaiQGIAZBKGohByAGQSBqIQggAygCBEEBcQRAIAcgAxA7IAdBgM4DEDohCSAHEDwgByADEDsgB0GQzgMQOiEDIAcQPCADKAIAKAIYIQAgBiADIABBP3FBsgVqEQMAIAMoAgAoAhwhACAGQQxqIAMgAEE/cUGyBWoRAwAgBiACKAIANgIYIAcgBigCGDYCACAFIAEgByAGIAZBGGoiACAJIARBARCWAiAGRjoAACABKAIAIQEDQCAAQXRqIgAQRyA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AAAB7AAAAfAAAAH0AAAB+AAAAfwBBoNQAC6ECCgAAAGQAAADoAwAAECcAAKCGAQBAQg8AgJaYAADh9QX/////////////////////////////////////////////////////////////////AAECAwQFBgcICf////////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI////////woLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIj/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////wBB0NYACxgRAAoAERERAAAAAAUAAAAAAAAJAAAAAAsAQfDWAAshEQAPChEREQMKBwABEwkLCwAACQYLAAALAAYRAAAAERERAEGh1wALAQsAQarXAAsYEQAKChEREQAKAAACAAkLAAAACQALAAALAEHb1wALAQwAQefXAAsVDAAAAAAMAAAAAAkMAAAAAAAMAAAMAEGV2AALAQ4AQaHYAAsVDQAAAAQNAAAAAAkOAAAAAAAOAAAOAEHP2AALARAAQdvYAAseDwAAAAAPAAAAAAkQAAAAAAAQAAAQAAASAAAAEhISAEGS2QALDhIAAAASEhIAAAAAAAAJAEHD2QALAQsAQc/ZAAsVCgAAAAAKAAAAAAkLAAAAAAALAAALAEH92QALAQwAQYnaAAt+DAAAAAAMAAAAAAkMAAAAAAAMAAAMAAAwMTIzNDU2Nzg5QUJDREVGGRJEOwI/LEcUPTMwChsGRktFNw9JDo4XA0AdPGkrNh9KLRwBICUpIQgMFRYiLhA4Pgs0MRhkdHV2L0EJfzkRI0MyQomKiwUEJignDSoeNYwHGkiTE5SVAEGQ2wAL1w5JbGxlZ2FsIGJ5dGUgc2VxdWVuY2UARG9tYWluIGVycm9yAFJlc3VsdCBub3QgcmVwcmVzZW50YWJsZQBOb3QgYSB0dHkAUGVybWlzc2lvbiBkZW5pZWQAT3BlcmF0aW9uIG5vdCBwZXJtaXR0ZWQATm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeQBObyBzdWNoIHByb2Nlc3MARmlsZSBleGlzdHMAVmFsdWUgdG9vIGxhcmdlIGZvciBkYXRhIHR5cGUATm8gc3BhY2UgbGVmdCBvbiBkZXZpY2UAT3V0IG9mIG1lbW9yeQBSZXNvdXJjZSBidXN5AEludGVycnVwdGVkIHN5c3RlbSBjYWxsAFJlc291cmNlIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlAEludmFsaWQgc2VlawBDcm9zcy1kZXZpY2UgbGluawBSZWFkLW9ubHkgZmlsZSBzeXN0ZW0ARGlyZWN0b3J5IG5vdCBlbXB0eQBDb25uZWN0aW9uIHJlc2V0IGJ5IHBlZXIAT3BlcmF0aW9uIHRpbWVkIG91dABDb25uZWN0aW9uIHJlZnVzZWQASG9zdCBpcyBkb3duAEhvc3QgaXMgdW5yZWFjaGFibGUAQWRkcmVzcyBpbiB1c2UAQnJva2VuIHBpcGUASS9PIGVycm9yAE5vIHN1Y2ggZGV2aWNlIG9yIGFkZHJlc3MAQmxvY2sgZGV2aWNlIHJlcXVpcmVkAE5vIHN1Y2ggZGV2aWNlAE5vdCBhIGRpcmVjdG9yeQBJcyBhIGRpcmVjdG9yeQBUZXh0IGZpbGUgYnVzeQBFeGVjIGZvcm1hdCBlcnJvcgBJbnZhbGlkIGFyZ3VtZW50AEFyZ3VtZW50IGxpc3QgdG9vIGxvbmcAU3ltYm9saWMgbGluayBsb29wAEZpbGVuYW1lIHRvbyBsb25nAFRvbyBtYW55IG9wZW4gZmlsZXMgaW4gc3lzdGVtAE5vIGZpbGUgZGVzY3JpcHRvcnMgYXZhaWxhYmxlAEJhZCBmaWxlIGRlc2NyaXB0b3IATm8gY2hpbGQgcHJvY2VzcwBCYWQgYWRkcmVzcwBGaWxlIHRvbyBsYXJnZQBUb28gbWFueSBsaW5rcwBObyBsb2NrcyBhdmFpbGFibGUAUmVzb3VyY2UgZGVhZGxvY2sgd291bGQgb2NjdXIAU3RhdGUgbm90IHJlY292ZXJhYmxlAFByZXZpb3VzIG93bmVyIGRpZWQAT3BlcmF0aW9uIGNhbmNlbGVkAEZ1bmN0aW9uIG5vdCBpbXBsZW1lbnRlZABObyBtZXNzYWdlIG9mIGRlc2lyZWQgdHlwZQBJZGVudGlmaWVyIHJlbW92ZWQARGV2aWNlIG5vdCBhIHN0cmVhbQBObyBkYXRhIGF2YWlsYWJsZQBEZXZpY2UgdGltZW91dABPdXQgb2Ygc3RyZWFtcyByZXNvdXJjZXMATGluayBoYXMgYmVlbiBzZXZlcmVkAFByb3RvY29sIGVycm9yAEJhZCBtZXNzYWdlAEZpbGUgZGVzY3JpcHRvciBpbiBiYWQgc3RhdGUATm90IGEgc29ja2V0AERlc3RpbmF0aW9uIGFkZHJlc3MgcmVxdWlyZWQATWVzc2FnZSB0b28gbGFyZ2UAUHJvdG9jb2wgd3JvbmcgdHlwZSBmb3Igc29ja2V0AFByb3RvY29sIG5vdCBhdmFpbGFibGUAUHJvdG9jb2wgbm90IHN1cHBvcnRlZABTb2NrZXQgdHlwZSBub3Qgc3VwcG9ydGVkAE5vdCBzdXBwb3J0ZWQAUHJvdG9jb2wgZmFtaWx5IG5vdCBzdXBwb3J0ZWQAQWRkcmVzcyBmYW1pbHkgbm90IHN1cHBvcnRlZCBieSBwcm90b2NvbABBZGRyZXNzIG5vdCBhdmFpbGFibGUATmV0d29yayBpcyBkb3duAE5ldHdvcmsgdW5yZWFjaGFibGUAQ29ubmVjdGlvbiByZXNldCBieSBuZXR3b3JrAENvbm5lY3Rpb24gYWJvcnRlZABObyBidWZmZXIgc3BhY2UgYXZhaWxhYmxlAFNvY2tldCBpcyBjb25uZWN0ZWQAU29ja2V0IG5vdCBjb25uZWN0ZWQAQ2Fubm90IHNlbmQgYWZ0ZXIgc29ja2V0IHNodXRkb3duAE9wZXJhdGlvbiBhbHJlYWR5IGluIHByb2dyZXNzAE9wZXJhdGlvbiBpbiBwcm9ncmVzcwBTdGFsZSBmaWxlIGhhbmRsZQBSZW1vdGUgSS9PIGVycm9yAFF1b3RhIGV4Y2VlZGVkAE5vIG1lZGl1bSBmb3VuZABXcm9uZyBtZWRpdW0gdHlwZQBObyBlcnJvciBpbmZvcm1hdGlvbgAAAAAAAExDX0NUWVBFAAAAAExDX05VTUVSSUMAAExDX1RJTUUAAAAAAExDX0NPTExBVEUAAExDX01PTkVUQVJZAExDX01FU1NBR0VTAEHw6QALlwIDAAAABAAAAAQAAAAGAAAAg/miAERObgD8KRUA0VcnAN009QBi28AAPJmVAEGQQwBjUf4Au96rALdhxQA6biQ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gWyUzZDogJTNkXSsuCgBBdXRvIHRocmVzaG9sZCAoYnJhY2tldCkgYWRqdXN0ZWQgdGhyZXNob2xkIHRvICVkLgoAbWVkaWFuAE90c3UAQXV0byB0aHJlc2hvbGQgKCVzKSBhZGp1c3RlZCB0aHJlc2hvbGQgdG8gJWQuCgA/Pz8gMQoAPz8/IDIKAD8/PyAzCgBFcnJvcjogdW5zdXBwb3J0ZWQgcGl4ZWwgZm9ybWF0LgoARXJyb3I6IE5VTEwgcGF0dEhhbmRsZS4KAEVycm9yOiBjYW4ndCBsb2FkIHBhdHRlcm4gZnJvbSBOVUxMIGJ1ZmZlci4KAEVycm9yOiBvdXQgb2YgbWVtb3J5LgoAIAkKDQBQYXR0ZXJuIERhdGEgcmVhZCBlcnJvciEhCgBFcnJvciByZWFkaW5nIHBhdHRlcm4gZmlsZSAnJXMnLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIG9wZW4gY2FtZXJhIHBhcmFtZXRlcnMgZmlsZSAiJXMiIGZvciByZWFkaW5nLgoARXJyb3IgKCVkKTogdW5hYmxlIHRvIGRldGVybWluZSBmaWxlIGxlbmd0aC4ARXJyb3I6IHN1cHBsaWVkIGZpbGUgZG9lcyBub3QgYXBwZWFyIHRvIGJlIGFuIEFSVG9vbEtpdCBjYW1lcmEgcGFyYW1ldGVyIGZpbGUuCgBFcnJvciAoJWQpOiB1bmFibGUgdG8gcmVhZCBmcm9tIGZpbGUuAGFyZ2xDYW1lcmFGcnVzdHVtUkgoKTogYXJQYXJhbURlY29tcE1hdCgpIGluZGljYXRlZCBwYXJhbWV0ZXIgZXJyb3IuCgBFcnJvcjogaWNwR2V0Sl9VX1hjAEVycm9yIDE6IGljcEdldEluaXRYdzJYYwoARXJyb3IgMjogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciAzOiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIDQ6IGljcEdldEluaXRYdzJYYwoARXJyb3IgNTogaWNwR2V0SW5pdFh3MlhjCgBFcnJvciA2OiBpY3BHZXRJbml0WHcyWGMKAEVycm9yIDc6IGljcEdldEluaXRYdzJYYwoARXJyb3I6IHVuYWJsZSB0byBvcGVuIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycuCgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcyc6IEZpcnN0IGxpbmUgbXVzdCBiZSBudW1iZXIgb2YgbWFya2VyIGNvbmZpZ3MgdG8gcmVhZC4KACVsbHUlYwBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcyc6IHBhdHRlcm4gJyVzJyBzcGVjaWZpZWQgaW4gbXVsdGltYXJrZXIgY29uZmlndXJhdGlvbiB3aGlsZSBpbiBiYXJjb2RlLW9ubHkgbW9kZS4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogVW5hYmxlIHRvIGRldGVybWluZSBkaXJlY3RvcnkgbmFtZS4KAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJzogVW5hYmxlIHRvIGxvYWQgcGF0dGVybiAnJXMnLgoAJWxmAEVycm9yIHByb2Nlc3NpbmcgbXVsdGltYXJrZXIgY29uZmlnIGZpbGUgJyVzJywgbWFya2VyIGRlZmluaXRpb24gJTNkOiBGaXJzdCBsaW5lIG11c3QgYmUgcGF0dGVybiB3aWR0aC4KACVsZiAlbGYgJWxmICVsZgAlZiAlZgBFcnJvciBwcm9jZXNzaW5nIG11bHRpbWFya2VyIGNvbmZpZyBmaWxlICclcycsIG1hcmtlciBkZWZpbml0aW9uICUzZDogTGluZXMgMiAtIDQgbXVzdCBiZSBtYXJrZXIgdHJhbnNmb3JtLgoAWyVzXSAAZGVidWcAaW5mbwB3YXJuaW5nAGVycm9yACVzJXMALmlzZXQARXJyb3I6IHVuYWJsZSB0byBvcGVuIGZpbGUgJyVzJXMnIGZvciByZWFkaW5nLgoARXJyb3IgcmVhZGluZyBpbWFnZVNldC4KAEltYWdlc2V0IGNvbnRhaW5zICVkIGltYWdlcy4KAEZhbGxpbmcgYmFjayB0byByZWFkaW5nICclcyVzJyBpbiBBUlRvb2xLaXQgdjQueCBmb3JtYXQuCgBFcnJvciByZWFkaW5nIEpQRUcgZmlsZS4KAEVycm9yIHJlYWRpbmcgSlBFRyBmaWxlIGhlYWRlci4KACVmAEZpbGUgb3BlbiBlcnJvci4gJXMKAFJlYWQgZXJyb3IhIQoAcgBFcnJvciBvcGVuaW5nIGZpbGUgJyVzJzogACVzJXMKACVkAAojIyMgU3VyZmFjZSBOby4lZCAjIyMKACVzACAgUmVhZCBJbWFnZVNldC4KAEVycm9yIG9wZW5pbmcgZmlsZSAnJXMuaXNldCcuCgAgICAgZW5kLgoAICBSZWFkIEZlYXR1cmVTZXQuCgBFcnJvciBvcGVuaW5nIGZpbGUgJyVzLmZzZXQnLgoAICBSZWFkIE1hcmtlclNldC4KAG1yawBFcnJvciBvcGVuaW5nIGZpbGUgJyVzLm1yaycuCgAlZiAlZiAlZiAlZgBUcmFuc2Zvcm1hdGlvbiBtYXRyaXggcmVhZCBlcnJvciEhCgBqcGcAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIxL3JlZkRhdGFTZXRQdHIyLgoAa3BtRGVsZXRlUmVmRGF0YVNldCgpOiBOVUxMIHJlZkRhdGFTZXRQdHIuCgByYgBrcG1Mb2FkUmVmRGF0YVNldCgpOiBOVUxMIGZpbGVuYW1lL3JlZkRhdGFTZXRQdHIuCgBFcnJvciBsb2FkaW5nIEtQTSBkYXRhOiB1bmFibGUgdG8gb3BlbiBmaWxlICclcyVzJXMnIGZvciByZWFkaW5nLgoARXJyb3IgbG9hZGluZyBLUE0gZGF0YTogZXJyb3IgcmVhZGluZyBkYXRhLgoAa3BtQ2hhbmdlUGFnZU5vT2ZSZWZEYXRhU2V0KCk6IE5VTEwgcmVmRGF0YVNldC4KAGtwbVNldFJlZkRhdGFTZXQoKTogTlVMTCBrcG1IYW5kbGUvcmVmRGF0YVNldC4KAGtwbVNldFJlZkRhdGFTZXQoKTogcmVmRGF0YVNldC4KAHBvaW50cy0lZAoAa3BtTWF0Y2hpbmcoKTogTlVMTCBrcG1IYW5kbGUvaW5JbWFnZUx1bWEuCgBQYWdlWyVkXSAgcHJlOiUzZCwgYWZ0OiUzZCwgZXJyb3IgPSAlZgoAJXMuJXMAQXNzZXJ0aW9uIGBweXJhbWlkLT5zaXplKCkgPiAwYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9Eb0dfc2NhbGVfaW52YXJpYW50X2RldGVjdG9yLmNwcABQeXJhbWlkIGlzIG5vdCBhbGxvY2F0ZWQAT2N0YXZlIG91dCBvZiByYW5nZQBTY2FsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBtSW1hZ2VzLnNpemUoKSA+IDBgIGZhaWxlZCBpbiAATGFwbGFjaWFuIHB5cmFtaWQgaGFzIG5vdCBiZWVuIGFsbG9jYXRlZABBc3NlcnRpb24gYHB5cmFtaWQtPm51bU9jdGF2ZXMoKSA+IDBgIGZhaWxlZCBpbiAAUHlyYW1pZCBkb2VzIG5vdCBjb250YWluIGFueSBsZXZlbHMAQXNzZXJ0aW9uIGBkeW5hbWljX2Nhc3Q8Y29uc3QgQmlub21pYWxQeXJhbWlkMzJmKj4ocHlyYW1pZClgIGZhaWxlZCBpbiAAT25seSBiaW5vbWlhbCBweXJhbWlkIGlzIHN1cHBvcnRlZABBc3NlcnRpb24gYGQudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABPbmx5IEYzMiBpbWFnZXMgc3VwcG9ydGVkAEFzc2VydGlvbiBgaW0xLnR5cGUoKSA9PSBJTUFHRV9GMzJgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTIudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABBc3NlcnRpb24gYGQuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAE9ubHkgc2luZ2xlIGNoYW5uZWwgaW1hZ2VzIHN1cHBvcnRlZABBc3NlcnRpb24gYGltMS5jaGFubmVscygpID09IDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTIuY2hhbm5lbHMoKSA9PSAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgZC53aWR0aCgpID09IGltMi53aWR0aCgpYCBmYWlsZWQgaW4gAEltYWdlcyBtdXN0IGhhdmUgdGhlIHNhbWUgd2lkdGgAQXNzZXJ0aW9uIGBkLmhlaWdodCgpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABJbWFnZXMgbXVzdCBoYXZlIHRoZSBzYW1lIGhlaWdodABBc3NlcnRpb24gYGltMS53aWR0aCgpID09IGltMi53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW0xLmhlaWdodCgpID09IGltMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHJvdyA8IG1IZWlnaHRgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL2ltYWdlLmgAcm93IG91dCBvZiBib3VuZHMATjZ2aXNpb24yNUdhdXNzaWFuU2NhbGVTcGFjZVB5cmFtaWRFAERvRyBQeXJhbWlkAE5vbi1tYXggc3VwcHJlc3Npb24AU3VicGl4ZWwAcHJ1bmVGZWF0dXJlcwBGaW5kIE9yaWVudGF0aW9ucwBBc3NlcnRpb24gYG1CdWNrZXRzLnNpemUoKSA9PSBtTnVtQnVja2V0c1hgIGZhaWxlZCBpbiAAQnVja2V0cyBhcmUgbm90IGFsbG9jYXRlZABBc3NlcnRpb24gYG1CdWNrZXRzWzBdLnNpemUoKSA9PSBtTnVtQnVja2V0c1lgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBtRmVhdHVyZVBvaW50cy5zaXplKCkgPD0gbU1heE51bUZlYXR1cmVQb2ludHNgIGZhaWxlZCBpbiAAVG9vIG1hbnkgZmVhdHVyZSBwb2ludHMAQXNzZXJ0aW9uIGBidWNrZXRbMF0uZmlyc3QgPj0gYnVja2V0W25dLmZpcnN0YCBmYWlsZWQgaW4gAG50aF9lbGVtZW50IGZhaWxlZABBc3NlcnRpb24gYGtwLnNjYWxlIDwgbUxhcGxhY2lhblB5cmFtaWQubnVtU2NhbGVQZXJPY3RhdmUoKWAgZmFpbGVkIGluIABGZWF0dXJlIHBvaW50IHNjYWxlIGlzIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGBrcC5zY29yZSA9PSBsYXAxLmdldDxmbG9hdD4oeSlbeF1gIGZhaWxlZCBpbiAAU2NvcmUgaXMgbm90IGNvbnNpc3RlbnQgd2l0aCB0aGUgRG9HIGltYWdlAEFzc2VydGlvbiBgbGFwMC5oZWlnaHQoKSA9PSBsYXAxLmhlaWdodCgpID09IGxhcDIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZGV0ZWN0b3JzL0RvR19zY2FsZV9pbnZhcmlhbnRfZGV0ZWN0b3IuaABXaWR0aC9oZWlnaHQgYXJlIG5vdCBjb25zaXN0ZW50AEFzc2VydGlvbiBgKGxhcDAuaGVpZ2h0KCkgPT0gbGFwMS5oZWlnaHQoKSkgJiYgKChsYXAxLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYCgobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKCkpICYmIChsYXAxLndpZHRoKCkgPT0gbGFwMi53aWR0aCgpKWAgZmFpbGVkIGluIABJbWFnZSBzaXplcyBhcmUgaW5jb25zaXN0ZW50AEFzc2VydGlvbiBgKHgtMSkgPj0gMCAmJiAoeCsxKSA8IGxhcDEud2lkdGgoKWAgZmFpbGVkIGluIAB4IG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGAoeS0xKSA+PSAwICYmICh5KzEpIDwgbGFwMS5oZWlnaHQoKWAgZmFpbGVkIGluIAB5IG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAASW1hZ2UgZGltZW5zaW9ucyBpbmNvbnNpc3RlbnQAQXNzZXJ0aW9uIGAobGFwMC53aWR0aCgpPj4xKSA9PSBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAobGFwMC5oZWlnaHQoKT4+MSkgPT0gbGFwMS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYChsYXAwLmhlaWdodCgpPj4xKSA9PSBsYXAyLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGludClzdGQ6OmZsb29yKHgpID09IChpbnQpeGAgZmFpbGVkIGluIAAvVXNlcnMvYXMvRG9jdW1lbnRzL0RldmVsb3BtZW50L2dpdGh1Yi9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvaW50ZXJwb2xhdGUuaABmbG9vcigpIGFuZCBjYXN0IG5vdCB0aGUgc2FtZQBBc3NlcnRpb24gYChpbnQpc3RkOjpmbG9vcih5KSA9PSAoaW50KXlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB5cCA+PSAwICYmIHlwIDwgaGVpZ2h0YCBmYWlsZWQgaW4gAHlwIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB5cF9wbHVzXzEgPj0gMCAmJiB5cF9wbHVzXzEgPCBoZWlnaHRgIGZhaWxlZCBpbiAAeXBfcGx1c18xIG91dCBvZiBib3VuZHMAQXNzZXJ0aW9uIGB4cCA+PSAwICYmIHhwIDwgd2lkdGhgIGZhaWxlZCBpbiAAeHAgb3V0IG9mIGJvdW5kcwBBc3NlcnRpb24gYHhwX3BsdXNfMSA+PSAwICYmIHhwX3BsdXNfMSA8IHdpZHRoYCBmYWlsZWQgaW4gAHhwX3BsdXNfMSBvdXQgb2YgYm91bmRzAEFzc2VydGlvbiBgdzAgPj0gMCAmJiB3MCA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAT3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgdzEgPj0gMCAmJiB3MSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB3MiA+PSAwICYmIHcyIDw9IDEuMDAwMWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHczID49IDAgJiYgdzMgPD0gMS4wMDAxYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKHcwK3cxK3cyK3czKSA8PSAxLjAwMDFgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGAoeC0xKSA+PSAwICYmICh4KzEpIDwgaW0ud2lkdGgoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYCh5LTEpID49IDAgJiYgKHkrMSkgPCBpbS5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAxLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDEuaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGB4X2Rpdl8yLTAuNWYgPj0gMGAgZmFpbGVkIGluIAB4X2Rpdl8yIG91dCBvZiBib3VuZHMgb3V0IG9mIGJvdW5kcyBmb3IgaW50ZXJwb2xhdGlvbgBBc3NlcnRpb24gYHlfZGl2XzItMC41ZiA+PSAwYCBmYWlsZWQgaW4gAHlfZGl2XzIgb3V0IG9mIGJvdW5kcyBvdXQgb2YgYm91bmRzIGZvciBpbnRlcnBvbGF0aW9uAEFzc2VydGlvbiBgeF9kaXZfMiswLjVmIDwgbGFwMi53aWR0aCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgeV9kaXZfMiswLjVmIDwgbGFwMi5oZWlnaHQoKWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGxhcDAud2lkdGgoKSA9PSBsYXAyLndpZHRoKClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBsYXAwLmhlaWdodCgpID09IGxhcDIuaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0xLmhlaWdodCgpYCBmYWlsZWQgaW4gAEhlaWdodCBpcyBpbmNvbnNpc3RlbnQAQXNzZXJ0aW9uIGBpbTAuaGVpZ2h0KCkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMS5oZWlnaHQoKT4+MSkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMC5oZWlnaHQoKT4+MSkgPT0gaW0xLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgKGltMC5oZWlnaHQoKT4+MSkgPT0gaW0yLmhlaWdodCgpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW5kZXggPCBtSW1hZ2VzLnNpemUoKWAgZmFpbGVkIGluIABJbmRleCBpcyBvdXQgb2YgcmFuZ2UATjZ2aXNpb24xOEJpbm9taWFsUHlyYW1pZDMyZkUAQXNzZXJ0aW9uIGB3aWR0aCA+PSA1YCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9nYXVzc2lhbl9zY2FsZV9zcGFjZV9weXJhbWlkLmNwcABJbWFnZSBpcyB0b28gc21hbGwAQXNzZXJ0aW9uIGBoZWlnaHQgPj0gNWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGltYWdlLnR5cGUoKSA9PSBJTUFHRV9VSU5UOGAgZmFpbGVkIGluIABJbWFnZSBtdXN0IGJlIGdyYXlzY2FsZQBBc3NlcnRpb24gYGltYWdlLmNoYW5uZWxzKCkgPT0gMWAgZmFpbGVkIGluIABJbWFnZSBtdXN0IGhhdmUgMSBjaGFubmVsAEFzc2VydGlvbiBgbVB5cmFtaWQuc2l6ZSgpID09IG1OdW1PY3RhdmVzKm1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAUHlyYW1pZCBoYXMgbm90IGJlZW4gYWxsb2NhdGVkIHlldABBc3NlcnRpb24gYGltYWdlLndpZHRoKCkgPT0gbVB5cmFtaWRbMF0ud2lkdGgoKWAgZmFpbGVkIGluIABJbWFnZSBvZiB3cm9uZyBzaXplIGZvciBweXJhbWlkAEFzc2VydGlvbiBgaW1hZ2UuaGVpZ2h0KCkgPT0gbVB5cmFtaWRbMF0uaGVpZ2h0KClgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBkc3QudHlwZSgpID09IElNQUdFX0YzMmAgZmFpbGVkIGluIABEZXN0aW5hdGlvbiBpbWFnZSBzaG91bGQgYmUgYSBmbG9hdABVbmtub3duIGltYWdlIHR5cGUAVW5zdXBwb3J0ZWQgaW1hZ2UgdHlwZQBONnZpc2lvbjlFeGNlcHRpb25FAEFzc2VydGlvbiBgaW0ud2lkdGgoKSA9PSBpbS5zdGVwKCkvc2l6ZW9mKGZsb2F0KWAgZmFpbGVkIGluIAAvVXNlcnMvYXMvRG9jdW1lbnRzL0RldmVsb3BtZW50L2dpdGh1Yi9hcnRvb2xraXQ1LWpzL2xpYi9hcnRvb2xraXQ1L2xpYi9TUkMvS1BNL0ZyZWFrTWF0Y2hlci9kZXRlY3RvcnMvb3JpZW50YXRpb25fYXNzaWdubWVudC5jcHAAU3RlcCBzaXplIG11c3QgYmUgZXF1YWwgdG8gd2lkdGggZm9yIG5vdwBBc3NlcnRpb24gYHggPj0gMGAgZmFpbGVkIGluIAB4IG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB4IDwgbUdyYWRpZW50c1tvY3RhdmUqbU51bVNjYWxlc1Blck9jdGF2ZStzY2FsZV0ud2lkdGgoKWAgZmFpbGVkIGluIAB4IG11c3QgYmUgbGVzcyB0aGFuIHRoZSBpbWFnZSB3aWR0aABBc3NlcnRpb24gYHkgPj0gMGAgZmFpbGVkIGluIAB5IG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB5IDwgbUdyYWRpZW50c1tvY3RhdmUqbU51bVNjYWxlc1Blck9jdGF2ZStzY2FsZV0uaGVpZ2h0KClgIGZhaWxlZCBpbiAAeSBtdXN0IGJlIGxlc3MgdGhhbiB0aGUgaW1hZ2UgaGVpZ2h0AEFzc2VydGlvbiBgZy5jaGFubmVscygpID09IDJgIGZhaWxlZCBpbiAATnVtYmVyIG9mIGNoYW5uZWxzIHNob3VsZCBiZSAyAEFzc2VydGlvbiBgbWF4X2hlaWdodCA+IDBgIGZhaWxlZCBpbiAATWF4aW11bSBiaW4gc2hvdWxkIGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgaGlzdCAhPSBOVUxMYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9vcmllbnRhdGlvbl9hc3NpZ25tZW50LmgASGlzdG9ncmFtIHBvaW50ZXIgaXMgTlVMTABBc3NlcnRpb24gYChmYmluKzAuNWYpID4gMCAmJiAoZmJpbi0wLjVmKSA8IG51bV9iaW5zYCBmYWlsZWQgaW4gAERlY2ltYWwgYmluIHBvc2l0aW9uIGluZGV4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYG1hZ25pdHVkZSA+PSAwYCBmYWlsZWQgaW4gAE1hZ25pdHVkZSBjYW5ub3QgYmUgbmVnYXRpdmUAQXNzZXJ0aW9uIGBudW1fYmlucyA+PSAwYCBmYWlsZWQgaW4gAE51bWJlciBiaW5zIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB3MSA+PSAwYCBmYWlsZWQgaW4gAHcxIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGB3MiA+PSAwYCBmYWlsZWQgaW4gAHcyIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGBiMSA+PSAwICYmIGIxIDwgbnVtX2JpbnNgIGZhaWxlZCBpbiAAYjEgYmluIGluZGV4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGIyID49IDAgJiYgYjIgPCBudW1fYmluc2AgZmFpbGVkIGluIABiMiBiaW4gaW5kZXggb3V0IG9mIHJhbmdlAElEIGFscmVhZHkgZXhpc3RzAEJ1aWxkIFB5cmFtaWQARXh0cmFjdCBGZWF0dXJlcwBBc3NlcnRpb24gYGFzc2lnbm1lbnQuc2l6ZSgpID09IG51bV9pbmRpY2VzYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2JpbmFyeV9oaWVyYXJjaGljYWxfY2x1c3RlcmluZy5oAEFzc2lnbm1lbnQgc2l6ZSB3cm9uZwBBc3NlcnRpb24gYGFzc2lnbm1lbnRbaV0gIT0gLTFgIGZhaWxlZCBpbiAAQXNzaWdubWVudCBpcyBpbnZhbGlkAEFzc2VydGlvbiBgYXNzaWdubWVudFtpXSA8IG51bV9pbmRpY2VzYCBmYWlsZWQgaW4gAEFzc2lnbm1lbnQgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgaW5kaWNlc1thc3NpZ25tZW50W2ldXSA8IG51bV9mZWF0dXJlc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGl0LT5zZWNvbmQuc2l6ZSgpICE9IDBgIGZhaWxlZCBpbiAAQ2x1c3RlciBtdXN0IGhhdmUgYXRsZWFzZXQgMSBmZWF0dXJlAEFzc2VydGlvbiBgbUsgPT0gbUNlbnRlcnMuc2l6ZSgpYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL21hdGNoZXJzL2ttZWRvaWRzLmgAayBzaG91bGQgbWF0Y2ggdGhlIG51bWJlciBvZiBjbHVzdGVyIGNlbnRlcnMAQXNzZXJ0aW9uIGBudW1fZmVhdHVyZXMgPiAwYCBmYWlsZWQgaW4gAE51bWJlciBvZiBmZWF0dXJlcyBtdXN0IGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPD0gbnVtX2ZlYXR1cmVzYCBmYWlsZWQgaW4gAE1vcmUgaW5kaWNlcyB0aGFuIGZlYXR1cmVzAEFzc2VydGlvbiBgbnVtX2luZGljZXMgPj0gbUtgIGZhaWxlZCBpbiAATm90IGVub3VnaCBmZWF0dXJlcwBBc3NpZ25tZW50IHNpemUgaXMgaW5jb3JyZWN0AEFzc2VydGlvbiBgbnVtX2NlbnRlcnMgPiAwYCBmYWlsZWQgaW4gAFRoZXJlIG11c3QgYmUgYXQgbGVhc3QgMSBjZW50ZXIAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvdmlzdWFsX2RhdGFiYXNlLmgAQXNzZXJ0aW9uIGBkZXRlY3RvcmAgZmFpbGVkIGluIABEZXRlY3RvciBpcyBOVUxMAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKCkuc2l6ZSgpID4gMGAgZmFpbGVkIGluIABQeXJhbWlkIGlzIGVtcHR5AEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKClbMF0ud2lkdGgoKSA9PSBkZXRlY3Rvci0+d2lkdGgoKWAgZmFpbGVkIGluIABQeXJhbWlkIGFuZCBkZXRlY3RvciBzaXplIG1pc21hdGNoAEFzc2VydGlvbiBgcHlyYW1pZC0+aW1hZ2VzKClbMF0uaGVpZ2h0KCkgPT0gZGV0ZWN0b3ItPmhlaWdodCgpYCBmYWlsZWQgaW4gAE5TdDNfXzIxNGRlZmF1bHRfZGVsZXRlSU42dmlzaW9uOEtleWZyYW1lSUxpOTZFRUVFRQBOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQTjZ2aXNpb244S2V5ZnJhbWVJTGk5NkVFRU5TXzE0ZGVmYXVsdF9kZWxldGVJUzNfRUVOU185YWxsb2NhdG9ySVMzX0VFRUUAWyVzXSBbJXNdIFslc10gOiBGb3VuZCAlZCBmZWF0dXJlcyBpbiBxdWVyeQBib29sIHZpc2lvbjo6VmlzdWFsRGF0YWJhc2U8dmlzaW9uOjpGUkVBS0V4dHJhY3RvciwgdmlzaW9uOjpCaW5hcnlGZWF0dXJlU3RvcmUsIHZpc2lvbjo6QmluYXJ5RmVhdHVyZU1hdGNoZXI8OTY+ID46OnF1ZXJ5KGNvbnN0IHZpc2lvbjo6R2F1c3NpYW5TY2FsZVNwYWNlUHlyYW1pZCAqKSBbRkVBVFVSRV9FWFRSQUNUT1IgPSB2aXNpb246OkZSRUFLRXh0cmFjdG9yLCBTVE9SRSA9IHZpc2lvbjo6QmluYXJ5RmVhdHVyZVN0b3JlLCBNQVRDSEVSID0gdmlzaW9uOjpCaW5hcnlGZWF0dXJlTWF0Y2hlcjw5Nj5dAEZpbmQgTWF0Y2hlcyAoMSkASG91Z2ggVm90aW5nICgxKQBGaW5kIEhvdWdoIE1hdGNoZXMgKDEpAEVzdGltYXRlIEhvbW9ncmFwaHkgKDEpAEZpbmQgSW5saWVycyAoMSkARmluZCBNYXRjaGVzICgyKQBIb3VnaCBWb3RpbmcgKDIpAEZpbmQgSG91Z2ggTWF0Y2hlcyAoMikARXN0aW1hdGUgSG9tb2dyYXBoeSAoMikARmluZCBJbmxpZXJzICgyKQBBc3NlcnRpb24gYDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvZmVhdHVyZV9tYXRjaGVyLWlubGluZS5oAEZhaWxlZCB0byBjb21wdXRlIG1hdHJpeCBpbnZlcnNlAEFzc2VydGlvbiBgYmVzdF9pbmRleCAhPSBzdGQ6Om51bWVyaWNfbGltaXRzPHNpemVfdD46Om1heCgpYCBmYWlsZWQgaW4gAFNvbWV0aGluZyBzdHJhbmdlAEFzc2VydGlvbiBgbU1hdGNoZXMuc2l6ZSgpIDw9IGZlYXR1cmVzMS0+c2l6ZSgpYCBmYWlsZWQgaW4gAE51bWJlciBvZiBtYXRjaGVzIHNob3VsZCBiZSBsb3dlcgBBc3NlcnRpb24gYGh5cC5zaXplKCkgPj0gOSptYXhfbnVtX2h5cG90aGVzZXNgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvaG9tb2dyYXBoeV9lc3RpbWF0aW9uL3JvYnVzdF9ob21vZ3JhcGh5LmgAaHlwIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSA5Km1heF9udW1faHlwb3RoZXNlcwBBc3NlcnRpb24gYHRtcF9pLnNpemUoKSA+PSBudW1fcG9pbnRzYCBmYWlsZWQgaW4gAHRtcF9pIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSBudW1fcG9pbnRzAEFzc2VydGlvbiBgaHlwX2Nvc3RzLnNpemUoKSA+PSBtYXhfbnVtX2h5cG90aGVzZXNgIGZhaWxlZCBpbiAAaHlwX2Nvc3RzIHZlY3RvciBzaG91bGQgYmUgb2Ygc2l6ZSBtYXhfbnVtX2h5cG90aGVzZXMAQXNzZXJ0aW9uIGBuIDw9IGluX21hdGNoZXMuc2l6ZSgpYCBmYWlsZWQgaW4gAFNob3VsZCBiZSB0aGUgc2FtZQBBc3NlcnRpb24gYGRpc3RCaW5BbmdsZSA+PSAwYCBmYWlsZWQgaW4gAGRpc3RCaW5BbmdsZSBtdXN0IG5vdCBiZSBuZWdhdGl2ZQBBc3NlcnRpb24gYG1Sb290LmdldCgpYCBmYWlsZWQgaW4gAFJvb3QgY2Fubm90IGJlIE5VTEwAQXNzZXJ0aW9uIGBtaW5pICE9IC0xYCBmYWlsZWQgaW4gAE1pbmltdW0gaW5kZXggbm90IHNldABBc3NlcnRpb24gYHggPj0gbU1pblhgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuaAB4IG91dCBvZiByYW5nZQBBc3NlcnRpb24gYHggPCBtTWF4WGAgZmFpbGVkIGluIABBc3NlcnRpb24gYHkgPj0gbU1pbllgIGZhaWxlZCBpbiAAeSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGB5IDwgbU1heFlgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBhbmdsZSA+IC1QSWAgZmFpbGVkIGluIABhbmdsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBhbmdsZSA8PSBQSWAgZmFpbGVkIGluIABBc3NlcnRpb24gYHNjYWxlID49IG1NaW5TY2FsZWAgZmFpbGVkIGluIABzY2FsZSBvdXQgb2YgcmFuZ2UAQXNzZXJ0aW9uIGBzY2FsZSA8IG1NYXhTY2FsZWAgZmFpbGVkIGluIABBc3NlcnRpb24gYGluZGV4ID49IDBgIGZhaWxlZCBpbiAAaW5kZXggb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluWCA+PSAwYCBmYWlsZWQgaW4gAGJpblggb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluWCA8IG1OdW1YQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblkgPj0gMGAgZmFpbGVkIGluIABiaW5ZIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGJpblkgPCBtTnVtWUJpbnNgIGZhaWxlZCBpbiAAQXNzZXJ0aW9uIGBiaW5BbmdsZSA+PSAwYCBmYWlsZWQgaW4gAGJpbkFuZ2xlIG91dCBvZiByYW5nZQBBc3NlcnRpb24gYGJpbkFuZ2xlIDwgbU51bUFuZ2xlQmluc2AgZmFpbGVkIGluIABBc3NlcnRpb24gYGJpblNjYWxlID49IDBgIGZhaWxlZCBpbiAAYmluU2NhbGUgb3V0IG9mIHJhbmdlAEFzc2VydGlvbiBgYmluU2NhbGUgPCBtTnVtU2NhbGVCaW5zYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgaW5kZXggPD0gKGJpblggKyBiaW5ZKm1OdW1YQmlucyArIGJpbkFuZ2xlKm1OdW1YQmlucyptTnVtWUJpbnMgKyBiaW5TY2FsZSptTnVtWEJpbnMqbU51bVlCaW5zKm1OdW1BbmdsZUJpbnMpYCBmYWlsZWQgaW4gAEFzc2VydGlvbiBgc2l6ZSA+IDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvaG91Z2hfc2ltaWxhcml0eV92b3RpbmcuY3BwAHNpemUgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYG1SZWZJbWFnZVdpZHRoID4gMGAgZmFpbGVkIGluIAB3aWR0aCBtdXN0IGJlIHBvc2l0aXZlAEFzc2VydGlvbiBgbVJlZkltYWdlSGVpZ2h0ID4gMGAgZmFpbGVkIGluIABoZWlnaHQgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYG4gPiAwYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL3V0aWxzL3BhcnRpYWxfc29ydC5oAG4gbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYGsgPiAwYCBmYWlsZWQgaW4gAGsgbXVzdCBiZSBwb3NpdGl2ZQBBc3NlcnRpb24gYHB5cmFtaWRgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvbWF0Y2hlcnMvZnJlYWsuaABQeXJhbWlkIGlzIE5VTEwAQXNzZXJ0aW9uIGBzdG9yZS5zaXplKCkgPT0gcG9pbnRzLnNpemUoKWAgZmFpbGVkIGluIABGZWF0dXJlIHN0b3JlIGhhcyBub3QgYmVlbiBhbGxvY2F0ZWQAQXNzZXJ0aW9uIGBudW1fcG9pbnRzID09IHBvaW50cy5zaXplKClgIGZhaWxlZCBpbiAAU2hvdWxkIGJlIHNhbWUgc2l6ZQBBc3NlcnRpb24gYG9jdGF2ZSA+PSAwYCBmYWlsZWQgaW4gAC9Vc2Vycy9hcy9Eb2N1bWVudHMvRGV2ZWxvcG1lbnQvZ2l0aHViL2FydG9vbGtpdDUtanMvbGliL2FydG9vbGtpdDUvbGliL1NSQy9LUE0vRnJlYWtNYXRjaGVyL2RldGVjdG9ycy9nYXVzc2lhbl9zY2FsZV9zcGFjZV9weXJhbWlkLmgAT2N0YXZlIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGBvY3RhdmUgPCBtTnVtT2N0YXZlc2AgZmFpbGVkIGluIABPY3RhdmUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIG9jdGF2ZXMAQXNzZXJ0aW9uIGBzY2FsZSA+PSAwYCBmYWlsZWQgaW4gAFNjYWxlIG11c3QgYmUgcG9zaXRpdmUAQXNzZXJ0aW9uIGBzY2FsZSA8IG1OdW1TY2FsZXNQZXJPY3RhdmVgIGZhaWxlZCBpbiAAU2NhbGUgbXVzdCBiZSBsZXNzIHRoYW4gbnVtYmVyIG9mIHNjYWxlIHBlciBvY3RhdmUAJW0tJWQtJVktJUgtJU0tJVMAQXNzZXJ0aW9uIGB3aWR0aCA+IDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL2ltYWdlLmNwcABXaWR0aCBjYW5ub3QgYmUgemVybwBBc3NlcnRpb24gYGhlaWdodCA+IDBgIGZhaWxlZCBpbiAASGVpZ2h0IGNhbm5vdCBiZSB6ZXJvAEFzc2VydGlvbiBgc3RlcCA+PSB3aWR0aGAgZmFpbGVkIGluIABTdGVwIG11c3QgYmUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRoZSB3aWR0aABBc3NlcnRpb24gYGNoYW5uZWxzID4gMGAgZmFpbGVkIGluIABOdW1iZXIgb2YgY2hhbm5lbHMgY2Fubm90IGJlIHplcm8AQXNzZXJ0aW9uIGBtRGF0YS5nZXQoKWAgZmFpbGVkIGluIABEYXRhIHBvaW50ZXIgaXMgTlVMTABOU3QzX18yMTRkZWZhdWx0X2RlbGV0ZUloRUUATlN0M19fMjIwX19zaGFyZWRfcHRyX3BvaW50ZXJJUGhOU18xNGRlZmF1bHRfZGVsZXRlSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUASW52YWxpZCBpbWFnZSB0eXBlADE2TnVsbEFycmF5RGVsZXRlckloRQBOU3QzX18yMjBfX3NoYXJlZF9wdHJfcG9pbnRlcklQaDE2TnVsbEFycmF5RGVsZXRlckloRU5TXzlhbGxvY2F0b3JJaEVFRUUAQXNzZXJ0aW9uIGBtU3RhcnRUaW1lID49IDBgIGZhaWxlZCBpbiAAL1VzZXJzL2FzL0RvY3VtZW50cy9EZXZlbG9wbWVudC9naXRodWIvYXJ0b29sa2l0NS1qcy9saWIvYXJ0b29sa2l0NS9saWIvU1JDL0tQTS9GcmVha01hdGNoZXIvZnJhbWV3b3JrL3RpbWVycy5jcHAAIGxpbmUgADogAENsb2NrIGhhcyBub3QgYmVlbiBzdGFydGVkAEFzc2VydGlvbiBgbVN0b3BUaW1lID49IDBgIGZhaWxlZCBpbiAAQ2xvY2sgaGFzIG5vdCBiZWVuIHN0b3BwZWQAWyVzXSBbJXNdIFslc10gOiAlczogJWYgbXMAIElORk8gIAB2aXNpb246OlNjb3BlZFRpbWVyOjp+U2NvcGVkVGltZXIoKQBzZXR1cAB0ZWFyZG93bgBzZXR1cEFSMgBfYWRkTWFya2VyAF9hZGRNdWx0aU1hcmtlcgBfYWRkTkZUTWFya2VyAGdldE11bHRpTWFya2VyTnVtAGdldE11bHRpTWFya2VyQ291bnQAX2xvYWRDYW1lcmEAc2V0TWFya2VySW5mb0RpcgBzZXRNYXJrZXJJbmZvVmVydGV4AGdldFRyYW5zTWF0U3F1YXJlAGdldFRyYW5zTWF0U3F1YXJlQ29udABnZXRUcmFuc01hdE11bHRpU3F1YXJlAGdldFRyYW5zTWF0TXVsdGlTcXVhcmVSb2J1c3QAZGV0ZWN0TWFya2VyAGdldE1hcmtlck51bQBkZXRlY3RORlRNYXJrZXIAZ2V0TXVsdGlFYWNoTWFya2VyAGdldE1hcmtlcgBnZXRORlRNYXJrZXIAc2V0RGVidWdNb2RlAGdldERlYnVnTW9kZQBnZXRQcm9jZXNzaW5nSW1hZ2UAc2V0TG9nTGV2ZWwAZ2V0TG9nTGV2ZWwAc2V0UHJvamVjdGlvbk5lYXJQbGFuZQBnZXRQcm9qZWN0aW9uTmVhclBsYW5lAHNldFByb2plY3Rpb25GYXJQbGFuZQBnZXRQcm9qZWN0aW9uRmFyUGxhbmUAc2V0VGhyZXNob2xkTW9kZQBnZXRUaHJlc2hvbGRNb2RlAHNldFRocmVzaG9sZABnZXRUaHJlc2hvbGQAc2V0UGF0dGVybkRldGVjdGlvbk1vZGUAZ2V0UGF0dGVybkRldGVjdGlvbk1vZGUAc2V0UGF0dFJhdGlvAGdldFBhdHRSYXRpbwBzZXRNYXRyaXhDb2RlVHlwZQBnZXRNYXRyaXhDb2RlVHlwZQBzZXRMYWJlbGluZ01vZGUAZ2V0TGFiZWxpbmdNb2RlAHNldEltYWdlUHJvY01vZGUAZ2V0SW1hZ2VQcm9jTW9kZQBFUlJPUl9BUkNPTlRST0xMRVJfTk9UX0ZPVU5EAEVSUk9SX01VTFRJTUFSS0VSX05PVF9GT1VORABFUlJPUl9NQVJLRVJfSU5ERVhfT1VUX09GX0JPVU5EUwBBUl9ERUJVR19ESVNBQkxFAEFSX0RFQlVHX0VOQUJMRQBBUl9ERUZBVUxUX0RFQlVHX01PREUAQVJfTEFCRUxJTkdfV0hJVEVfUkVHSU9OAEFSX0xBQkVMSU5HX0JMQUNLX1JFR0lPTgBBUl9ERUZBVUxUX0xBQkVMSU5HX01PREUAQVJfREVGQVVMVF9MQUJFTElOR19USFJFU0gAQVJfSU1BR0VfUFJPQ19GUkFNRV9JTUFHRQBBUl9JTUFHRV9QUk9DX0ZJRUxEX0lNQUdFAEFSX0RFRkFVTFRfSU1BR0VfUFJPQ19NT0RFAEFSX1RFTVBMQVRFX01BVENISU5HX0NPTE9SAEFSX1RFTVBMQVRFX01BVENISU5HX01PTk8AQVJfTUFUUklYX0NPREVfREVURUNUSU9OAEFSX1RFTVBMQVRFX01BVENISU5HX0NPTE9SX0FORF9NQVRSSVgAQVJfVEVNUExBVEVfTUFUQ0hJTkdfTU9OT19BTkRfTUFUUklYAEFSX0RFRkFVTFRfUEFUVEVSTl9ERVRFQ1RJT05fTU9ERQBBUl9VU0VfVFJBQ0tJTkdfSElTVE9SWQBBUl9OT1VTRV9UUkFDS0lOR19ISVNUT1JZAEFSX1VTRV9UUkFDS0lOR19ISVNUT1JZX1YyAEFSX0RFRkFVTFRfTUFSS0VSX0VYVFJBQ1RJT05fTU9ERQBBUl9NQVhfTE9PUF9DT1VOVABBUl9MT09QX0JSRUFLX1RIUkVTSABBUl9MT0dfTEVWRUxfREVCVUcAQVJfTE9HX0xFVkVMX0lORk8AQVJfTE9HX0xFVkVMX1dBUk4AQVJfTE9HX0xFVkVMX0VSUk9SAEFSX0xPR19MRVZFTF9SRUxfSU5GTwBBUl9NQVRSSVhfQ09ERV8zeDMAQVJfTUFUUklYX0NPREVfM3gzX0hBTU1JTkc2MwBBUl9NQVRSSVhfQ09ERV8zeDNfUEFSSVRZNjUAQVJfTUFUUklYX0NPREVfNHg0AEFSX01BVFJJWF9DT0RFXzR4NF9CQ0hfMTNfOV8zAEFSX01BVFJJWF9DT0RFXzR4NF9CQ0hfMTNfNV81AEFSX0xBQkVMSU5HX1RIUkVTSF9NT0RFX01BTlVBTABBUl9MQUJFTElOR19USFJFU0hfTU9ERV9BVVRPX01FRElBTgBBUl9MQUJFTElOR19USFJFU0hfTU9ERV9BVVRPX09UU1UAQVJfTEFCRUxJTkdfVEhSRVNIX01PREVfQVVUT19BREFQVElWRQBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTk9ORQBBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfUEFUVEVSTl9FWFRSQUNUSU9OAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9HRU5FUklDAEFSX01BUktFUl9JTkZPX0NVVE9GRl9QSEFTRV9NQVRDSF9DT05UUkFTVABBUl9NQVJLRVJfSU5GT19DVVRPRkZfUEhBU0VfTUFUQ0hfQkFSQ09ERV9OT1RfRk9VTkQAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0JBUkNPREVfRURDX0ZBSUwAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX01BVENIX0NPTkZJREVOQ0UAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX1BPU0VfRVJST1IAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX1BPU0VfRVJST1JfTVVMVEkAQVJfTUFSS0VSX0lORk9fQ1VUT0ZGX1BIQVNFX0hFVVJJU1RJQ19UUk9VQkxFU09NRV9NQVRSSVhfQ09ERVMAYWxsb2NhdG9yPFQ+OjphbGxvY2F0ZShzaXplX3QgbikgJ24nIGV4Y2VlZHMgbWF4aW11bSBzdXBwb3J0ZWQgc2l6ZQBJbWFnZSBwcm9jLiBtb2RlIHNldCB0byAlZC4KAExhYmVsaW5nIG1vZGUgc2V0IHRvICVkCgB2aWlmAFBhdHRlcm4gcmF0aW8gc2l6ZSBzZXQgdG8gJWYuCgBQYXR0ZXJuIGRldGVjdGlvbiBtb2RlIHNldCB0byAlZC4KAFRocmVzaG9sZCBzZXQgdG8gJWQKAHZpaWkAVGhyZXNob2xkIG1vZGUgc2V0IHRvICVkCgBkaWkAdmlpZABpaQB2aWkAb24uAG9mZi4ARGVidWcgbW9kZSBzZXQgdG8gJXMKAFRyYWNraW5nIGxvc3QuICVkCgBUcmFja2VkIHBhZ2UgJWQgKG1heCAlZCkuCgB7IHZhciAkYSA9IGFyZ3VtZW50czsgdmFyIGkgPSAwOyBpZiAoIWFydG9vbGtpdFsiTkZUTWFya2VySW5mbyJdKSB7IGFydG9vbGtpdFsiTkZUTWFya2VySW5mbyJdID0gKHsgaWQ6IDAsIGVycm9yOiAtMSwgZm91bmQ6IDAsIHBvc2U6IFswLDAsMCwwLCAwLDAsMCwwLCAwLDAsMCwwXSB9KTsgfSB2YXIgbWFya2VySW5mbyA9IGFydG9vbGtpdFsiTkZUTWFya2VySW5mbyJdOyBtYXJrZXJJbmZvWyJpZCJdID0gJGFbaSsrXTsgbWFya2VySW5mb1siZXJyb3IiXSA9ICRhW2krK107IG1hcmtlckluZm9bImZvdW5kIl0gPSAxOyBtYXJrZXJJbmZvWyJwb3NlIl1bMF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bMV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bMl0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bM10gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bNF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bNV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bNl0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bN10gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bOF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bOV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJwb3NlIl1bMTBdID0gJGFbaSsrXTsgbWFya2VySW5mb1sicG9zZSJdWzExXSA9ICRhW2krK107IH0AeyB2YXIgJGEgPSBhcmd1bWVudHM7IHZhciBpID0gMDsgaWYgKCFhcnRvb2xraXRbIk5GVE1hcmtlckluZm8iXSkgeyBhcnRvb2xraXRbIk5GVE1hcmtlckluZm8iXSA9ICh7IGlkOiAwLCBlcnJvcjogLTEsIGZvdW5kOiAwLCBwb3NlOiBbMCwwLDAsMCwgMCwwLDAsMCwgMCwwLDAsMF0gfSk7IH0gdmFyIG1hcmtlckluZm8gPSBhcnRvb2xraXRbIk5GVE1hcmtlckluZm8iXTsgbWFya2VySW5mb1siaWQiXSA9ICRhW2krK107IG1hcmtlckluZm9bImVycm9yIl0gPSAtMTsgbWFya2VySW5mb1siZm91bmQiXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVswXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVsxXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVsyXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVszXSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs0XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs1XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs2XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs3XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs4XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVs5XSA9IDA7IG1hcmtlckluZm9bInBvc2UiXVsxMF0gPSAwOyBtYXJrZXJJbmZvWyJwb3NlIl1bMTFdID0gMDsgfQB7IHZhciAkYSA9IGFyZ3VtZW50czsgdmFyIGkgPSAxMjsgaWYgKCFhcnRvb2xraXRbIm1hcmtlckluZm8iXSkgeyBhcnRvb2xraXRbIm1hcmtlckluZm8iXSA9ICh7IHBvczogWzAsMF0sIGxpbmU6IFtbMCwwLDBdLCBbMCwwLDBdLCBbMCwwLDBdLCBbMCwwLDBdXSwgdmVydGV4OiBbWzAsMF0sIFswLDBdLCBbMCwwXSwgWzAsMF1dIH0pOyB9IHZhciBtYXJrZXJJbmZvID0gYXJ0b29sa2l0WyJtYXJrZXJJbmZvIl07IG1hcmtlckluZm9bImFyZWEiXSA9ICQwOyBtYXJrZXJJbmZvWyJpZCJdID0gJDE7IG1hcmtlckluZm9bImlkUGF0dCJdID0gJDI7IG1hcmtlckluZm9bImlkTWF0cml4Il0gPSAkMzsgbWFya2VySW5mb1siZGlyIl0gPSAkNDsgbWFya2VySW5mb1siZGlyUGF0dCJdID0gJDU7IG1hcmtlckluZm9bImRpck1hdHJpeCJdID0gJDY7IG1hcmtlckluZm9bImNmIl0gPSAkNzsgbWFya2VySW5mb1siY2ZQYXR0Il0gPSAkODsgbWFya2VySW5mb1siY2ZNYXRyaXgiXSA9ICQ5OyBtYXJrZXJJbmZvWyJwb3MiXVswXSA9ICQxMDsgbWFya2VySW5mb1sicG9zIl1bMV0gPSAkMTE7IG1hcmtlckluZm9bImxpbmUiXVswXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVswXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVswXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsxXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsxXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsxXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsyXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsyXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVsyXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVszXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVszXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bImxpbmUiXVszXVsyXSA9ICRhW2krK107IG1hcmtlckluZm9bInZlcnRleCJdWzBdWzBdID0gJGFbaSsrXTsgbWFya2VySW5mb1sidmVydGV4Il1bMF1bMV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJ2ZXJ0ZXgiXVsxXVswXSA9ICRhW2krK107IG1hcmtlckluZm9bInZlcnRleCJdWzFdWzFdID0gJGFbaSsrXTsgbWFya2VySW5mb1sidmVydGV4Il1bMl1bMF0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJ2ZXJ0ZXgiXVsyXVsxXSA9ICRhW2krK107IG1hcmtlckluZm9bInZlcnRleCJdWzNdWzBdID0gJGFbaSsrXTsgbWFya2VySW5mb1sidmVydGV4Il1bM11bMV0gPSAkYVtpKytdOyBtYXJrZXJJbmZvWyJlcnJvckNvcnJlY3RlZCJdID0gJGFbaSsrXTsgfQB7IGlmICghYXJ0b29sa2l0WyJtdWx0aUVhY2hNYXJrZXJJbmZvIl0pIHsgYXJ0b29sa2l0WyJtdWx0aUVhY2hNYXJrZXJJbmZvIl0gPSAoe30pOyB9IHZhciBtdWx0aUVhY2hNYXJrZXIgPSBhcnRvb2xraXRbIm11bHRpRWFjaE1hcmtlckluZm8iXTsgbXVsdGlFYWNoTWFya2VyWyd2aXNpYmxlJ10gPSAkMDsgbXVsdGlFYWNoTWFya2VyWydwYXR0SWQnXSA9ICQxOyBtdWx0aUVhY2hNYXJrZXJbJ3BhdHRUeXBlJ10gPSAkMjsgbXVsdGlFYWNoTWFya2VyWyd3aWR0aCddID0gJDM7IH0AaWlpAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFAE5TdDNfXzIyMV9fYmFzaWNfc3RyaW5nX2NvbW1vbklMYjFFRUUAbG9hZENhbWVyYSgpOiBFcnJvciBsb2FkaW5nIHBhcmFtZXRlciBmaWxlICVzIGZvciBjYW1lcmEuCgBpaWlpAEFSVG9vbEtpdEpTKCk6IFVuYWJsZSB0byBzZXQgdXAgTkZUIG1hcmtlci4KAFJlYWRpbmcgJXMuZnNldDMKAGZzZXQzAEVycm9yIHJlYWRpbmcgS1BNIGRhdGEgZnJvbSAlcy5mc2V0MwoAICBBc3NpZ25lZCBwYWdlIG5vLiAlZC4KAEVycm9yOiBrcG1DaGFuZ2VQYWdlTm9PZlJlZkRhdGFTZXQKAEVycm9yOiBrcG1NZXJnZVJlZkRhdGFTZXQKACAgRG9uZS4KAFJlYWRpbmcgJXMuZnNldAoAZnNldABFcnJvciByZWFkaW5nIGRhdGEgZnJvbSAlcy5mc2V0CgBFcnJvcjoga3BtU2V0UmVmRGF0YVNldAoATG9hZGluZyBvZiBORlQgZGF0YSBjb21wbGV0ZS4KAEFSVG9vbEtpdEpTKCk6IFVuYWJsZSB0byBzZXQgdXAgQVIgbXVsdGltYXJrZXIuCgBjb25maWcgZGF0YSBsb2FkIGVycm9yICEhCgBBUlRvb2xLaXRKUygpOiBVbmFibGUgdG8gc2V0IHVwIEFSIG1hcmtlci4KAGxvYWRNYXJrZXIoKTogRXJyb3IgbG9hZGluZyBwYXR0ZXJuIGZpbGUgJXMuCgBFcnJvcjogYXIyQ3JlYXRlSGFuZGxlLgoAaWlpaWkAc2V0dXAoKTogRXJyb3I6IGFyUGF0dENyZWF0ZUhhbmRsZS4KAEFsbG9jYXRlZCB2aWRlb0ZyYW1lU2l6ZSAlZAoAeyBpZiAoIWFydG9vbGtpdFsiZnJhbWVNYWxsb2MiXSkgeyBhcnRvb2xraXRbImZyYW1lTWFsbG9jIl0gPSAoe30pOyB9IHZhciBmcmFtZU1hbGxvYyA9IGFydG9vbGtpdFsiZnJhbWVNYWxsb2MiXTsgZnJhbWVNYWxsb2NbImZyYW1lcG9pbnRlciJdID0gJDE7IGZyYW1lTWFsbG9jWyJmcmFtZXNpemUiXSA9ICQyOyBmcmFtZU1hbGxvY1siY2FtZXJhIl0gPSAkMzsgZnJhbWVNYWxsb2NbInRyYW5zZm9ybSJdID0gJDQ7IGZyYW1lTWFsbG9jWyJ2aWRlb0x1bWFQb2ludGVyIl0gPSAkNTsgfQAqKiogQ2FtZXJhIFBhcmFtZXRlciByZXNpemVkIGZyb20gJWQsICVkLiAqKioKAHNldENhbWVyYSgpOiBFcnJvcjogYXJQYXJhbUxUQ3JlYXRlLgoAc2V0Q2FtZXJhKCk6IEVycm9yOiBhckNyZWF0ZUhhbmRsZS4KAHNldENhbWVyYSgpOiBFcnJvciBjcmVhdGluZyAzRCBoYW5kbGUAT3V0IG9mIG1lbW9yeSEhCgBFcnJvcjogbWFsbG9jCgAjIyMgRmVhdHVyZSBjYW5kaWRhdGVzIGZvciB0cmFja2luZyBhcmUgb3ZlcmZsb3cuCgBCb2d1cyBtZXNzYWdlIGNvZGUgJWQAQUxJR05fVFlQRSBpcyB3cm9uZywgcGxlYXNlIGZpeABNQVhfQUxMT0NfQ0hVTksgaXMgd3JvbmcsIHBsZWFzZSBmaXgAQm9ndXMgYnVmZmVyIGNvbnRyb2wgbW9kZQBJbnZhbGlkIGNvbXBvbmVudCBJRCAlZCBpbiBTT1MASW52YWxpZCBjcm9wIHJlcXVlc3QARENUIGNvZWZmaWNpZW50IG91dCBvZiByYW5nZQBEQ1Qgc2NhbGVkIGJsb2NrIHNpemUgJWR4JWQgbm90IHN1cHBvcnRlZABDb21wb25lbnQgaW5kZXggJWQ6IG1pc21hdGNoaW5nIHNhbXBsaW5nIHJhdGlvICVkOiVkLCAlZDolZCwgJWMAQm9ndXMgSHVmZm1hbiB0YWJsZSBkZWZpbml0aW9uAEJvZ3VzIGlucHV0IGNvbG9yc3BhY2UAQm9ndXMgSlBFRyBjb2xvcnNwYWNlAEJvZ3VzIG1hcmtlciBsZW5ndGgAV3JvbmcgSlBFRyBsaWJyYXJ5IHZlcnNpb246IGxpYnJhcnkgaXMgJWQsIGNhbGxlciBleHBlY3RzICVkAFNhbXBsaW5nIGZhY3RvcnMgdG9vIGxhcmdlIGZvciBpbnRlcmxlYXZlZCBzY2FuAEludmFsaWQgbWVtb3J5IHBvb2wgY29kZSAlZABVbnN1cHBvcnRlZCBKUEVHIGRhdGEgcHJlY2lzaW9uICVkAEludmFsaWQgcHJvZ3Jlc3NpdmUgcGFyYW1ldGVycyBTcz0lZCBTZT0lZCBBaD0lZCBBbD0lZABJbnZhbGlkIHByb2dyZXNzaXZlIHBhcmFtZXRlcnMgYXQgc2NhbiBzY3JpcHQgZW50cnkgJWQAQm9ndXMgc2FtcGxpbmcgZmFjdG9ycwBJbnZhbGlkIHNjYW4gc2NyaXB0IGF0IGVudHJ5ICVkAEltcHJvcGVyIGNhbGwgdG8gSlBFRyBsaWJyYXJ5IGluIHN0YXRlICVkAEpQRUcgcGFyYW1ldGVyIHN0cnVjdCBtaXNtYXRjaDogbGlicmFyeSB0aGlua3Mgc2l6ZSBpcyAldSwgY2FsbGVyIGV4cGVjdHMgJXUAQm9ndXMgdmlydHVhbCBhcnJheSBhY2Nlc3MAQnVmZmVyIHBhc3NlZCB0byBKUEVHIGxpYnJhcnkgaXMgdG9vIHNtYWxsAFN1c3BlbnNpb24gbm90IGFsbG93ZWQgaGVyZQBDQ0lSNjAxIHNhbXBsaW5nIG5vdCBpbXBsZW1lbnRlZCB5ZXQAVG9vIG1hbnkgY29sb3IgY29tcG9uZW50czogJWQsIG1heCAlZABVbnN1cHBvcnRlZCBjb2xvciBjb252ZXJzaW9uIHJlcXVlc3QAQm9ndXMgREFDIGluZGV4ICVkAEJvZ3VzIERBQyB2YWx1ZSAweCV4AEJvZ3VzIERIVCBpbmRleCAlZABCb2d1cyBEUVQgaW5kZXggJWQARW1wdHkgSlBFRyBpbWFnZSAoRE5MIG5vdCBzdXBwb3J0ZWQpAFJlYWQgZnJvbSBFTVMgZmFpbGVkAFdyaXRlIHRvIEVNUyBmYWlsZWQARGlkbid0IGV4cGVjdCBtb3JlIHRoYW4gb25lIHNjYW4ASW5wdXQgZmlsZSByZWFkIGVycm9yAE91dHB1dCBmaWxlIHdyaXRlIGVycm9yIC0tLSBvdXQgb2YgZGlzayBzcGFjZT8ARnJhY3Rpb25hbCBzYW1wbGluZyBub3QgaW1wbGVtZW50ZWQgeWV0AEh1ZmZtYW4gY29kZSBzaXplIHRhYmxlIG92ZXJmbG93AE1pc3NpbmcgSHVmZm1hbiBjb2RlIHRhYmxlIGVudHJ5AE1heGltdW0gc3VwcG9ydGVkIGltYWdlIGRpbWVuc2lvbiBpcyAldSBwaXhlbHMARW1wdHkgaW5wdXQgZmlsZQBQcmVtYXR1cmUgZW5kIG9mIGlucHV0IGZpbGUAQ2Fubm90IHRyYW5zY29kZSBkdWUgdG8gbXVsdGlwbGUgdXNlIG9mIHF1YW50aXphdGlvbiB0YWJsZSAlZABTY2FuIHNjcmlwdCBkb2VzIG5vdCB0cmFuc21pdCBhbGwgZGF0YQBJbnZhbGlkIGNvbG9yIHF1YW50aXphdGlvbiBtb2RlIGNoYW5nZQBOb3QgaW1wbGVtZW50ZWQgeWV0AFJlcXVlc3RlZCBmZWF0dXJlIHdhcyBvbWl0dGVkIGF0IGNvbXBpbGUgdGltZQBBcml0aG1ldGljIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQAQmFja2luZyBzdG9yZSBub3Qgc3VwcG9ydGVkAEh1ZmZtYW4gdGFibGUgMHglMDJ4IHdhcyBub3QgZGVmaW5lZABKUEVHIGRhdGFzdHJlYW0gY29udGFpbnMgbm8gaW1hZ2UAUXVhbnRpemF0aW9uIHRhYmxlIDB4JTAyeCB3YXMgbm90IGRlZmluZWQATm90IGEgSlBFRyBmaWxlOiBzdGFydHMgd2l0aCAweCUwMnggMHglMDJ4AEluc3VmZmljaWVudCBtZW1vcnkgKGNhc2UgJWQpAENhbm5vdCBxdWFudGl6ZSBtb3JlIHRoYW4gJWQgY29sb3IgY29tcG9uZW50cwBDYW5ub3QgcXVhbnRpemUgdG8gZmV3ZXIgdGhhbiAlZCBjb2xvcnMAQ2Fubm90IHF1YW50aXplIHRvIG1vcmUgdGhhbiAlZCBjb2xvcnMASW52YWxpZCBKUEVHIGZpbGUgc3RydWN0dXJlOiAlcyBiZWZvcmUgU09GAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPRiBtYXJrZXJzAEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogbWlzc2luZyBTT1MgbWFya2VyAFVuc3VwcG9ydGVkIEpQRUcgcHJvY2VzczogU09GIHR5cGUgMHglMDJ4AEludmFsaWQgSlBFRyBmaWxlIHN0cnVjdHVyZTogdHdvIFNPSSBtYXJrZXJzAEZhaWxlZCB0byBjcmVhdGUgdGVtcG9yYXJ5IGZpbGUgJXMAUmVhZCBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUAU2VlayBmYWlsZWQgb24gdGVtcG9yYXJ5IGZpbGUAV3JpdGUgZmFpbGVkIG9uIHRlbXBvcmFyeSBmaWxlIC0tLSBvdXQgb2YgZGlzayBzcGFjZT8AQXBwbGljYXRpb24gdHJhbnNmZXJyZWQgdG9vIGZldyBzY2FubGluZXMAVW5zdXBwb3J0ZWQgbWFya2VyIHR5cGUgMHglMDJ4AFZpcnR1YWwgYXJyYXkgY29udHJvbGxlciBtZXNzZWQgdXAASW1hZ2UgdG9vIHdpZGUgZm9yIHRoaXMgaW1wbGVtZW50YXRpb24AUmVhZCBmcm9tIFhNUyBmYWlsZWQAV3JpdGUgdG8gWE1TIGZhaWxlZABDb3B5cmlnaHQgKEMpIDIwMTgsIFRob21hcyBHLiBMYW5lLCBHdWlkbyBWb2xsYmVkaW5nADljICAxNC1KYW4tMjAxOABDYXV0aW9uOiBxdWFudGl6YXRpb24gdGFibGVzIGFyZSB0b28gY29hcnNlIGZvciBiYXNlbGluZSBKUEVHAEFkb2JlIEFQUDE0IG1hcmtlcjogdmVyc2lvbiAlZCwgZmxhZ3MgMHglMDR4IDB4JTA0eCwgdHJhbnNmb3JtICVkAFVua25vd24gQVBQMCBtYXJrZXIgKG5vdCBKRklGKSwgbGVuZ3RoICV1AFVua25vd24gQVBQMTQgbWFya2VyIChub3QgQWRvYmUpLCBsZW5ndGggJXUARGVmaW5lIEFyaXRobWV0aWMgVGFibGUgMHglMDJ4OiAweCUwMngARGVmaW5lIEh1ZmZtYW4gVGFibGUgMHglMDJ4AERlZmluZSBRdWFudGl6YXRpb24gVGFibGUgJWQgIHByZWNpc2lvbiAlZABEZWZpbmUgUmVzdGFydCBJbnRlcnZhbCAldQBGcmVlZCBFTVMgaGFuZGxlICV1AE9idGFpbmVkIEVNUyBoYW5kbGUgJXUARW5kIE9mIEltYWdlACAgICAgICAgJTNkICUzZCAlM2QgJTNkICUzZCAlM2QgJTNkICUzZABKRklGIEFQUDAgbWFya2VyOiB2ZXJzaW9uICVkLiUwMmQsIGRlbnNpdHkgJWR4JWQgICVkAFdhcm5pbmc6IHRodW1ibmFpbCBpbWFnZSBzaXplIGRvZXMgbm90IG1hdGNoIGRhdGEgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogdHlwZSAweCUwMngsIGxlbmd0aCAldQAgICAgd2l0aCAlZCB4ICVkIHRodW1ibmFpbCBpbWFnZQBNaXNjZWxsYW5lb3VzIG1hcmtlciAweCUwMngsIGxlbmd0aCAldQBVbmV4cGVjdGVkIG1hcmtlciAweCUwMngAICAgICAgICAlNHUgJTR1ICU0dSAlNHUgJTR1ICU0dSAlNHUgJTR1AFF1YW50aXppbmcgdG8gJWQgPSAlZColZColZCBjb2xvcnMAUXVhbnRpemluZyB0byAlZCBjb2xvcnMAU2VsZWN0ZWQgJWQgY29sb3JzIGZvciBxdWFudGl6YXRpb24AQXQgbWFya2VyIDB4JTAyeCwgcmVjb3ZlcnkgYWN0aW9uICVkAFJTVCVkAFNtb290aGluZyBub3Qgc3VwcG9ydGVkIHdpdGggbm9uc3RhbmRhcmQgc2FtcGxpbmcgcmF0aW9zAFN0YXJ0IE9mIEZyYW1lIDB4JTAyeDogd2lkdGg9JXUsIGhlaWdodD0ldSwgY29tcG9uZW50cz0lZAAgICAgQ29tcG9uZW50ICVkOiAlZGh4JWR2IHE9JWQAU3RhcnQgb2YgSW1hZ2UAU3RhcnQgT2YgU2NhbjogJWQgY29tcG9uZW50cwAgICAgQ29tcG9uZW50ICVkOiBkYz0lZCBhYz0lZAAgIFNzPSVkLCBTZT0lZCwgQWg9JWQsIEFsPSVkAENsb3NlZCB0ZW1wb3JhcnkgZmlsZSAlcwBPcGVuZWQgdGVtcG9yYXJ5IGZpbGUgJXMASkZJRiBleHRlbnNpb24gbWFya2VyOiBKUEVHLWNvbXByZXNzZWQgdGh1bWJuYWlsIGltYWdlLCBsZW5ndGggJXUASkZJRiBleHRlbnNpb24gbWFya2VyOiBwYWxldHRlIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AEpGSUYgZXh0ZW5zaW9uIG1hcmtlcjogUkdCIHRodW1ibmFpbCBpbWFnZSwgbGVuZ3RoICV1AFVucmVjb2duaXplZCBjb21wb25lbnQgSURzICVkICVkICVkLCBhc3N1bWluZyBZQ2JDcgBGcmVlZCBYTVMgaGFuZGxlICV1AE9idGFpbmVkIFhNUyBoYW5kbGUgJXUAVW5rbm93biBBZG9iZSBjb2xvciB0cmFuc2Zvcm0gY29kZSAlZABDb3JydXB0IEpQRUcgZGF0YTogYmFkIGFyaXRobWV0aWMgY29kZQBJbmNvbnNpc3RlbnQgcHJvZ3Jlc3Npb24gc2VxdWVuY2UgZm9yIGNvbXBvbmVudCAlZCBjb2VmZmljaWVudCAlZABDb3JydXB0IEpQRUcgZGF0YTogJXUgZXh0cmFuZW91cyBieXRlcyBiZWZvcmUgbWFya2VyIDB4JTAyeABDb3JydXB0IEpQRUcgZGF0YTogcHJlbWF0dXJlIGVuZCBvZiBkYXRhIHNlZ21lbnQAQ29ycnVwdCBKUEVHIGRhdGE6IGJhZCBIdWZmbWFuIGNvZGUAV2FybmluZzogdW5rbm93biBKRklGIHJldmlzaW9uIG51bWJlciAlZC4lMDJkAFByZW1hdHVyZSBlbmQgb2YgSlBFRyBmaWxlAENvcnJ1cHQgSlBFRyBkYXRhOiBmb3VuZCBtYXJrZXIgMHglMDJ4IGluc3RlYWQgb2YgUlNUJWQASW52YWxpZCBTT1MgcGFyYW1ldGVycyBmb3Igc2VxdWVudGlhbCBKUEVHAEFwcGxpY2F0aW9uIHRyYW5zZmVycmVkIHRvbyBtYW55IHNjYW5saW5lcwBKUEVHTUVNACVsZCVjAFNPUwBMU0UAJXMKAHJ3YQBpbmZpbml0eQAAAQIEBwMGBQAtKyAgIDBYMHgAKG51bGwpAC0wWCswWCAwWC0weCsweCAweABpbmYASU5GAG5hbgBOQU4ALgBMQ19BTEwATEFORwBDLlVURi04AFBPU0lYAE1VU0xfTE9DUEFUSAB0ZXJtaW5hdGluZyB3aXRoICVzIGV4Y2VwdGlvbiBvZiB0eXBlICVzOiAlcwB0ZXJtaW5hdGluZyB3aXRoICVzIGV4Y2VwdGlvbiBvZiB0eXBlICVzAHRlcm1pbmF0aW5nIHdpdGggJXMgZm9yZWlnbiBleGNlcHRpb24AdGVybWluYXRpbmcAdW5jYXVnaHQAU3Q5ZXhjZXB0aW9uAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAFN0OXR5cGVfaW5mbwBOMTBfX2N4eGFiaXYxMjBfX3NpX2NsYXNzX3R5cGVfaW5mb0UATjEwX19jeHhhYml2MTE3X19jbGFzc190eXBlX2luZm9FAHRlcm1pbmF0ZV9oYW5kbGVyIHVuZXhwZWN0ZWRseSByZXR1cm5lZABTdDExbG9naWNfZXJyb3IAU3QxMmxlbmd0aF9lcnJvcgBOMTBfX2N4eGFiaXYxMTdfX3BiYXNlX3R5cGVfaW5mb0UATjEwX19jeHhhYml2MTE5X19wb2ludGVyX3R5cGVfaW5mb0UATjEwX19jeHhhYml2MTIzX19mdW5kYW1lbnRhbF90eXBlX2luZm9FAHYAYgBjAGgAYQBzAHQAaQBqAG0AZgBkAE4xMF9fY3h4YWJpdjEyMV9fdm1pX2NsYXNzX3R5cGVfaW5mb0UAdm9pZABib29sAGNoYXIAc2lnbmVkIGNoYXIAdW5zaWduZWQgY2hhcgBzaG9ydAB1bnNpZ25lZCBzaG9ydABpbnQAdW5zaWduZWQgaW50AGxvbmcAdW5zaWduZWQgbG9uZwBmbG9hdABkb3VibGUAc3RkOjpzdHJpbmcAc3RkOjpiYXNpY19zdHJpbmc8dW5zaWduZWQgY2hhcj4Ac3RkOjp3c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAGVtc2NyaXB0ZW46OnZhbABlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8bG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgbG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDMyX3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGZsb2F0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxkb3VibGU+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmcgZG91YmxlPgBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0llRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJZEVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWZFRQBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ltRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbEVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWpFRQBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lpRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJdEVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXNFRQBOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0loRUUATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJYUVFAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWNFRQBOMTBlbXNjcmlwdGVuM3ZhbEUATlN0M19fMjEyYmFzaWNfc3RyaW5nSURpTlNfMTFjaGFyX3RyYWl0c0lEaUVFTlNfOWFsbG9jYXRvcklEaUVFRUUATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUATlN0M19fMjEyYmFzaWNfc3RyaW5nSXdOU18xMWNoYXJfdHJhaXRzSXdFRU5TXzlhbGxvY2F0b3JJd0VFRUUATlN0M19fMjEyYmFzaWNfc3RyaW5nSWhOU18xMWNoYXJfdHJhaXRzSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUATlN0M19fMjhpb3NfYmFzZUUATlN0M19fMjliYXNpY19pb3NJY05TXzExY2hhcl90cmFpdHNJY0VFRUUATlN0M19fMjliYXNpY19pb3NJd05TXzExY2hhcl90cmFpdHNJd0VFRUUATlN0M19fMjE1YmFzaWNfc3RyZWFtYnVmSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAE5TdDNfXzIxNWJhc2ljX3N0cmVhbWJ1Zkl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRQBOU3QzX18yMTNiYXNpY19pc3RyZWFtSWNOU18xMWNoYXJfdHJhaXRzSWNFRUVFAE5TdDNfXzIxM2Jhc2ljX2lzdHJlYW1Jd05TXzExY2hhcl90cmFpdHNJd0VFRUUATlN0M19fMjEzYmFzaWNfb3N0cmVhbUljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRQBOU3QzX18yMTNiYXNpY19vc3RyZWFtSXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFAE5TdDNfXzIxMV9fc3Rkb3V0YnVmSXdFRQBOU3QzX18yMTFfX3N0ZG91dGJ1ZkljRUUAdW5zdXBwb3J0ZWQgbG9jYWxlIGZvciBzdGFuZGFyZCBpbnB1dABOU3QzX18yMTBfX3N0ZGluYnVmSXdFRQBOU3QzX18yMTBfX3N0ZGluYnVmSWNFRQBOU3QzX18yN2NvbGxhdGVJY0VFAE5TdDNfXzI2bG9jYWxlNWZhY2V0RQBOU3QzX18yN2NvbGxhdGVJd0VFACVwAEMATlN0M19fMjdudW1fZ2V0SWNOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yOV9fbnVtX2dldEljRUUATlN0M19fMjE0X19udW1fZ2V0X2Jhc2VFAE5TdDNfXzI3bnVtX2dldEl3TlNfMTlpc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjlfX251bV9nZXRJd0VFACVwAAAAAEwAbGwAJQAAAAAAbABOU3QzX18yN251bV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzI5X19udW1fcHV0SWNFRQBOU3QzX18yMTRfX251bV9wdXRfYmFzZUUATlN0M19fMjdudW1fcHV0SXdOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yOV9fbnVtX3B1dEl3RUUAJUg6JU06JVMAJW0vJWQvJXkAJUk6JU06JVMgJXAAJWEgJWIgJWQgJUg6JU06JVMgJVkAQU0AUE0ASmFudWFyeQBGZWJydWFyeQBNYXJjaABBcHJpbABNYXkASnVuZQBKdWx5AEF1Z3VzdABTZXB0ZW1iZXIAT2N0b2JlcgBOb3ZlbWJlcgBEZWNlbWJlcgBKYW4ARmViAE1hcgBBcHIASnVuAEp1bABBdWcAU2VwAE9jdABOb3YARGVjAFN1bmRheQBNb25kYXkAVHVlc2RheQBXZWRuZXNkYXkAVGh1cnNkYXkARnJpZGF5AFNhdHVyZGF5AFN1bgBNb24AVHVlAFdlZABUaHUARnJpAFNhdAAlbS8lZC8leSVZLSVtLSVkJUk6JU06JVMgJXAlSDolTSVIOiVNOiVTJUg6JU06JVNOU3QzX18yOHRpbWVfZ2V0SWNOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yMjBfX3RpbWVfZ2V0X2Nfc3RvcmFnZUljRUUATlN0M19fMjl0aW1lX2Jhc2VFAE5TdDNfXzI4dGltZV9nZXRJd05TXzE5aXN0cmVhbWJ1Zl9pdGVyYXRvckl3TlNfMTFjaGFyX3RyYWl0c0l3RUVFRUVFAE5TdDNfXzIyMF9fdGltZV9nZXRfY19zdG9yYWdlSXdFRQBOU3QzX18yOHRpbWVfcHV0SWNOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJY05TXzExY2hhcl90cmFpdHNJY0VFRUVFRQBOU3QzX18yMTBfX3RpbWVfcHV0RQBOU3QzX18yOHRpbWVfcHV0SXdOU18xOW9zdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yMTBtb25leXB1bmN0SWNMYjBFRUUATlN0M19fMjEwbW9uZXlfYmFzZUUATlN0M19fMjEwbW9uZXlwdW5jdEljTGIxRUVFAE5TdDNfXzIxMG1vbmV5cHVuY3RJd0xiMEVFRQBOU3QzX18yMTBtb25leXB1bmN0SXdMYjFFRUUAMDEyMzQ1Njc4OQAlTGYATlN0M19fMjltb25leV9nZXRJY05TXzE5aXN0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzIxMV9fbW9uZXlfZ2V0SWNFRQAwMTIzNDU2Nzg5AE5TdDNfXzI5bW9uZXlfZ2V0SXdOU18xOWlzdHJlYW1idWZfaXRlcmF0b3JJd05TXzExY2hhcl90cmFpdHNJd0VFRUVFRQBOU3QzX18yMTFfX21vbmV5X2dldEl3RUUAJS4wTGYATlN0M19fMjltb25leV9wdXRJY05TXzE5b3N0cmVhbWJ1Zl9pdGVyYXRvckljTlNfMTFjaGFyX3RyYWl0c0ljRUVFRUVFAE5TdDNfXzIxMV9fbW9uZXlfcHV0SWNFRQBOU3QzX18yOW1vbmV5X3B1dEl3TlNfMTlvc3RyZWFtYnVmX2l0ZXJhdG9ySXdOU18xMWNoYXJfdHJhaXRzSXdFRUVFRUUATlN0M19fMjExX19tb25leV9wdXRJd0VFAE5TdDNfXzI4bWVzc2FnZXNJY0VFAE5TdDNfXzIxM21lc3NhZ2VzX2Jhc2VFAE5TdDNfXzIxN19fd2lkZW5fZnJvbV91dGY4SUxtMzJFRUUATlN0M19fMjdjb2RlY3Z0SURpYzExX19tYnN0YXRlX3RFRQBOU3QzX18yMTJjb2RlY3Z0X2Jhc2VFAE5TdDNfXzIxNl9fbmFycm93X3RvX3V0ZjhJTG0zMkVFRQBOU3QzX18yOG1lc3NhZ2VzSXdFRQBOU3QzX18yN2NvZGVjdnRJY2MxMV9fbWJzdGF0ZV90RUUATlN0M19fMjdjb2RlY3Z0SXdjMTFfX21ic3RhdGVfdEVFAE5TdDNfXzI3Y29kZWN2dElEc2MxMV9fbWJzdGF0ZV90RUUATlN0M19fMjZsb2NhbGU1X19pbXBFAE5TdDNfXzI1Y3R5cGVJY0VFAE5TdDNfXzIxMGN0eXBlX2Jhc2VFAE5TdDNfXzI1Y3R5cGVJd0VFAGZhbHNlAHRydWUATlN0M19fMjhudW1wdW5jdEljRUUATlN0M19fMjhudW1wdW5jdEl3RUUATlN0M19fMjE0X19zaGFyZWRfY291bnRFAE5TdDNfXzIxOV9fc2hhcmVkX3dlYWtfY291bnRFAEHwvgMLAQEAQZjAAwtaXEgAAAEAAAB8SAAAAQAAANBQAAABAAAAICIAAAAAAACUUQAAAQAAANhRAAABAAAAjFAAAAEAAABM4gAAAAAAAAhSAAABAAAAOFIAAAEAAAAEUQAAAQAAAC4sAEGAwQMLDSxRAAABAAAALgAAACwAQaDBAwvJApxIAAABAAAA3EgAAAEAAAAcSQAAAQAAAFBJAAABAAAAnE4AAAEAAADUTgAAAQAAAAxPAAABAAAARE8AAAEAAAB8TwAAAQAAAJhPAAABAAAAtE8AAAEAAADQTwAAAQAAAIRJAAABAAAAtEkAAAAAAADYSQAAAQAAAAhKAAAAAAAAbE4AAAEAAABM4gAAAAAAAIROAAABAAAATOIAAAAAAADsTwAAAQAAAAxQAAABAAAAAQAAAAAAAAC8UAAADwAAAHDhAADg4QAA4OEAAAAAAAAY4AAAIOAAACjgAAA44AAAQOAAAEjgAABY4AAAYOAAAGjgAACA4AAAoOAAAKjgAACw4AAAuOAAAMDgAADI4AAA0OAAANjgAADg4AAA6OAAAPDgAAD44AAAAOEAABDhAAAg4QAAMOEAAEDhAABI4QAAAQAAAAAAAABDAEHzwwMLBgEAAAAAAQBB6MUDCxGgRgAAAAAAALRGAAACEAAABgBBiMYDCwaQ5QAAWOEAQbjGAwsZmOMAAP/////QRgAAAAAAAORGAAACEAAABgBB4MYDCwbQ5QAAWOEAQZDHAwsV7OMAAP////8ARwAAFEcAAAIQAAAGAEG0xwMLBhDmAABY4QBB6McDCxH/////MEcAAERHAAACEAAABgBBiMgDCwZI5gAAWOEAQbzIAwsR/////wBHAAAURwAAAjAAAAYAQdzIAwsGgOYAAFjhAEGMyQMLFZjjAAD/////MEcAAERHAAACMAAABgBBsMkDCwa45gAAWOEAQeDJAwsV7OMAAP////8ARwAAFEcAAAIQAAAGAEGEygMLBoDmAABY4QBBuMoDCxH/////MEcAAERHAAACEAAABgBB2MoDCwa45gAAWOEAQYzLAwsK/////xxIAABY4QBBsMsDCxb4OQAAQOAAAMjlAAABAAAA/////wABAEHQywMLBtxHAABY4QBB8MsDCxT4OQAASOAAAAjmAAABAAAA/////wBBkMwDCwacRwAAWOEAQbDMAwsNiDoAAEDgAABA5gAAAQBByMwDCwZcRwAAWOEAQejMAwsKiDoAAEjgAAB45gBBgM0DCwacRwAAWOEAQaDNAwsNaDkAAEDgAACw5gAAAQBBuM0DCwZcRwAAWOEAQdjNAwsKaDkAAEjgAADo5gBB8M0DC1X/////AQAAAP////8CAAAA/////wMAAABM4gAAHAAAAP////8JAAAA/////wsAAAD/////BAAAAP////8KAAAA/////wwAAAD/////DQAAAP////8OAEGEzwMLBf////8XAEHIzwMLlgH/////GAAAAP////8ZAAAA/////xoAAAD/////DwAAAP////8QAAAA/////xEAAAD/////EgAAAP////8TAAAA/////xQAAAD/////FQAAAP////8WAAAA/////xsAAAD/////HAAAAP////8FAAAA/////wYAAAD/////BwAAAP////8IAAAAWOEAAFDoAABY4QAAWOgAQfDeAwsCWOEAQYDfAwsFOOgAAI8AQZDfAwsRjwAAAAAAAACg7wAAAAAAAI8=";function lA(){try{if(n)return new Uint8Array(n);var A=jg(fA);if(A)return A;if(h)return h(fA);throw"both async and sync fetching of the wasm failed"}catch(A){JA(A)}}function uA(){return n||!i&&!o||"function"!=typeof fetch?new Promise((function(A,I){A(lA())})):fetch(fA,{credentials:"same-origin"}).then((function(A){if(!A.ok)throw"failed to load wasm binary file at '"+fA+"'";return A.arrayBuffer()})).catch((function(){return lA()}))}function WA(){var I={env:BB,wasi_snapshot_preview1:BB,global:{NaN:NaN,Infinity:1/0},"global.Math":Math,asm2wasm:k};function g(I,g){var B=I.exports;A.asm=B,eA()}function B(A){g(A.instance)}function C(A){return uA().then((function(A){return WebAssembly.instantiate(A,I)})).then(A,(function(A){S("failed to asynchronously prepare wasm: "+A),JA(A)}))}if(YA(),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){return S("Module.instantiateWasm callback failed with error: "+A),!1}return function(){if(n||"function"!=typeof WebAssembly.instantiateStreaming||LA(fA)||"function"!=typeof fetch)return C(B);fetch(fA,{credentials:"same-origin"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(B,(function(A){S("wasm streaming compile failed: "+A),S("falling back to ArrayBuffer instantiation"),C(B)}))}))}(),{}}LA(fA)||(fA=y(fA)),A.asm=WA;var pA=[function(A,I,g,B,C,Q){artoolkit.frameMalloc||(artoolkit.frameMalloc={});var E=artoolkit.frameMalloc;E.framepointer=I,E.framesize=g,E.camera=B,E.transform=C,E.videoLumaPointer=Q},function(A,I,g,B){artoolkit.multiEachMarkerInfo||(artoolkit.multiEachMarkerInfo={});var C=artoolkit.multiEachMarkerInfo;C.visible=A,C.pattId=I,C.pattType=g,C.width=B},function(A,I,g,B,C,Q,E,i,o,D,a,w,F,G,h,s,R,U,y,t,S,M,n,c,r,k,K,N,Y,e,J,H,L){var q=arguments,d=12;artoolkit.markerInfo||(artoolkit.markerInfo={pos:[0,0],line:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],vertex:[[0,0],[0,0],[0,0],[0,0]]});var f=artoolkit.markerInfo;f.area=A,f.id=I,f.idPatt=g,f.idMatrix=B,f.dir=C,f.dirPatt=Q,f.dirMatrix=E,f.cf=i,f.cfPatt=o,f.cfMatrix=D,f.pos[0]=a,f.pos[1]=w,f.line[0][0]=q[d++],f.line[0][1]=q[d++],f.line[0][2]=q[d++],f.line[1][0]=q[d++],f.line[1][1]=q[d++],f.line[1][2]=q[d++],f.line[2][0]=q[d++],f.line[2][1]=q[d++],f.line[2][2]=q[d++],f.line[3][0]=q[d++],f.line[3][1]=q[d++],f.line[3][2]=q[d++],f.vertex[0][0]=q[d++],f.vertex[0][1]=q[d++],f.vertex[1][0]=q[d++],f.vertex[1][1]=q[d++],f.vertex[2][0]=q[d++],f.vertex[2][1]=q[d++],f.vertex[3][0]=q[d++],f.vertex[3][1]=q[d++],f.errorCorrected=q[d++]},function(A,I,g,B,C,Q,E,i,o,D,a,w,F,G){var h=arguments,s=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var R=artoolkit.NFTMarkerInfo;R.id=h[s++],R.error=h[s++],R.found=1,R.pose[0]=h[s++],R.pose[1]=h[s++],R.pose[2]=h[s++],R.pose[3]=h[s++],R.pose[4]=h[s++],R.pose[5]=h[s++],R.pose[6]=h[s++],R.pose[7]=h[s++],R.pose[8]=h[s++],R.pose[9]=h[s++],R.pose[10]=h[s++],R.pose[11]=h[s++]},function(A){var I=arguments,g=0;artoolkit.NFTMarkerInfo||(artoolkit.NFTMarkerInfo={id:0,error:-1,found:0,pose:[0,0,0,0,0,0,0,0,0,0,0,0]});var B=artoolkit.NFTMarkerInfo;B.id=I[g++],B.error=-1,B.found=0,B.pose[0]=0,B.pose[1]=0,B.pose[2]=0,B.pose[3]=0,B.pose[4]=0,B.pose[5]=0,B.pose[6]=0,B.pose[7]=0,B.pose[8]=0,B.pose[9]=0,B.pose[10]=0,B.pose[11]=0}];function ZA(A,I,g,B,C,Q,E){return pA[A](I,g,B,C,Q,E)}function bA(A,I,g,B,C){return pA[A](I,g,B,C)}function xA(A,I,g,B,C,Q,E,i,o,D,a,w,F,G,h){return pA[A](I,g,B,C,Q,E,i,o,D,a,w,F,G,h)}function mA(A,I){return pA[A](I)}function XA(A,I,g,B,C,Q,E,i,o,D,a,w,F,G,h,s,R,U,y,t,S,M,n,c,r,k,K,N,Y,e,J,H,L,q){return pA[A](I,g,B,C,Q,E,i,o,D,a,w,F,G,h,s,R,U,y,t,S,M,n,c,r,k,K,N,Y,e,J,H,L,q)}function VA(A){return A.replace(/\b__Z[\w\d_]+/g,(function(A){return A==A?A:A+" ["+A+"]"}))}function OA(){var A=new Error;if(!A.stack){try{throw new Error}catch(I){A=I}if(!A.stack)return"(no stack trace available)"}return A.stack.toString()}function TA(){var I=OA();return A.extraStackTrace&&(I+="\n"+A.extraStackTrace()),VA(I)}wA.push({func:function(){EB()}},{func:function(){aB()}},{func:function(){iB()}},{func:function(){oB()}});var jA={};function PA(){return Q||"./this.program"}function vA(A){var I,g;vA.called?(g=AA[A>>2],I=AA[g>>2]):(vA.called=!0,jA.USER="web_user",jA.LOGNAME="web_user",jA.PATH="/",jA.PWD="/",jA.HOME="/home/web_user",jA.LANG=("object"===("undefined"==typeof navigator?"undefined":D(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",jA._=PA(),I=L(1024),g=L(256),AA[g>>2]=I,AA[A>>2]=g);var B=[],C=0;for(var Q in jA)if("string"==typeof jA[Q]){var E=Q+"="+jA[Q];B.push(E),C+=E.length}if(C>1024)throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");for(var i=0;i<B.length;i++)j(E=B[i],I),AA[g+4*i>>2]=I,I+=E.length+1;AA[g+4*B.length>>2]=0}function zA(A){return RB(A)}var _A={};function $A(A,I,g){throw _A[A]={ptr:A,adjusted:[A],type:I,destructor:g,refcount:0,caught:!1,rethrown:!1},"uncaught_exception"in DB?DB.uncaught_exceptions++:DB.uncaught_exceptions=1,A}function AI(){}function II(I){return A.___errno_location&&(AA[A.___errno_location()>>2]=I),I}function gI(A,I){return II(63),-1}var BI={splitPath:function(A){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(A).slice(1)},normalizeArray:function(A,I){for(var g=0,B=A.length-1;B>=0;B--){var C=A[B];"."===C?A.splice(B,1):".."===C?(A.splice(B,1),g++):g&&(A.splice(B,1),g--)}if(I)for(;g;g--)A.unshift("..");return A},normalize:function(A){var I="/"===A.charAt(0),g="/"===A.substr(-1);return(A=BI.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||I||(A="."),A&&g&&(A+="/"),(I?"/":"")+A},dirname:function(A){var I=BI.splitPath(A),g=I[0],B=I[1];return g||B?(B&&(B=B.substr(0,B.length-1)),g+B):"."},basename:function(A){if("/"===A)return"/";var I=A.lastIndexOf("/");return-1===I?A:A.substr(I+1)},extname:function(A){return BI.splitPath(A)[3]},join:function(){var A=Array.prototype.slice.call(arguments,0);return BI.normalize(A.join("/"))},join2:function(A,I){return BI.normalize(A+"/"+I)}},CI={resolve:function(){for(var A="",I=!1,g=arguments.length-1;g>=-1&&!I;g--){var B=g>=0?arguments[g]:iI.cwd();if("string"!=typeof B)throw new TypeError("Arguments to path.resolve must be strings");if(!B)return"";A=B+"/"+A,I="/"===B.charAt(0)}return(I?"/":"")+(A=BI.normalizeArray(A.split("/").filter((function(A){return!!A})),!I).join("/"))||"."},relative:function(A,I){function g(A){for(var I=0;I<A.length&&""===A[I];I++);for(var g=A.length-1;g>=0&&""===A[g];g--);return I>g?[]:A.slice(I,g-I+1)}A=CI.resolve(A).substr(1),I=CI.resolve(I).substr(1);for(var B=g(A.split("/")),C=g(I.split("/")),Q=Math.min(B.length,C.length),E=Q,i=0;i<Q;i++)if(B[i]!==C[i]){E=i;break}var o=[];for(i=E;i<B.length;i++)o.push("..");return(o=o.concat(C.slice(E))).join("/")}},QI={ttys:[],init:function(){},shutdown:function(){},register:function(A,I){QI.ttys[A]={input:[],output:[],ops:I},iI.registerDevice(A,QI.stream_ops)},stream_ops:{open:function(A){var I=QI.ttys[A.node.rdev];if(!I)throw new iI.ErrnoError(43);A.tty=I,A.seekable=!1},close:function(A){A.tty.ops.flush(A.tty)},flush:function(A){A.tty.ops.flush(A.tty)},read:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.get_char)throw new iI.ErrnoError(60);for(var Q=0,E=0;E<B;E++){var i;try{i=A.tty.ops.get_char(A.tty)}catch(A){throw new iI.ErrnoError(29)}if(void 0===i&&0===Q)throw new iI.ErrnoError(6);if(null==i)break;Q++,I[g+E]=i}return Q&&(A.node.timestamp=Date.now()),Q},write:function(A,I,g,B,C){if(!A.tty||!A.tty.ops.put_char)throw new iI.ErrnoError(60);try{for(var Q=0;Q<B;Q++)A.tty.ops.put_char(A.tty,I[g+Q])}catch(A){throw new iI.ErrnoError(29)}return B&&(A.node.timestamp=Date.now()),Q}},default_tty_ops:{get_char:function(A){if(!A.input.length){var I=null;if(w){var g=Buffer.alloc?Buffer.alloc(256):new Buffer(256),B=0;try{B=s.readSync(process.stdin.fd,g,0,256,null)}catch(A){if(-1==A.toString().indexOf("EOF"))throw A;B=0}I=B>0?g.slice(0,B).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(I=window.prompt("Input: "))&&(I+="\n"):"function"==typeof readline&&null!==(I=readline())&&(I+="\n");if(!I)return null;A.input=Xg(I,!0)}return A.input.shift()},put_char:function(A,I){null===I||10===I?(t(d(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},flush:function(A){A.output&&A.output.length>0&&(t(d(A.output,0)),A.output=[])}},default_tty1_ops:{put_char:function(A,I){null===I||10===I?(S(d(A.output,0)),A.output=[]):0!=I&&A.output.push(I)},flush:function(A){A.output&&A.output.length>0&&(S(d(A.output,0)),A.output=[])}}},EI={ops_table:null,mount:function(A){return EI.createNode(null,"/",16895,0)},createNode:function(A,I,g,B){if(iI.isBlkdev(g)||iI.isFIFO(g))throw new iI.ErrnoError(63);EI.ops_table||(EI.ops_table={dir:{node:{getattr:EI.node_ops.getattr,setattr:EI.node_ops.setattr,lookup:EI.node_ops.lookup,mknod:EI.node_ops.mknod,rename:EI.node_ops.rename,unlink:EI.node_ops.unlink,rmdir:EI.node_ops.rmdir,readdir:EI.node_ops.readdir,symlink:EI.node_ops.symlink},stream:{llseek:EI.stream_ops.llseek}},file:{node:{getattr:EI.node_ops.getattr,setattr:EI.node_ops.setattr},stream:{llseek:EI.stream_ops.llseek,read:EI.stream_ops.read,write:EI.stream_ops.write,allocate:EI.stream_ops.allocate,mmap:EI.stream_ops.mmap,msync:EI.stream_ops.msync}},link:{node:{getattr:EI.node_ops.getattr,setattr:EI.node_ops.setattr,readlink:EI.node_ops.readlink},stream:{}},chrdev:{node:{getattr:EI.node_ops.getattr,setattr:EI.node_ops.setattr},stream:iI.chrdev_stream_ops}});var C=iI.createNode(A,I,g,B);return iI.isDir(C.mode)?(C.node_ops=EI.ops_table.dir.node,C.stream_ops=EI.ops_table.dir.stream,C.contents={}):iI.isFile(C.mode)?(C.node_ops=EI.ops_table.file.node,C.stream_ops=EI.ops_table.file.stream,C.usedBytes=0,C.contents=null):iI.isLink(C.mode)?(C.node_ops=EI.ops_table.link.node,C.stream_ops=EI.ops_table.link.stream):iI.isChrdev(C.mode)&&(C.node_ops=EI.ops_table.chrdev.node,C.stream_ops=EI.ops_table.chrdev.stream),C.timestamp=Date.now(),A&&(A.contents[I]=C),C},getFileDataAsRegularArray:function(A){if(A.contents&&A.contents.subarray){for(var I=[],g=0;g<A.usedBytes;++g)I.push(A.contents[g]);return I}return A.contents},getFileDataAsTypedArray:function(A){return A.contents?A.contents.subarray?A.contents.subarray(0,A.usedBytes):new Uint8Array(A.contents):new Uint8Array},expandFileStorage:function(A,I){var g=A.contents?A.contents.length:0;if(!(g>=I)){I=Math.max(I,g*(g<1048576?2:1.125)|0),0!=g&&(I=Math.max(I,256));var B=A.contents;A.contents=new Uint8Array(I),A.usedBytes>0&&A.contents.set(B.subarray(0,A.usedBytes),0)}},resizeFileStorage:function(A,I){if(A.usedBytes!=I){if(0==I)return A.contents=null,void(A.usedBytes=0);if(!A.contents||A.contents.subarray){var g=A.contents;return A.contents=new Uint8Array(I),g&&A.contents.set(g.subarray(0,Math.min(I,A.usedBytes))),void(A.usedBytes=I)}if(A.contents||(A.contents=[]),A.contents.length>I)A.contents.length=I;else for(;A.contents.length<I;)A.contents.push(0);A.usedBytes=I}},node_ops:{getattr:function(A){var I={};return I.dev=iI.isChrdev(A.mode)?A.id:1,I.ino=A.id,I.mode=A.mode,I.nlink=1,I.uid=0,I.gid=0,I.rdev=A.rdev,iI.isDir(A.mode)?I.size=4096:iI.isFile(A.mode)?I.size=A.usedBytes:iI.isLink(A.mode)?I.size=A.link.length:I.size=0,I.atime=new Date(A.timestamp),I.mtime=new Date(A.timestamp),I.ctime=new Date(A.timestamp),I.blksize=4096,I.blocks=Math.ceil(I.size/I.blksize),I},setattr:function(A,I){void 0!==I.mode&&(A.mode=I.mode),void 0!==I.timestamp&&(A.timestamp=I.timestamp),void 0!==I.size&&EI.resizeFileStorage(A,I.size)},lookup:function(A,I){throw iI.genericErrors[44]},mknod:function(A,I,g,B){return EI.createNode(A,I,g,B)},rename:function(A,I,g){if(iI.isDir(A.mode)){var B;try{B=iI.lookupNode(I,g)}catch(A){}if(B)for(var C in B.contents)throw new iI.ErrnoError(55)}delete A.parent.contents[A.name],A.name=g,I.contents[g]=A,A.parent=I},unlink:function(A,I){delete A.contents[I]},rmdir:function(A,I){var g=iI.lookupNode(A,I);for(var B in g.contents)throw new iI.ErrnoError(55);delete A.contents[I]},readdir:function(A){var I=[".",".."];for(var g in A.contents)A.contents.hasOwnProperty(g)&&I.push(g);return I},symlink:function(A,I,g){var B=EI.createNode(A,I,41471,0);return B.link=g,B},readlink:function(A){if(!iI.isLink(A.mode))throw new iI.ErrnoError(28);return A.link}},stream_ops:{read:function(A,I,g,B,C){var Q=A.node.contents;if(C>=A.node.usedBytes)return 0;var E=Math.min(A.node.usedBytes-C,B);if(E>8&&Q.subarray)I.set(Q.subarray(C,C+E),g);else for(var i=0;i<E;i++)I[g+i]=Q[C+i];return E},write:function(A,I,g,B,C,Q){if(!B)return 0;var E=A.node;if(E.timestamp=Date.now(),I.subarray&&(!E.contents||E.contents.subarray)){if(Q)return E.contents=I.subarray(g,g+B),E.usedBytes=B,B;if(0===E.usedBytes&&0===C)return E.contents=I.slice(g,g+B),E.usedBytes=B,B;if(C+B<=E.usedBytes)return E.contents.set(I.subarray(g,g+B),C),B}if(EI.expandFileStorage(E,C+B),E.contents.subarray&&I.subarray)E.contents.set(I.subarray(g,g+B),C);else for(var i=0;i<B;i++)E.contents[C+i]=I[g+i];return E.usedBytes=Math.max(E.usedBytes,C+B),B},llseek:function(A,I,g){var B=I;if(1===g?B+=A.position:2===g&&iI.isFile(A.node.mode)&&(B+=A.node.usedBytes),B<0)throw new iI.ErrnoError(28);return B},allocate:function(A,I,g){EI.expandFileStorage(A.node,I+g),A.node.usedBytes=Math.max(A.node.usedBytes,I+g)},mmap:function(A,I,g,B,C,Q,E){if(!iI.isFile(A.node.mode))throw new iI.ErrnoError(43);var i,o,D=A.node.contents;if(2&E||D.buffer!==I.buffer){(C>0||C+B<A.node.usedBytes)&&(D=D.subarray?D.subarray(C,C+B):Array.prototype.slice.call(D,C,C+B)),o=!0;var a=I.buffer==v.buffer;if(!(i=RB(B)))throw new iI.ErrnoError(48);(a?v:I).set(D,i)}else o=!1,i=D.byteOffset;return{ptr:i,allocated:o}},msync:function(A,I,g,B,C){if(!iI.isFile(A.node.mode))throw new iI.ErrnoError(43);return 2&C||EI.stream_ops.write(A,I,0,B,g,!1),0}}},iI={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(A){if(!(A instanceof iI.ErrnoError))throw A+" : "+TA();return II(A.errno)},lookupPath:function(A,I){if(I=I||{},!(A=CI.resolve(iI.cwd(),A)))return{path:"",node:null};var g={follow_mount:!0,recurse_count:0};for(var B in g)void 0===I[B]&&(I[B]=g[B]);if(I.recurse_count>8)throw new iI.ErrnoError(32);for(var C=BI.normalizeArray(A.split("/").filter((function(A){return!!A})),!1),Q=iI.root,E="/",i=0;i<C.length;i++){var o=i===C.length-1;if(o&&I.parent)break;if(Q=iI.lookupNode(Q,C[i]),E=BI.join2(E,C[i]),iI.isMountpoint(Q)&&(!o||o&&I.follow_mount)&&(Q=Q.mounted.root),!o||I.follow)for(var D=0;iI.isLink(Q.mode);){var a=iI.readlink(E);if(E=CI.resolve(BI.dirname(E),a),Q=iI.lookupPath(E,{recurse_count:I.recurse_count}).node,D++>40)throw new iI.ErrnoError(32)}}return{path:E,node:Q}},getPath:function(A){for(var I;;){if(iI.isRoot(A)){var g=A.mount.mountpoint;return I?"/"!==g[g.length-1]?g+"/"+I:g+I:g}I=I?A.name+"/"+I:A.name,A=A.parent}},hashName:function(A,I){for(var g=0,B=0;B<I.length;B++)g=(g<<5)-g+I.charCodeAt(B)|0;return(A+g>>>0)%iI.nameTable.length},hashAddNode:function(A){var I=iI.hashName(A.parent.id,A.name);A.name_next=iI.nameTable[I],iI.nameTable[I]=A},hashRemoveNode:function(A){var I=iI.hashName(A.parent.id,A.name);if(iI.nameTable[I]===A)iI.nameTable[I]=A.name_next;else for(var g=iI.nameTable[I];g;){if(g.name_next===A){g.name_next=A.name_next;break}g=g.name_next}},lookupNode:function(A,I){var g=iI.mayLookup(A);if(g)throw new iI.ErrnoError(g,A);for(var B=iI.hashName(A.id,I),C=iI.nameTable[B];C;C=C.name_next){var Q=C.name;if(C.parent.id===A.id&&Q===I)return C}return iI.lookup(A,I)},createNode:function(A,I,g,B){if(!iI.FSNode){iI.FSNode=function(A,I,g,B){A||(A=this),this.parent=A,this.mount=A.mount,this.mounted=null,this.id=iI.nextInode++,this.name=I,this.mode=g,this.node_ops={},this.stream_ops={},this.rdev=B},iI.FSNode.prototype={};Object.defineProperties(iI.FSNode.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(A){A?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(A){A?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return iI.isDir(this.mode)}},isDevice:{get:function(){return iI.isChrdev(this.mode)}}})}var C=new iI.FSNode(A,I,g,B);return iI.hashAddNode(C),C},destroyNode:function(A){iI.hashRemoveNode(A)},isRoot:function(A){return A===A.parent},isMountpoint:function(A){return!!A.mounted},isFile:function(A){return 32768==(61440&A)},isDir:function(A){return 16384==(61440&A)},isLink:function(A){return 40960==(61440&A)},isChrdev:function(A){return 8192==(61440&A)},isBlkdev:function(A){return 24576==(61440&A)},isFIFO:function(A){return 4096==(61440&A)},isSocket:function(A){return 49152==(49152&A)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(A){var I=iI.flagModes[A];if(void 0===I)throw new Error("Unknown file open mode: "+A);return I},flagsToPermissionString:function(A){var I=["r","w","rw"][3&A];return 512&A&&(I+="w"),I},nodePermissions:function(A,I){return iI.ignorePermissions||(-1===I.indexOf("r")||292&A.mode)&&(-1===I.indexOf("w")||146&A.mode)&&(-1===I.indexOf("x")||73&A.mode)?0:2},mayLookup:function(A){return iI.nodePermissions(A,"x")||(A.node_ops.lookup?0:2)},mayCreate:function(A,I){try{return iI.lookupNode(A,I),20}catch(A){}return iI.nodePermissions(A,"wx")},mayDelete:function(A,I,g){var B;try{B=iI.lookupNode(A,I)}catch(A){return A.errno}var C=iI.nodePermissions(A,"wx");if(C)return C;if(g){if(!iI.isDir(B.mode))return 54;if(iI.isRoot(B)||iI.getPath(B)===iI.cwd())return 10}else if(iI.isDir(B.mode))return 31;return 0},mayOpen:function(A,I){return A?iI.isLink(A.mode)?32:iI.isDir(A.mode)&&("r"!==iI.flagsToPermissionString(I)||512&I)?31:iI.nodePermissions(A,iI.flagsToPermissionString(I)):44},MAX_OPEN_FDS:4096,nextfd:function(A,I){A=A||0,I=I||iI.MAX_OPEN_FDS;for(var g=A;g<=I;g++)if(!iI.streams[g])return g;throw new iI.ErrnoError(33)},getStream:function(A){return iI.streams[A]},createStream:function(A,I,g){iI.FSStream||(iI.FSStream=function(){},iI.FSStream.prototype={},Object.defineProperties(iI.FSStream.prototype,{object:{get:function(){return this.node},set:function(A){this.node=A}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}}));var B=new iI.FSStream;for(var C in A)B[C]=A[C];A=B;var Q=iI.nextfd(I,g);return A.fd=Q,iI.streams[Q]=A,A},closeStream:function(A){iI.streams[A]=null},chrdev_stream_ops:{open:function(A){var I=iI.getDevice(A.node.rdev);A.stream_ops=I.stream_ops,A.stream_ops.open&&A.stream_ops.open(A)},llseek:function(){throw new iI.ErrnoError(70)}},major:function(A){return A>>8},minor:function(A){return 255&A},makedev:function(A,I){return A<<8|I},registerDevice:function(A,I){iI.devices[A]={stream_ops:I}},getDevice:function(A){return iI.devices[A]},getMounts:function(A){for(var I=[],g=[A];g.length;){var B=g.pop();I.push(B),g.push.apply(g,B.mounts)}return I},syncfs:function(A,I){"function"==typeof A&&(I=A,A=!1),iI.syncFSRequests++,iI.syncFSRequests>1&&S("warning: "+iI.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var g=iI.getMounts(iI.root.mount),B=0;function C(A){return iI.syncFSRequests--,I(A)}function Q(A){if(A)return Q.errored?void 0:(Q.errored=!0,C(A));++B>=g.length&&C(null)}g.forEach((function(I){if(!I.type.syncfs)return Q(null);I.type.syncfs(I,A,Q)}))},mount:function(A,I,g){var B,C="/"===g,Q=!g;if(C&&iI.root)throw new iI.ErrnoError(10);if(!C&&!Q){var E=iI.lookupPath(g,{follow_mount:!1});if(g=E.path,B=E.node,iI.isMountpoint(B))throw new iI.ErrnoError(10);if(!iI.isDir(B.mode))throw new iI.ErrnoError(54)}var i={type:A,opts:I,mountpoint:g,mounts:[]},o=A.mount(i);return o.mount=i,i.root=o,C?iI.root=o:B&&(B.mounted=i,B.mount&&B.mount.mounts.push(i)),o},unmount:function(A){var I=iI.lookupPath(A,{follow_mount:!1});if(!iI.isMountpoint(I.node))throw new iI.ErrnoError(28);var g=I.node,B=g.mounted,C=iI.getMounts(B);Object.keys(iI.nameTable).forEach((function(A){for(var I=iI.nameTable[A];I;){var g=I.name_next;-1!==C.indexOf(I.mount)&&iI.destroyNode(I),I=g}})),g.mounted=null;var Q=g.mount.mounts.indexOf(B);g.mount.mounts.splice(Q,1)},lookup:function(A,I){return A.node_ops.lookup(A,I)},mknod:function(A,I,g){var B=iI.lookupPath(A,{parent:!0}).node,C=BI.basename(A);if(!C||"."===C||".."===C)throw new iI.ErrnoError(28);var Q=iI.mayCreate(B,C);if(Q)throw new iI.ErrnoError(Q);if(!B.node_ops.mknod)throw new iI.ErrnoError(63);return B.node_ops.mknod(B,C,I,g)},create:function(A,I){return I=void 0!==I?I:438,I&=4095,I|=32768,iI.mknod(A,I,0)},mkdir:function(A,I){return I=void 0!==I?I:511,I&=1023,I|=16384,iI.mknod(A,I,0)},mkdirTree:function(A,I){for(var g=A.split("/"),B="",C=0;C<g.length;++C)if(g[C]){B+="/"+g[C];try{iI.mkdir(B,I)}catch(A){if(20!=A.errno)throw A}}},mkdev:function(A,I,g){return void 0===g&&(g=I,I=438),I|=8192,iI.mknod(A,I,g)},symlink:function(A,I){if(!CI.resolve(A))throw new iI.ErrnoError(44);var g=iI.lookupPath(I,{parent:!0}).node;if(!g)throw new iI.ErrnoError(44);var B=BI.basename(I),C=iI.mayCreate(g,B);if(C)throw new iI.ErrnoError(C);if(!g.node_ops.symlink)throw new iI.ErrnoError(63);return g.node_ops.symlink(g,B,A)},rename:function(A,I){var g,B,C=BI.dirname(A),Q=BI.dirname(I),E=BI.basename(A),i=BI.basename(I);try{g=iI.lookupPath(A,{parent:!0}).node,B=iI.lookupPath(I,{parent:!0}).node}catch(A){throw new iI.ErrnoError(10)}if(!g||!B)throw new iI.ErrnoError(44);if(g.mount!==B.mount)throw new iI.ErrnoError(75);var o,D=iI.lookupNode(g,E),a=CI.relative(A,Q);if("."!==a.charAt(0))throw new iI.ErrnoError(28);if("."!==(a=CI.relative(I,C)).charAt(0))throw new iI.ErrnoError(55);try{o=iI.lookupNode(B,i)}catch(A){}if(D!==o){var w=iI.isDir(D.mode),F=iI.mayDelete(g,E,w);if(F)throw new iI.ErrnoError(F);if(F=o?iI.mayDelete(B,i,w):iI.mayCreate(B,i))throw new iI.ErrnoError(F);if(!g.node_ops.rename)throw new iI.ErrnoError(63);if(iI.isMountpoint(D)||o&&iI.isMountpoint(o))throw new iI.ErrnoError(10);if(B!==g&&(F=iI.nodePermissions(g,"w")))throw new iI.ErrnoError(F);try{iI.trackingDelegate.willMovePath&&iI.trackingDelegate.willMovePath(A,I)}catch(g){S("FS.trackingDelegate['willMovePath']('"+A+"', '"+I+"') threw an exception: "+g.message)}iI.hashRemoveNode(D);try{g.node_ops.rename(D,B,i)}catch(A){throw A}finally{iI.hashAddNode(D)}try{iI.trackingDelegate.onMovePath&&iI.trackingDelegate.onMovePath(A,I)}catch(g){S("FS.trackingDelegate['onMovePath']('"+A+"', '"+I+"') threw an exception: "+g.message)}}},rmdir:function(A){var I=iI.lookupPath(A,{parent:!0}).node,g=BI.basename(A),B=iI.lookupNode(I,g),C=iI.mayDelete(I,g,!0);if(C)throw new iI.ErrnoError(C);if(!I.node_ops.rmdir)throw new iI.ErrnoError(63);if(iI.isMountpoint(B))throw new iI.ErrnoError(10);try{iI.trackingDelegate.willDeletePath&&iI.trackingDelegate.willDeletePath(A)}catch(I){S("FS.trackingDelegate['willDeletePath']('"+A+"') threw an exception: "+I.message)}I.node_ops.rmdir(I,g),iI.destroyNode(B);try{iI.trackingDelegate.onDeletePath&&iI.trackingDelegate.onDeletePath(A)}catch(I){S("FS.trackingDelegate['onDeletePath']('"+A+"') threw an exception: "+I.message)}},readdir:function(A){var I=iI.lookupPath(A,{follow:!0}).node;if(!I.node_ops.readdir)throw new iI.ErrnoError(54);return I.node_ops.readdir(I)},unlink:function(A){var I=iI.lookupPath(A,{parent:!0}).node,g=BI.basename(A),B=iI.lookupNode(I,g),C=iI.mayDelete(I,g,!1);if(C)throw new iI.ErrnoError(C);if(!I.node_ops.unlink)throw new iI.ErrnoError(63);if(iI.isMountpoint(B))throw new iI.ErrnoError(10);try{iI.trackingDelegate.willDeletePath&&iI.trackingDelegate.willDeletePath(A)}catch(I){S("FS.trackingDelegate['willDeletePath']('"+A+"') threw an exception: "+I.message)}I.node_ops.unlink(I,g),iI.destroyNode(B);try{iI.trackingDelegate.onDeletePath&&iI.trackingDelegate.onDeletePath(A)}catch(I){S("FS.trackingDelegate['onDeletePath']('"+A+"') threw an exception: "+I.message)}},readlink:function(A){var I=iI.lookupPath(A).node;if(!I)throw new iI.ErrnoError(44);if(!I.node_ops.readlink)throw new iI.ErrnoError(28);return CI.resolve(iI.getPath(I.parent),I.node_ops.readlink(I))},stat:function(A,I){var g=iI.lookupPath(A,{follow:!I}).node;if(!g)throw new iI.ErrnoError(44);if(!g.node_ops.getattr)throw new iI.ErrnoError(63);return g.node_ops.getattr(g)},lstat:function(A){return iI.stat(A,!0)},chmod:function(A,I,g){var B;if(!(B="string"==typeof A?iI.lookupPath(A,{follow:!g}).node:A).node_ops.setattr)throw new iI.ErrnoError(63);B.node_ops.setattr(B,{mode:4095&I|-4096&B.mode,timestamp:Date.now()})},lchmod:function(A,I){iI.chmod(A,I,!0)},fchmod:function(A,I){var g=iI.getStream(A);if(!g)throw new iI.ErrnoError(8);iI.chmod(g.node,I)},chown:function(A,I,g,B){var C;if(!(C="string"==typeof A?iI.lookupPath(A,{follow:!B}).node:A).node_ops.setattr)throw new iI.ErrnoError(63);C.node_ops.setattr(C,{timestamp:Date.now()})},lchown:function(A,I,g){iI.chown(A,I,g,!0)},fchown:function(A,I,g){var B=iI.getStream(A);if(!B)throw new iI.ErrnoError(8);iI.chown(B.node,I,g)},truncate:function(A,I){if(I<0)throw new iI.ErrnoError(28);var g;if(!(g="string"==typeof A?iI.lookupPath(A,{follow:!0}).node:A).node_ops.setattr)throw new iI.ErrnoError(63);if(iI.isDir(g.mode))throw new iI.ErrnoError(31);if(!iI.isFile(g.mode))throw new iI.ErrnoError(28);var B=iI.nodePermissions(g,"w");if(B)throw new iI.ErrnoError(B);g.node_ops.setattr(g,{size:I,timestamp:Date.now()})},ftruncate:function(A,I){var g=iI.getStream(A);if(!g)throw new iI.ErrnoError(8);if(0==(2097155&g.flags))throw new iI.ErrnoError(28);iI.truncate(g.node,I)},utime:function(A,I,g){var B=iI.lookupPath(A,{follow:!0}).node;B.node_ops.setattr(B,{timestamp:Math.max(I,g)})},open:function(I,g,B,C,Q){if(""===I)throw new iI.ErrnoError(44);var E;if(B=void 0===B?438:B,B=64&(g="string"==typeof g?iI.modeStringToFlags(g):g)?4095&B|32768:0,"object"===D(I))E=I;else{I=BI.normalize(I);try{E=iI.lookupPath(I,{follow:!(131072&g)}).node}catch(A){}}var i=!1;if(64&g)if(E){if(128&g)throw new iI.ErrnoError(20)}else E=iI.mknod(I,B,0),i=!0;if(!E)throw new iI.ErrnoError(44);if(iI.isChrdev(E.mode)&&(g&=-513),65536&g&&!iI.isDir(E.mode))throw new iI.ErrnoError(54);if(!i){var o=iI.mayOpen(E,g);if(o)throw new iI.ErrnoError(o)}512&g&&iI.truncate(E,0),g&=-641;var a=iI.createStream({node:E,path:iI.getPath(E),flags:g,seekable:!0,position:0,stream_ops:E.stream_ops,ungotten:[],error:!1},C,Q);a.stream_ops.open&&a.stream_ops.open(a),!A.logReadFiles||1&g||(iI.readFiles||(iI.readFiles={}),I in iI.readFiles||(iI.readFiles[I]=1,S("FS.trackingDelegate error on read file: "+I)));try{if(iI.trackingDelegate.onOpenFile){var w=0;1!=(2097155&g)&&(w|=iI.tracking.openFlags.READ),0!=(2097155&g)&&(w|=iI.tracking.openFlags.WRITE),iI.trackingDelegate.onOpenFile(I,w)}}catch(A){S("FS.trackingDelegate['onOpenFile']('"+I+"', flags) threw an exception: "+A.message)}return a},close:function(A){if(iI.isClosed(A))throw new iI.ErrnoError(8);A.getdents&&(A.getdents=null);try{A.stream_ops.close&&A.stream_ops.close(A)}catch(A){throw A}finally{iI.closeStream(A.fd)}A.fd=null},isClosed:function(A){return null===A.fd},llseek:function(A,I,g){if(iI.isClosed(A))throw new iI.ErrnoError(8);if(!A.seekable||!A.stream_ops.llseek)throw new iI.ErrnoError(70);if(0!=g&&1!=g&&2!=g)throw new iI.ErrnoError(28);return A.position=A.stream_ops.llseek(A,I,g),A.ungotten=[],A.position},read:function(A,I,g,B,C){if(B<0||C<0)throw new iI.ErrnoError(28);if(iI.isClosed(A))throw new iI.ErrnoError(8);if(1==(2097155&A.flags))throw new iI.ErrnoError(8);if(iI.isDir(A.node.mode))throw new iI.ErrnoError(31);if(!A.stream_ops.read)throw new iI.ErrnoError(28);var Q=void 0!==C;if(Q){if(!A.seekable)throw new iI.ErrnoError(70)}else C=A.position;var E=A.stream_ops.read(A,I,g,B,C);return Q||(A.position+=E),E},write:function(A,I,g,B,C,Q){if(B<0||C<0)throw new iI.ErrnoError(28);if(iI.isClosed(A))throw new iI.ErrnoError(8);if(0==(2097155&A.flags))throw new iI.ErrnoError(8);if(iI.isDir(A.node.mode))throw new iI.ErrnoError(31);if(!A.stream_ops.write)throw new iI.ErrnoError(28);1024&A.flags&&iI.llseek(A,0,2);var E=void 0!==C;if(E){if(!A.seekable)throw new iI.ErrnoError(70)}else C=A.position;var i=A.stream_ops.write(A,I,g,B,C,Q);E||(A.position+=i);try{A.path&&iI.trackingDelegate.onWriteToFile&&iI.trackingDelegate.onWriteToFile(A.path)}catch(I){S("FS.trackingDelegate['onWriteToFile']('"+A.path+"') threw an exception: "+I.message)}return i},allocate:function(A,I,g){if(iI.isClosed(A))throw new iI.ErrnoError(8);if(I<0||g<=0)throw new iI.ErrnoError(28);if(0==(2097155&A.flags))throw new iI.ErrnoError(8);if(!iI.isFile(A.node.mode)&&!iI.isDir(A.node.mode))throw new iI.ErrnoError(43);if(!A.stream_ops.allocate)throw new iI.ErrnoError(138);A.stream_ops.allocate(A,I,g)},mmap:function(A,I,g,B,C,Q,E){if(0!=(2&Q)&&0==(2&E)&&2!=(2097155&A.flags))throw new iI.ErrnoError(2);if(1==(2097155&A.flags))throw new iI.ErrnoError(2);if(!A.stream_ops.mmap)throw new iI.ErrnoError(43);return A.stream_ops.mmap(A,I,g,B,C,Q,E)},msync:function(A,I,g,B,C){return A&&A.stream_ops.msync?A.stream_ops.msync(A,I,g,B,C):0},munmap:function(A){return 0},ioctl:function(A,I,g){if(!A.stream_ops.ioctl)throw new iI.ErrnoError(59);return A.stream_ops.ioctl(A,I,g)},readFile:function(A,I){if((I=I||{}).flags=I.flags||"r",I.encoding=I.encoding||"binary","utf8"!==I.encoding&&"binary"!==I.encoding)throw new Error('Invalid encoding type "'+I.encoding+'"');var g,B=iI.open(A,I.flags),C=iI.stat(A).size,Q=new Uint8Array(C);return iI.read(B,Q,0,C,0),"utf8"===I.encoding?g=d(Q,0):"binary"===I.encoding&&(g=Q),iI.close(B),g},writeFile:function(A,I,g){(g=g||{}).flags=g.flags||"w";var B=iI.open(A,g.flags,g.mode);if("string"==typeof I){var C=new Uint8Array(W(I)+1),Q=l(I,C,0,C.length);iI.write(B,C,0,Q,void 0,g.canOwn)}else{if(!ArrayBuffer.isView(I))throw new Error("Unsupported data type");iI.write(B,I,0,I.byteLength,void 0,g.canOwn)}iI.close(B)},cwd:function(){return iI.currentPath},chdir:function(A){var I=iI.lookupPath(A,{follow:!0});if(null===I.node)throw new iI.ErrnoError(44);if(!iI.isDir(I.node.mode))throw new iI.ErrnoError(54);var g=iI.nodePermissions(I.node,"x");if(g)throw new iI.ErrnoError(g);iI.currentPath=I.path},createDefaultDirectories:function(){iI.mkdir("/tmp"),iI.mkdir("/home"),iI.mkdir("/home/web_user")},createDefaultDevices:function(){var A;if(iI.mkdir("/dev"),iI.registerDevice(iI.makedev(1,3),{read:function(){return 0},write:function(A,I,g,B,C){return B}}),iI.mkdev("/dev/null",iI.makedev(1,3)),QI.register(iI.makedev(5,0),QI.default_tty_ops),QI.register(iI.makedev(6,0),QI.default_tty1_ops),iI.mkdev("/dev/tty",iI.makedev(5,0)),iI.mkdev("/dev/tty1",iI.makedev(6,0)),"object"===("undefined"==typeof crypto?"undefined":D(crypto))&&"function"==typeof crypto.getRandomValues){var I=new Uint8Array(1);A=function(){return crypto.getRandomValues(I),I[0]}}else if(w)try{var B=g(654);A=function(){return B.randomBytes(1)[0]}}catch(A){}A||(A=function(){JA("random_device")}),iI.createDevice("/dev","random",A),iI.createDevice("/dev","urandom",A),iI.mkdir("/dev/shm"),iI.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){iI.mkdir("/proc"),iI.mkdir("/proc/self"),iI.mkdir("/proc/self/fd"),iI.mount({mount:function(){var A=iI.createNode("/proc/self","fd",16895,73);return A.node_ops={lookup:function(A,I){var g=+I,B=iI.getStream(g);if(!B)throw new iI.ErrnoError(8);var C={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return B.path}}};return C.parent=C,C}},A}},{},"/proc/self/fd")},createStandardStreams:function(){A.stdin?iI.createDevice("/dev","stdin",A.stdin):iI.symlink("/dev/tty","/dev/stdin"),A.stdout?iI.createDevice("/dev","stdout",null,A.stdout):iI.symlink("/dev/tty","/dev/stdout"),A.stderr?iI.createDevice("/dev","stderr",null,A.stderr):iI.symlink("/dev/tty1","/dev/stderr"),iI.open("/dev/stdin","r"),iI.open("/dev/stdout","w"),iI.open("/dev/stderr","w")},ensureErrnoError:function(){iI.ErrnoError||(iI.ErrnoError=function(A,I){this.node=I,this.setErrno=function(A){this.errno=A},this.setErrno(A),this.message="FS error"},iI.ErrnoError.prototype=new Error,iI.ErrnoError.prototype.constructor=iI.ErrnoError,[44].forEach((function(A){iI.genericErrors[A]=new iI.ErrnoError(A),iI.genericErrors[A].stack="<generic error, no stack>"})))},staticInit:function(){iI.ensureErrnoError(),iI.nameTable=new Array(4096),iI.mount(EI,{},"/"),iI.createDefaultDirectories(),iI.createDefaultDevices(),iI.createSpecialDirectories(),iI.filesystems={MEMFS:EI}},init:function(I,g,B){iI.init.initialized=!0,iI.ensureErrnoError(),A.stdin=I||A.stdin,A.stdout=g||A.stdout,A.stderr=B||A.stderr,iI.createStandardStreams()},quit:function(){iI.init.initialized=!1;var I=A._fflush;I&&I(0);for(var g=0;g<iI.streams.length;g++){var B=iI.streams[g];B&&iI.close(B)}},getMode:function(A,I){var g=0;return A&&(g|=365),I&&(g|=146),g},joinPath:function(A,I){var g=BI.join.apply(null,A);return I&&"/"==g[0]&&(g=g.substr(1)),g},absolutePath:function(A,I){return CI.resolve(I,A)},standardizePath:function(A){return BI.normalize(A)},findObject:function(A,I){var g=iI.analyzePath(A,I);return g.exists?g.object:(II(g.error),null)},analyzePath:function(A,I){try{A=(B=iI.lookupPath(A,{follow:!I})).path}catch(A){}var g={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var B=iI.lookupPath(A,{parent:!0});g.parentExists=!0,g.parentPath=B.path,g.parentObject=B.node,g.name=BI.basename(A),B=iI.lookupPath(A,{follow:!I}),g.exists=!0,g.path=B.path,g.object=B.node,g.name=B.node.name,g.isRoot="/"===B.path}catch(A){g.error=A.errno}return g},createFolder:function(A,I,g,B){var C=BI.join2("string"==typeof A?A:iI.getPath(A),I),Q=iI.getMode(g,B);return iI.mkdir(C,Q)},createPath:function(A,I,g,B){A="string"==typeof A?A:iI.getPath(A);for(var C=I.split("/").reverse();C.length;){var Q=C.pop();if(Q){var E=BI.join2(A,Q);try{iI.mkdir(E)}catch(A){}A=E}}return E},createFile:function(A,I,g,B,C){var Q=BI.join2("string"==typeof A?A:iI.getPath(A),I),E=iI.getMode(B,C);return iI.create(Q,E)},createDataFile:function(A,I,g,B,C,Q){var E=I?BI.join2("string"==typeof A?A:iI.getPath(A),I):A,i=iI.getMode(B,C),o=iI.create(E,i);if(g){if("string"==typeof g){for(var D=new Array(g.length),a=0,w=g.length;a<w;++a)D[a]=g.charCodeAt(a);g=D}iI.chmod(o,146|i);var F=iI.open(o,"w");iI.write(F,g,0,g.length,0,Q),iI.close(F),iI.chmod(o,i)}return o},createDevice:function(A,I,g,B){var C=BI.join2("string"==typeof A?A:iI.getPath(A),I),Q=iI.getMode(!!g,!!B);iI.createDevice.major||(iI.createDevice.major=64);var E=iI.makedev(iI.createDevice.major++,0);return iI.registerDevice(E,{open:function(A){A.seekable=!1},close:function(A){B&&B.buffer&&B.buffer.length&&B(10)},read:function(A,I,B,C,Q){for(var E=0,i=0;i<C;i++){var o;try{o=g()}catch(A){throw new iI.ErrnoError(29)}if(void 0===o&&0===E)throw new iI.ErrnoError(6);if(null==o)break;E++,I[B+i]=o}return E&&(A.node.timestamp=Date.now()),E},write:function(A,I,g,C,Q){for(var E=0;E<C;E++)try{B(I[g+E])}catch(A){throw new iI.ErrnoError(29)}return C&&(A.node.timestamp=Date.now()),E}}),iI.mkdev(C,Q,E)},createLink:function(A,I,g,B,C){var Q=BI.join2("string"==typeof A?A:iI.getPath(A),I);return iI.symlink(g,Q)},forceLoadFile:function(A){if(A.isDevice||A.isFolder||A.link||A.contents)return!0;var I=!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!G)throw new Error("Cannot load without read() or XMLHttpRequest.");try{A.contents=Xg(G(A.url),!0),A.usedBytes=A.contents.length}catch(A){I=!1}return I||II(29),I},createLazyFile:function(A,I,g,B,C){function Q(){this.lengthKnown=!1,this.chunks=[]}if(Q.prototype.get=function(A){if(!(A>this.length-1||A<0)){var I=A%this.chunkSize,g=A/this.chunkSize|0;return this.getter(g)[I]}},Q.prototype.setDataGetter=function(A){this.getter=A},Q.prototype.cacheLength=function(){var A=new XMLHttpRequest;if(A.open("HEAD",g,!1),A.send(null),!(A.status>=200&&A.status<300||304===A.status))throw new Error("Couldn't load "+g+". Status: "+A.status);var I,B=Number(A.getResponseHeader("Content-length")),C=(I=A.getResponseHeader("Accept-Ranges"))&&"bytes"===I,Q=(I=A.getResponseHeader("Content-Encoding"))&&"gzip"===I,E=1048576;C||(E=B);var i=this;i.setDataGetter((function(A){var I=A*E,C=(A+1)*E-1;if(C=Math.min(C,B-1),void 0===i.chunks[A]&&(i.chunks[A]=function(A,I){if(A>I)throw new Error("invalid range ("+A+", "+I+") or no bytes requested!");if(I>B-1)throw new Error("only "+B+" bytes available! programmer error!");var C=new XMLHttpRequest;if(C.open("GET",g,!1),B!==E&&C.setRequestHeader("Range","bytes="+A+"-"+I),"undefined"!=typeof Uint8Array&&(C.responseType="arraybuffer"),C.overrideMimeType&&C.overrideMimeType("text/plain; charset=x-user-defined"),C.send(null),!(C.status>=200&&C.status<300||304===C.status))throw new Error("Couldn't load "+g+". Status: "+C.status);return void 0!==C.response?new Uint8Array(C.response||[]):Xg(C.responseText||"",!0)}(I,C)),void 0===i.chunks[A])throw new Error("doXHR failed!");return i.chunks[A]})),!Q&&B||(E=B=1,B=this.getter(0).length,E=B,t("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=B,this._chunkSize=E,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!o)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var E=new Q;Object.defineProperties(E,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var i={isDevice:!1,contents:E}}else i={isDevice:!1,url:g};var D=iI.createFile(A,I,i,B,C);i.contents?D.contents=i.contents:i.url&&(D.contents=null,D.url=i.url),Object.defineProperties(D,{usedBytes:{get:function(){return this.contents.length}}});var a={};return Object.keys(D.stream_ops).forEach((function(A){var I=D.stream_ops[A];a[A]=function(){if(!iI.forceLoadFile(D))throw new iI.ErrnoError(29);return I.apply(null,arguments)}})),a.read=function(A,I,g,B,C){if(!iI.forceLoadFile(D))throw new iI.ErrnoError(29);var Q=A.node.contents;if(C>=Q.length)return 0;var E=Math.min(Q.length-C,B);if(Q.slice)for(var i=0;i<E;i++)I[g+i]=Q[C+i];else for(i=0;i<E;i++)I[g+i]=Q.get(C+i);return E},D.stream_ops=a,D},createPreloadedFile:function(I,g,B,C,Q,E,i,o,D,a){Browser.init();var w=g?CI.resolve(BI.join2(I,g)):I;function F(B){function F(A){a&&a(),o||iI.createDataFile(I,g,A,C,Q,D),E&&E(),eA()}var G=!1;A.preloadPlugins.forEach((function(A){G||A.canHandle(w)&&(A.handle(B,w,F,(function(){i&&i(),eA()})),G=!0)})),G||F(B)}YA(),"string"==typeof B?Browser.asyncLoad(B,(function(A){F(A)}),i):F(B)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=iI.indexedDB();try{var C=B.open(iI.DB_NAME(),iI.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=function(){t("creating db"),C.result.createObjectStore(iI.DB_STORE_NAME)},C.onsuccess=function(){var B=C.result.transaction([iI.DB_STORE_NAME],"readwrite"),Q=B.objectStore(iI.DB_STORE_NAME),E=0,i=0,o=A.length;function D(){0==i?I():g()}A.forEach((function(A){var I=Q.put(iI.analyzePath(A).object.contents,A);I.onsuccess=function(){++E+i==o&&D()},I.onerror=function(){i++,E+i==o&&D()}})),B.onerror=g},C.onerror=g},loadFilesFromDB:function(A,I,g){I=I||function(){},g=g||function(){};var B=iI.indexedDB();try{var C=B.open(iI.DB_NAME(),iI.DB_VERSION)}catch(A){return g(A)}C.onupgradeneeded=g,C.onsuccess=function(){var B=C.result;try{var Q=B.transaction([iI.DB_STORE_NAME],"readonly")}catch(A){return void g(A)}var E=Q.objectStore(iI.DB_STORE_NAME),i=0,o=0,D=A.length;function a(){0==o?I():g()}A.forEach((function(A){var I=E.get(A);I.onsuccess=function(){iI.analyzePath(A).exists&&iI.unlink(A),iI.createDataFile(BI.dirname(A),BI.basename(A),I.result,!0,!0,!0),++i+o==D&&a()},I.onerror=function(){o++,i+o==D&&a()}})),Q.onerror=g},C.onerror=g}},oI={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(A,I){if("/"!==I[0]){var g;if(-100===A)g=iI.cwd();else{var B=iI.getStream(A);if(!B)throw new iI.ErrnoError(8);g=B.path}I=BI.join2(g,I)}return I},doStat:function(A,I,g){try{var B=A(I)}catch(A){if(A&&A.node&&BI.normalize(I)!==BI.normalize(iI.getPath(A.node)))return-54;throw A}return AA[g>>2]=B.dev,AA[g+4>>2]=0,AA[g+8>>2]=B.ino,AA[g+12>>2]=B.mode,AA[g+16>>2]=B.nlink,AA[g+20>>2]=B.uid,AA[g+24>>2]=B.gid,AA[g+28>>2]=B.rdev,AA[g+32>>2]=0,dA=[B.size>>>0,(qA=B.size,+MA(qA)>=1?qA>0?(0|rA(+cA(qA/4294967296),4294967295))>>>0:~~+nA((qA-+(~~qA>>>0))/4294967296)>>>0:0)],AA[g+40>>2]=dA[0],AA[g+44>>2]=dA[1],AA[g+48>>2]=4096,AA[g+52>>2]=B.blocks,AA[g+56>>2]=B.atime.getTime()/1e3|0,AA[g+60>>2]=0,AA[g+64>>2]=B.mtime.getTime()/1e3|0,AA[g+68>>2]=0,AA[g+72>>2]=B.ctime.getTime()/1e3|0,AA[g+76>>2]=0,dA=[B.ino>>>0,(qA=B.ino,+MA(qA)>=1?qA>0?(0|rA(+cA(qA/4294967296),4294967295))>>>0:~~+nA((qA-+(~~qA>>>0))/4294967296)>>>0:0)],AA[g+80>>2]=dA[0],AA[g+84>>2]=dA[1],0},doMsync:function(A,I,g,B,C){var Q=z.slice(A,A+g);iI.msync(I,Q,C,g,B)},doMkdir:function(A,I){return"/"===(A=BI.normalize(A))[A.length-1]&&(A=A.substr(0,A.length-1)),iI.mkdir(A,I,0),0},doMknod:function(A,I,g){switch(61440&I){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-28}return iI.mknod(A,I,g),0},doReadlink:function(A,I,g){if(g<=0)return-28;var B=iI.readlink(A),C=Math.min(g,W(B)),Q=v[I+C];return u(B,I,g+1),v[I+C]=Q,C},doAccess:function(A,I){if(-8&I)return-28;var g;if(!(g=iI.lookupPath(A,{follow:!0}).node))return-44;var B="";return 4&I&&(B+="r"),2&I&&(B+="w"),1&I&&(B+="x"),B&&iI.nodePermissions(g,B)?-2:0},doDup:function(A,I,g){var B=iI.getStream(g);return B&&iI.close(B),iI.open(A,I,0,g,g).fd},doReadv:function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=AA[I+8*Q>>2],i=AA[I+(8*Q+4)>>2],o=iI.read(A,v,E,i,B);if(o<0)return-1;if(C+=o,o<i)break}return C},doWritev:function(A,I,g,B){for(var C=0,Q=0;Q<g;Q++){var E=AA[I+8*Q>>2],i=AA[I+(8*Q+4)>>2],o=iI.write(A,v,E,i,B);if(o<0)return-1;C+=o}return C},varargs:0,get:function(A){return oI.varargs+=4,AA[oI.varargs-4>>2]},getStr:function(){return f(oI.get())},getStreamFromFD:function(A){void 0===A&&(A=oI.get());var I=iI.getStream(A);if(!I)throw new iI.ErrnoError(8);return I},get64:function(){var A=oI.get();return oI.get(),A},getZero:function(){oI.get()}};function DI(A,I){oI.varargs=I;try{var g=oI.getStreamFromFD();switch(oI.get()){case 0:return(B=oI.get())<0?-28:iI.open(g.path,g.flags,0,B).fd;case 1:case 2:case 13:case 14:return 0;case 3:return g.flags;case 4:var B=oI.get();return g.flags|=B,0;case 12:return B=oI.get(),_[B+0>>1]=2,0;default:return-28;case 9:return II(28),-1}}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),-A.errno}}function aI(A,I){oI.varargs=I;try{var g=oI.getStr(),B=oI.get(),C=oI.get();return iI.open(g,B,C).fd}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),-A.errno}}function wI(A,I){oI.varargs=I;try{var g=oI.getStreamFromFD(),B=oI.get();switch(B){case 21509:case 21505:case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:case 21523:case 21524:return g.tty?0:-59;case 21519:if(!g.tty)return-59;var C=oI.get();return AA[C>>2]=0,0;case 21520:return g.tty?-28:-59;case 21531:return C=oI.get(),iI.ioctl(g,B,C);default:JA("bad ioctl syscall "+B)}}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),-A.errno}}function FI(A,I){if(-1===A||0===I)return-28;var g=oI.mappings[A];if(!g)return 0;if(I===g.len){var B=iI.getStream(g.fd);oI.doMsync(A,B,I,g.flags,g.offset),iI.munmap(B),oI.mappings[A]=null,g.allocated&&sB(g.malloc)}return 0}function GI(A,I){oI.varargs=I;try{return FI(oI.get(),oI.get())}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),-A.errno}}function hI(){}function sI(A){try{var I=oI.getStreamFromFD(A);return iI.close(I),0}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),A.errno}}function RI(){return sI.apply(null,arguments)}function UI(A,I,g,B){try{var C=oI.getStreamFromFD(A),Q=oI.doReadv(C,I,g);return AA[B>>2]=Q,0}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),A.errno}}function yI(){return UI.apply(null,arguments)}function tI(A,I,g,B,C){try{var Q=oI.getStreamFromFD(A),E=4294967296*g+(I>>>0),i=9007199254740992;return E<=-i||E>=i?-61:(iI.llseek(Q,E,B),dA=[Q.position>>>0,(qA=Q.position,+MA(qA)>=1?qA>0?(0|rA(+cA(qA/4294967296),4294967295))>>>0:~~+nA((qA-+(~~qA>>>0))/4294967296)>>>0:0)],AA[C>>2]=dA[0],AA[C+4>>2]=dA[1],Q.getdents&&0===E&&0===B&&(Q.getdents=null),0)}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),A.errno}}function SI(){return tI.apply(null,arguments)}function MI(A,I,g,B){try{var C=oI.getStreamFromFD(A),Q=oI.doWritev(C,I,g);return AA[B>>2]=Q,0}catch(A){return void 0!==iI&&A instanceof iI.ErrnoError||JA(A),A.errno}}function nI(){return MI.apply(null,arguments)}function cI(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+A)}}function rI(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);kI=A}var kI=void 0;function KI(A){for(var I="",g=A;z[g];)I+=kI[z[g++]];return I}var NI={},YI={},eI={},JI=48,HI=57;function LI(A){if(void 0===A)return"_unknown";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return I>=JI&&I<=HI?"_"+A:A}function qI(A,I){return A=LI(A),new Function("body","return function "+A+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(I)}function dI(A,I){var g=qI(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+"\n"+g.replace(/^Error(:[^\n]*)?\n/,""))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},g}var fI=void 0;function lI(A){throw new fI(A)}var uI=void 0;function WI(A){throw new uI(A)}function pI(A,I,g){function B(I){var B=g(I);B.length!==A.length&&WI("Mismatched type converter count");for(var C=0;C<A.length;++C)ZI(A[C],B[C])}A.forEach((function(A){eI[A]=I}));var C=new Array(I.length),Q=[],E=0;I.forEach((function(A,I){YI.hasOwnProperty(A)?C[I]=YI[A]:(Q.push(A),NI.hasOwnProperty(A)||(NI[A]=[]),NI[A].push((function(){C[I]=YI[A],++E===Q.length&&B(C)})))})),0===Q.length&&B(C)}function ZI(A,I,g){if(g=g||{},!("argPackAdvance"in I))throw new TypeError("registerType registeredInstance requires argPackAdvance");var B=I.name;if(A||lI('type "'+B+'" must have a positive integer typeid pointer'),YI.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;lI("Cannot register type '"+B+"' twice")}if(YI[A]=I,delete eI[A],NI.hasOwnProperty(A)){var C=NI[A];delete NI[A],C.forEach((function(A){A()}))}}function bI(A,I,g,B,C){var Q=cI(g);ZI(A,{name:I=KI(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:C},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=v;else if(2===g)B=_;else{if(4!==g)throw new TypeError("Unknown boolean type size: "+I);B=AA}return this.fromWireType(B[A>>Q])},destructorFunction:null})}function xI(I,g,B){I=KI(I),pI([],[g],(function(g){return g=g[0],A[I]=g.fromWireType(B),[]}))}var mI=[],XI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function VI(A){A>4&&0==--XI[A].refcount&&(XI[A]=void 0,mI.push(A))}function OI(){for(var A=0,I=5;I<XI.length;++I)void 0!==XI[I]&&++A;return A}function TI(){for(var A=5;A<XI.length;++A)if(void 0!==XI[A])return XI[A];return null}function jI(){A.count_emval_handles=OI,A.get_first_emval=TI}function PI(A){switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=mI.length?mI.pop():XI.length;return XI[I]={refcount:1,value:A},I}}function vI(A){return this.fromWireType(IA[A>>2])}function zI(A,I){ZI(A,{name:I=KI(I),fromWireType:function(A){var I=XI[A].value;return VI(A),I},toWireType:function(A,I){return PI(I)},argPackAdvance:8,readValueFromPointer:vI,destructorFunction:null})}function _I(A){if(null===A)return"null";var I=D(A);return"object"===I||"array"===I||"function"===I?A.toString():""+A}function $I(A,I){switch(I){case 2:return function(A){return this.fromWireType(gA[A>>2])};case 3:return function(A){return this.fromWireType(BA[A>>3])};default:throw new TypeError("Unknown float type: "+A)}}function Ag(A,I,g){var B=cI(g);ZI(A,{name:I=KI(I),fromWireType:function(A){return A},toWireType:function(A,I){if("number"!=typeof I&&"boolean"!=typeof I)throw new TypeError('Cannot convert "'+_I(I)+'" to '+this.name);return I},argPackAdvance:8,readValueFromPointer:$I(I,B),destructorFunction:null})}function Ig(A,I){if(!(A instanceof Function))throw new TypeError("new_ called with constructor type "+D(A)+" which is not a function");var g=qI(A.name||"unknownFunctionName",(function(){}));g.prototype=A.prototype;var B=new g,C=A.apply(B,I);return C instanceof Object?C:B}function gg(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function Bg(A,I,g,B,C){var Q=I.length;Q<2&&lI("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D="void"!==I[0].name,a="",w="";for(o=0;o<Q-2;++o)a+=(0!==o?", ":"")+"arg"+o,w+=(0!==o?", ":"")+"arg"+o+"Wired";var F="return function "+LI(A)+"("+a+") {\nif (arguments.length !== "+(Q-2)+") {\nthrowBindingError('function "+A+" called with ' + arguments.length + ' arguments, expected "+(Q-2)+" args!');\n}\n";i&&(F+="var destructors = [];\n");var G=i?"destructors":"null",h=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],s=[lI,B,C,gg,I[0],I[1]];for(E&&(F+="var thisWired = classParam.toWireType("+G+", this);\n"),o=0;o<Q-2;++o)F+="var arg"+o+"Wired = argType"+o+".toWireType("+G+", arg"+o+"); // "+I[o+2].name+"\n",h.push("argType"+o),s.push(I[o+2]);if(E&&(w="thisWired"+(w.length>0?", ":"")+w),F+=(D?"var rv = ":"")+"invoker(fn"+(w.length>0?", ":"")+w+");\n",i)F+="runDestructors(destructors);\n";else for(o=E?1:2;o<I.length;++o){var R=1===o?"thisWired":"arg"+(o-2)+"Wired";null!==I[o].destructorFunction&&(F+=R+"_dtor("+R+"); // "+I[o].name+"\n",h.push(R+"_dtor"),s.push(I[o].destructorFunction))}return D&&(F+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),F+="}\n",h.push(F),Ig(Function,h).apply(null,s)}function Cg(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||lI("Function '"+g+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+A[I].overloadTable+")!"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function Qg(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&lI("Cannot register public name '"+I+"' twice"),Cg(A,I,I),A.hasOwnProperty(B)&&lI("Cannot register multiple overloads of a function with the same number of arguments ("+B+")!"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function Eg(A,I){for(var g=[],B=0;B<A;B++)g.push(AA[(I>>2)+B]);return g}function ig(I,g,B){A.hasOwnProperty(I)||WI("Replacing nonexistant public symbol"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function og(I,g){var B;if(I=KI(I),void 0!==A["FUNCTION_TABLE_"+I])B=A["FUNCTION_TABLE_"+I][g];else if("undefined"!=typeof FUNCTION_TABLE)B=FUNCTION_TABLE[g];else{var C=A["dynCall_"+I];void 0===C&&void 0===(C=A["dynCall_"+I.replace(/f/g,"d")])&&lI("No dynCall invoker for signature: "+I),B=function(A){for(var B=[],C=1;C<I.length;++C)B.push("a"+C);var Q="return function dynCall_"+I+"_"+g+"("+B.join(", ")+") {\n";return Q+="    return dynCall(rawFunction"+(B.length?", ":"")+B.join(", ")+");\n",Q+="};\n",new Function("dynCall","rawFunction",Q)(A,g)}(C)}return"function"!=typeof B&&lI("unknown function pointer with signature "+I+": "+g),B}var Dg=void 0;function ag(A){var I=wB(A),g=KI(I);return sB(I),g}function wg(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||YI[I]||(eI[I]?eI[I].forEach(A):(g.push(I),B[I]=!0))})),new Dg(A+": "+g.map(ag).join([", "]))}function Fg(A,I,g,B,C,Q){var E=Eg(I,g);A=KI(A),C=og(B,C),Qg(A,(function(){wg("Cannot call "+A+" due to unbound types",E)}),I-1),pI([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return ig(A,Bg(A,B,null,C,Q),I-1),[]}))}function Gg(A,I,g){switch(I){case 0:return g?function(A){return v[A]}:function(A){return z[A]};case 1:return g?function(A){return _[A>>1]}:function(A){return $[A>>1]};case 2:return g?function(A){return AA[A>>2]}:function(A){return IA[A>>2]};default:throw new TypeError("Unknown integer type: "+A)}}function hg(A,I,g,B,C){I=KI(I),-1===C&&(C=4294967295);var Q=cI(g),E=function(A){return A};if(0===B){var i=32-8*g;E=function(A){return A<<i>>>i}}var o=-1!=I.indexOf("unsigned");ZI(A,{name:I,fromWireType:E,toWireType:function(A,g){if("number"!=typeof g&&"boolean"!=typeof g)throw new TypeError('Cannot convert "'+_I(g)+'" to '+this.name);if(g<B||g>C)throw new TypeError('Passing a number "'+_I(g)+'" from JS side to C/C++ side to an argument of type "'+I+'", which is outside the valid range ['+B+", "+C+"]!");return o?g>>>0:0|g},argPackAdvance:8,readValueFromPointer:Gg(I,Q,0!==B),destructorFunction:null})}function sg(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function C(A){var I=IA,g=I[A>>=2],C=I[A+1];return new B(I.buffer,C,g)}ZI(A,{name:g=KI(g),fromWireType:C,argPackAdvance:8,readValueFromPointer:C},{ignoreDuplicateRegistrations:!0})}function Rg(A,I){var g="std::string"===(I=KI(I));ZI(A,{name:I,fromWireType:function(A){var I,B=IA[A>>2];if(g){var C=z[A+4+B],Q=0;0!=C&&(Q=C,z[A+4+B]=0);for(var E=A+4,i=0;i<=B;++i){var o=A+4+i;if(0==z[o]){var D=f(E);void 0===I?I=D:(I+=String.fromCharCode(0),I+=D),E=o+1}}0!=Q&&(z[A+4+B]=Q)}else{var a=new Array(B);for(i=0;i<B;++i)a[i]=String.fromCharCode(z[A+4+i]);I=a.join("")}return sB(A),I},toWireType:function(A,I){I instanceof ArrayBuffer&&(I=new Uint8Array(I));var B="string"==typeof I;B||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||lI("Cannot pass non-string to std::string");var C=(g&&B?function(){return W(I)}:function(){return I.length})(),Q=RB(4+C+1);if(IA[Q>>2]=C,g&&B)u(I,Q+4,C+1);else if(B)for(var E=0;E<C;++E){var i=I.charCodeAt(E);i>255&&(sB(Q),lI("String has UTF-16 code units that do not fit in 8 bits")),z[Q+4+E]=i}else for(E=0;E<C;++E)z[Q+4+E]=I[E];return null!==A&&A.push(sB,Q),Q},argPackAdvance:8,readValueFromPointer:vI,destructorFunction:function(A){sB(A)}})}function Ug(A,I,g){var B,C,Q,E,i;g=KI(g),2===I?(B=Z,C=b,E=x,Q=function(){return $},i=1):4===I&&(B=m,C=X,E=V,Q=function(){return IA},i=2),ZI(A,{name:g,fromWireType:function(A){var g,C=IA[A>>2],E=Q(),o=E[A+4+C*I>>i],D=0;0!=o&&(D=o,E[A+4+C*I>>i]=0);for(var a=A+4,w=0;w<=C;++w){var F=A+4+w*I;if(0==E[F>>i]){var G=B(a);void 0===g?g=G:(g+=String.fromCharCode(0),g+=G),a=F+I}}return 0!=D&&(E[A+4+C*I>>i]=D),sB(A),g},toWireType:function(A,B){"string"!=typeof B&&lI("Cannot pass non-string to C++ string type "+g);var Q=E(B),o=RB(4+Q+I);return IA[o>>2]=Q>>i,C(B,o+4,Q+I),null!==A&&A.push(sB,o),o},argPackAdvance:8,readValueFromPointer:vI,destructorFunction:function(A){sB(A)}})}function yg(A,I){ZI(A,{isVoid:!0,name:I=KI(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})}function tg(){JA()}function Sg(){return z.length}function Mg(A){JA("OOM")}function ng(A){Mg()}function cg(A){eB(A)}function rg(A){return 0===A?0:(A=f(A),jA.hasOwnProperty(A)?(rg.ret&&sB(rg.ret),rg.ret=O(jA[A]),rg.ret):0)}function kg(A){var I=Date.now();return AA[A>>2]=I/1e3|0,AA[A+4>>2]=I%1e3*1e3|0,0}function Kg(A){return Math.pow(2,A)}function Ng(A){var I=Yg,g=I.LLVM_SAVEDSTACKS[A];I.LLVM_SAVEDSTACKS.splice(A,1),yB(g)}function Yg(){var A=Yg;return A.LLVM_SAVEDSTACKS||(A.LLVM_SAVEDSTACKS=[]),A.LLVM_SAVEDSTACKS.push(tB()),A.LLVM_SAVEDSTACKS.length-1}var eg=61136;function Jg(){if(!Jg.called){Jg.called=!0,AA[GB()>>2]=60*(new Date).getTimezoneOffset();var A=(new Date).getFullYear(),I=new Date(A,0,1),g=new Date(A,6,1);AA[FB()>>2]=Number(I.getTimezoneOffset()!=g.getTimezoneOffset());var B=i(I),C=i(g),Q=O(B),E=O(C);g.getTimezoneOffset()<I.getTimezoneOffset()?(AA[hB()>>2]=Q,AA[hB()+4>>2]=E):(AA[hB()>>2]=E,AA[hB()+4>>2]=Q)}function i(A){var I=A.toTimeString().match(/\(([A-Za-z ]+)\)$/);return I?I[1]:"GMT"}}function Hg(A,I){Jg();var g=new Date(1e3*AA[A>>2]);AA[I>>2]=g.getSeconds(),AA[I+4>>2]=g.getMinutes(),AA[I+8>>2]=g.getHours(),AA[I+12>>2]=g.getDate(),AA[I+16>>2]=g.getMonth(),AA[I+20>>2]=g.getFullYear()-1900,AA[I+24>>2]=g.getDay();var B=new Date(g.getFullYear(),0,1),C=(g.getTime()-B.getTime())/864e5|0;AA[I+28>>2]=C,AA[I+36>>2]=-60*g.getTimezoneOffset();var Q=new Date(g.getFullYear(),6,1).getTimezoneOffset(),E=B.getTimezoneOffset(),i=0|(Q!=E&&g.getTimezoneOffset()==Math.min(E,Q));AA[I+32>>2]=i;var o=AA[hB()+(i?4:0)>>2];return AA[I+40>>2]=o,I}function Lg(A){return Hg(A,eg)}function qg(A,I){throw UB(A,I||1),"longjmp"}function dg(A,I,g){z.set(z.subarray(I,I+g),A)}function fg(A){return A%4==0&&(A%100!=0||A%400==0)}function lg(A,I){for(var g=0,B=0;B<=I;g+=A[B++]);return g}u("GMT",61184,4);var ug=[31,29,31,30,31,30,31,31,30,31,30,31],Wg=[31,28,31,30,31,30,31,31,30,31,30,31];function pg(A,I){for(var g=new Date(A.getTime());I>0;){var B=fg(g.getFullYear()),C=g.getMonth(),Q=(B?ug:Wg)[C];if(!(I>Q-g.getDate()))return g.setDate(g.getDate()+I),g;I-=Q-g.getDate()+1,g.setDate(1),C<11?g.setMonth(C+1):(g.setMonth(0),g.setFullYear(g.getFullYear()+1))}return g}function Zg(A,I,g,B){var C=AA[B+40>>2],Q={tm_sec:AA[B>>2],tm_min:AA[B+4>>2],tm_hour:AA[B+8>>2],tm_mday:AA[B+12>>2],tm_mon:AA[B+16>>2],tm_year:AA[B+20>>2],tm_wday:AA[B+24>>2],tm_yday:AA[B+28>>2],tm_isdst:AA[B+32>>2],tm_gmtoff:AA[B+36>>2],tm_zone:C?f(C):""},E=f(g),i={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var o in i)E=E.replace(new RegExp(o,"g"),i[o]);var D=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],a=["January","February","March","April","May","June","July","August","September","October","November","December"];function w(A,I,g){for(var B="number"==typeof A?A.toString():A||"";B.length<I;)B=g[0]+B;return B}function F(A,I){return w(A,I,"0")}function G(A,I){function g(A){return A<0?-1:A>0?1:0}var B;return 0===(B=g(A.getFullYear()-I.getFullYear()))&&0===(B=g(A.getMonth()-I.getMonth()))&&(B=g(A.getDate()-I.getDate())),B}function h(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function s(A){var I=pg(new Date(A.tm_year+1900,0,1),A.tm_yday),g=new Date(I.getFullYear(),0,4),B=new Date(I.getFullYear()+1,0,4),C=h(g),Q=h(B);return G(C,I)<=0?G(Q,I)<=0?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}var R={"%a":function(A){return D[A.tm_wday].substring(0,3)},"%A":function(A){return D[A.tm_wday]},"%b":function(A){return a[A.tm_mon].substring(0,3)},"%B":function(A){return a[A.tm_mon]},"%C":function(A){return F((A.tm_year+1900)/100|0,2)},"%d":function(A){return F(A.tm_mday,2)},"%e":function(A){return w(A.tm_mday,2," ")},"%g":function(A){return s(A).toString().substring(2)},"%G":function(A){return s(A)},"%H":function(A){return F(A.tm_hour,2)},"%I":function(A){var I=A.tm_hour;return 0==I?I=12:I>12&&(I-=12),F(I,2)},"%j":function(A){return F(A.tm_mday+lg(fg(A.tm_year+1900)?ug:Wg,A.tm_mon-1),3)},"%m":function(A){return F(A.tm_mon+1,2)},"%M":function(A){return F(A.tm_min,2)},"%n":function(){return"\n"},"%p":function(A){return A.tm_hour>=0&&A.tm_hour<12?"AM":"PM"},"%S":function(A){return F(A.tm_sec,2)},"%t":function(){return"\t"},"%u":function(A){return A.tm_wday||7},"%U":function(A){var I=new Date(A.tm_year+1900,0,1),g=0===I.getDay()?I:pg(I,7-I.getDay()),B=new Date(A.tm_year+1900,A.tm_mon,A.tm_mday);if(G(g,B)<0){var C=lg(fg(B.getFullYear())?ug:Wg,B.getMonth()-1)-31,Q=31-g.getDate()+C+B.getDate();return F(Math.ceil(Q/7),2)}return 0===G(g,I)?"01":"00"},"%V":function(A){var I,g=new Date(A.tm_year+1900,0,4),B=new Date(A.tm_year+1901,0,4),C=h(g),Q=h(B),E=pg(new Date(A.tm_year+1900,0,1),A.tm_yday);return G(E,C)<0?"53":G(Q,E)<=0?"01":(I=C.getFullYear()<A.tm_year+1900?A.tm_yday+32-C.getDate():A.tm_yday+1-C.getDate(),F(Math.ceil(I/7),2))},"%w":function(A){return A.tm_wday},"%W":function(A){var I=new Date(A.tm_year,0,1),g=1===I.getDay()?I:pg(I,0===I.getDay()?1:7-I.getDay()+1),B=new Date(A.tm_year+1900,A.tm_mon,A.tm_mday);if(G(g,B)<0){var C=lg(fg(B.getFullYear())?ug:Wg,B.getMonth()-1)-31,Q=31-g.getDate()+C+B.getDate();return F(Math.ceil(Q/7),2)}return 0===G(g,I)?"01":"00"},"%y":function(A){return(A.tm_year+1900).toString().substring(2)},"%Y":function(A){return A.tm_year+1900},"%z":function(A){var I=A.tm_gmtoff,g=I>=0;return I=(I=Math.abs(I)/60)/60*100+I%60,(g?"+":"-")+String("0000"+I).slice(-4)},"%Z":function(A){return A.tm_zone},"%%":function(){return"%"}};for(var o in R)E.indexOf(o)>=0&&(E=E.replace(new RegExp(o,"g"),R[o](Q)));var U=Xg(E,!1);return U.length>I?0:(T(U,A),U.length-1)}function bg(A,I,g,B){return Zg(A,I,g,B)}function xg(A){var I=Date.now()/1e3|0;return A&&(AA[A>>2]=I),I}iI.staticInit(),rI(),fI=A.BindingError=dI(Error,"BindingError"),uI=A.InternalError=dI(Error,"InternalError"),jI(),Dg=A.UnboundTypeError=dI(Error,"UnboundTypeError");var mg=!1;function Xg(A,I,g){var B=g>0?g:W(A)+1,C=new Array(B),Q=l(A,C,0,C.length);return I&&(C.length=Q),C}function Vg(A){for(var I=[],g=0;g<A.length;g++){var B=A[g];B>255&&(mg&&H(!1,"Character code "+B+" ("+String.fromCharCode(B)+")  at offset "+g+" not in 0x00-0xFF."),B&=255),I.push(String.fromCharCode(B))}return I.join("")}var Og="function"==typeof atob?atob:function(A){var I,g,B,C,Q,E,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",o="",D=0;A=A.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{I=i.indexOf(A.charAt(D++))<<2|(C=i.indexOf(A.charAt(D++)))>>4,g=(15&C)<<4|(Q=i.indexOf(A.charAt(D++)))>>2,B=(3&Q)<<6|(E=i.indexOf(A.charAt(D++))),o+=String.fromCharCode(I),64!==Q&&(o+=String.fromCharCode(g)),64!==E&&(o+=String.fromCharCode(B))}while(D<A.length);return o};function Tg(A){if("boolean"==typeof w&&w){var I;try{I=Buffer.from(A,"base64")}catch(g){I=new Buffer(A,"base64")}return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}try{for(var g=Og(A),B=new Uint8Array(g.length),C=0;C<g.length;++C)B[C]=g.charCodeAt(C);return B}catch(A){throw new Error("Converting base64 string to bytes failed.")}}function jg(A){if(LA(A))return Tg(A.slice(HA.length))}function Pg(A,I){var g=tB();try{return SB(A,I)}catch(A){if(yB(g),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}function vg(A,I,g){var B=tB();try{return MB(A,I,g)}catch(A){if(yB(B),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}function zg(A,I,g,B){var C=tB();try{return nB(A,I,g,B)}catch(A){if(yB(C),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}function _g(A,I){var g=tB();try{cB(A,I)}catch(A){if(yB(g),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}function $g(A,I,g){var B=tB();try{rB(A,I,g)}catch(A){if(yB(B),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}function AB(A,I,g,B){var C=tB();try{kB(A,I,g,B)}catch(A){if(yB(C),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}function IB(A,I,g,B,C){var Q=tB();try{KB(A,I,g,B,C)}catch(A){if(yB(Q),A!==A+0&&"longjmp"!==A)throw A;UB(1,0)}}var gB={},BB={$:vA,f:zA,e:$A,A:AI,_:gI,z:DI,Z:aI,Y:wI,X:GI,o:hI,y:RI,W:yI,D:SI,V:nI,U:bI,x:xI,T:zI,w:Ag,j:Fg,k:hg,i:sg,v:Rg,s:Ug,S:yg,__memory_base:1024,__table_base:0,a:tg,R:mA,Q:xA,P:bA,O:ZA,N:XA,M:Sg,K:dg,J:ng,b:cg,n:rg,u:kg,I:Kg,m:Ng,l:Yg,H:Lg,g:qg,F:Zg,E:bg,t:xg,c:JA,h:Y,q:Pg,L:vg,G:zg,p:_g,C:$g,B:AB,r:IB,memory:r,d:N,table:e},CB=A.asm(gB,BB,P);A.asm=CB;var QB,EB=A.__GLOBAL__sub_I_ARToolKitJS_cpp=function(){return A.asm.aa.apply(null,arguments)},iB=A.__GLOBAL__sub_I_bind_cpp=function(){return A.asm.ba.apply(null,arguments)},oB=A.__GLOBAL__sub_I_iostream_cpp=function(){return A.asm.ca.apply(null,arguments)},DB=A.__ZSt18uncaught_exceptionv=function(){return A.asm.da.apply(null,arguments)},aB=(A.___embind_register_native_and_builtin_types=function(){return A.asm.ea.apply(null,arguments)},A.___emscripten_environ_constructor=function(){return A.asm.fa.apply(null,arguments)}),wB=(A.___errno_location=function(){return A.asm.ga.apply(null,arguments)},A.___getTypeName=function(){return A.asm.ha.apply(null,arguments)}),FB=A.__get_daylight=function(){return A.asm.ia.apply(null,arguments)},GB=A.__get_timezone=function(){return A.asm.ja.apply(null,arguments)},hB=A.__get_tzname=function(){return A.asm.ka.apply(null,arguments)},sB=A._free=function(){return A.asm.la.apply(null,arguments)},RB=A._malloc=function(){return A.asm.ma.apply(null,arguments)},UB=A._setThrew=function(){return A.asm.na.apply(null,arguments)},yB=(A.stackAlloc=function(){return A.asm.Ra.apply(null,arguments)},A.stackRestore=function(){return A.asm.Sa.apply(null,arguments)}),tB=A.stackSave=function(){return A.asm.Ta.apply(null,arguments)},SB=(A.dynCall_di=function(){return A.asm.oa.apply(null,arguments)},A.dynCall_dii=function(){return A.asm.pa.apply(null,arguments)},A.dynCall_i=function(){return A.asm.qa.apply(null,arguments)},A.dynCall_ii=function(){return A.asm.ra.apply(null,arguments)}),MB=(A.dynCall_iidiiii=function(){return A.asm.sa.apply(null,arguments)},A.dynCall_iii=function(){return A.asm.ta.apply(null,arguments)}),nB=A.dynCall_iiii=function(){return A.asm.ua.apply(null,arguments)},cB=(A.dynCall_iiiii=function(){return A.asm.va.apply(null,arguments)},A.dynCall_iiiiid=function(){return A.asm.wa.apply(null,arguments)},A.dynCall_iiiiii=function(){return A.asm.xa.apply(null,arguments)},A.dynCall_iiiiiid=function(){return A.asm.ya.apply(null,arguments)},A.dynCall_iiiiiii=function(){return A.asm.za.apply(null,arguments)},A.dynCall_iiiiiiii=function(){return A.asm.Aa.apply(null,arguments)},A.dynCall_iiiiiiiii=function(){return A.asm.Ba.apply(null,arguments)},A.dynCall_iiiiij=function(){return A.asm.Ca.apply(null,arguments)},A.dynCall_jiji=function(){return A.asm.Da.apply(null,arguments)},A.dynCall_v=function(){return A.asm.Ea.apply(null,arguments)},A.dynCall_vi=function(){return A.asm.Fa.apply(null,arguments)}),rB=(A.dynCall_vid=function(){return A.asm.Ga.apply(null,arguments)},A.dynCall_vif=function(){return A.asm.Ha.apply(null,arguments)},A.dynCall_vii=function(){return A.asm.Ia.apply(null,arguments)}),kB=(A.dynCall_viid=function(){return A.asm.Ja.apply(null,arguments)},A.dynCall_viif=function(){return A.asm.Ka.apply(null,arguments)},A.dynCall_viii=function(){return A.asm.La.apply(null,arguments)}),KB=A.dynCall_viiii=function(){return A.asm.Ma.apply(null,arguments)};function NB(A){this.name="ExitStatus",this.message="Program terminated with exit("+A+")",this.status=A}function YB(I){function g(){QB||(QB=!0,J||(RA(),UA(),A.onRuntimeInitialized&&A.onRuntimeInitialized(),yA()))}I=I||C,kA>0||(sA(),kA>0||(A.setStatus?(A.setStatus("Running..."),setTimeout((function(){setTimeout((function(){A.setStatus("")}),1),g()}),1)):g()))}function eB(I,g){g&&c&&0===I||(c||(J=!0,A.onExit&&A.onExit(I)),E(I,new NB(I)))}if(A.dynCall_viiiii=function(){return A.asm.Na.apply(null,arguments)},A.dynCall_viiiiii=function(){return A.asm.Oa.apply(null,arguments)},A.dynCall_viiiiiii=function(){return A.asm.Pa.apply(null,arguments)},A.dynCall_viijii=function(){return A.asm.Qa.apply(null,arguments)},A.asm=CB,A.FS=iI,A.then=function(I){if(QB)I(A);else{var g=A.onRuntimeInitialized;A.onRuntimeInitialized=function(){g&&g(),I(A)}}return A},NA=function A(){QB||YB(),QB||(NA=A)},A.run=YB,A.preInit)for("function"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return c=!0,YB(),A});const F=w,G=function(){return new Promise((function(A){F({onRuntimeInitialized:function(){A({instance:this})}})}))};var h=g(669),s=g.n(h),R=function(){function A(){C(this,A)}var g;return E(A,null,[{key:"fetchRemoteData",value:(g=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.prev=0,A.next=3,s().get(I,{responseType:"arraybuffer"});case 3:return g=A.sent,A.abrupt("return",new Uint8Array(g.data));case 7:throw A.prev=7,A.t0=A.catch(0),A.t0;case 10:case"end":return A.stop()}}),A,null,[[0,7]])}))),function(A){return g.apply(this,arguments)})},{key:"string2Uint8Data",value:function(A){for(var I=new Uint8Array(A.length),g=0;g<I.length;g++)I[g]=255&A.charCodeAt(g);return I}},{key:"uint8Data2String",value:function(A){return String.fromCharCode.apply(String,A)}},{key:"parseMultiFile",value:function(I){var g=A.uint8Data2String(I).split("\n"),B=[],C=0;return g.forEach((function(A){if((A=A.trim())&&!A.startsWith("#"))switch(C){case 0:return void(C=1);case 1:A.match(/^\d+$/)||B.push(A);case 2:case 3:case 4:return void C++;case 5:return void(C=1)}})),B}}]),A}(),U=function(){function A(){C(this,A),this.instance,this.markerCount=0,this.multiMarkerCount=0,this.cameraCount=0,this.version="0.1.0",console.info("ARToolkit ",this.version)}var B,Q,i,D,a;return E(A,[{key:"init",value:(a=I(o().mark((function A(){var I;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,G();case 2:return I=A.sent,this.instance=I.instance,this._decorate(),("undefined"!=typeof window?window:g.g).artoolkit=this,A.abrupt("return",this);case 8:case"end":return A.stop()}}),A,this)}))),function(){return a.apply(this,arguments)})},{key:"_decorate",value:function(){var A=this;for(var I in["setup","teardown","setupAR2","setLogLevel","getLogLevel","setDebugMode","getDebugMode","getProcessingImage","setMarkerInfoDir","setMarkerInfoVertex","getTransMatSquare","getTransMatSquareCont","getTransMatMultiSquare","getTransMatMultiSquareRobust","getMultiMarkerNum","getMultiMarkerCount","detectMarker","getMarkerNum","detectNFTMarker","getNFTMarker","getMarker","getMultiEachMarker","setProjectionNearPlane","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","getThreshold","setPatternDetectionMode","getPatternDetectionMode","setMatrixCodeType","getMatrixCodeType","setLabelingMode","getLabelingMode","setPattRatio","getPattRatio","setImageProcMode","getImageProcMode"].forEach((function(I){A[I]=A.instance[I]})),this.instance)I.match(/^AR/)&&(this[I]=this.instance[I])}},{key:"loadCamera",value:(D=I(o().mark((function A(I){var g,B;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(g="/camera_param_"+this.cameraCount++,!(I instanceof Uint8Array)){A.next=5;break}B=I,A.next=14;break;case 5:return A.prev=5,A.next=8,R.fetchRemoteData(I);case 8:B=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(B,g),A.abrupt("return",this.instance._loadCamera(g));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A){return D.apply(this,arguments)})},{key:"addMarker",value:(i=I(o().mark((function A(I,g){var B,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:if(B="/marker_"+this.markerCount++,-1===g.indexOf("\n")){A.next=5;break}C=R.string2Uint8Data(g),A.next=14;break;case 5:return A.prev=5,A.next=8,R.fetchRemoteData(g);case 8:C=A.sent,A.next=14;break;case 11:throw A.prev=11,A.t0=A.catch(5),A.t0;case 14:return this._storeDataFile(C,B),A.abrupt("return",this.instance._addMarker(I,B));case 16:case"end":return A.stop()}}),A,this,[[5,11]])}))),function(A,I){return i.apply(this,arguments)})},{key:"addMultiMarker",value:(Q=I(o().mark((function A(g,B){var C,Q,E,i,D,a,w;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C="/multi_marker_"+this.multiMarkerCount++,A.next=3,R.fetchRemoteData(B);case 3:return Q=A.sent,E=R.parseMultiFile(Q),i=function(){var A=I(o().mark((function A(I){var g,C;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=new URL(I,B).toString(),A.next=3,R.fetchRemoteData(g);case 3:C=A.sent,this._storeDataFile(C,I);case 5:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),D=E.map(i,this),A.next=9,Promise.all(D);case 9:return a=this.instance._addMultiMarker(g,C),w=this.instance.getMultiMarkerNum(g,a),A.abrupt("return",[a,w]);case 12:case"end":return A.stop()}}),A,this)}))),function(A,I){return Q.apply(this,arguments)})},{key:"addNFTMarker",value:(B=I(o().mark((function A(g,B){var C,Q,E,i;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return C="/markerNFT_"+this.markerCount++,Q=["fset","iset","fset3"],E=function(){var A=I(o().mark((function A(I){var g,Q,E;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return g=B+"."+I,Q=C+"."+I,A.next=4,R.fetchRemoteData(g);case 4:E=A.sent,this._storeDataFile(E,Q);case 6:case"end":return A.stop()}}),A,this)})));return function(I){return A.apply(this,arguments)}}(),i=Q.map(E,this),A.next=6,Promise.all(i);case 6:return A.abrupt("return",this.instance._addNFTMarker(g,C));case 7:case"end":return A.stop()}}),A,this)}))),function(A,I){return B.apply(this,arguments)})},{key:"_storeDataFile",value:function(A,I){this.instance.FS.writeFile(I,A,{encoding:"binary"})}}],[{key:"UNKNOWN_MARKER",get:function(){return-1}},{key:"PATTERN_MARKER",get:function(){return 0}},{key:"BARCODE_MARKER",get:function(){return 1}},{key:"NFT_MARKER",get:function(){return 2}}]),A}();function y(A,I,g){return I in A?Object.defineProperty(A,I,{value:g,enumerable:!0,configurable:!0,writable:!0}):A[I]=g,A}function t(A,I){var g=Object.keys(A);if(Object.getOwnPropertySymbols){var B=Object.getOwnPropertySymbols(A);I&&(B=B.filter((function(I){return Object.getOwnPropertyDescriptor(A,I).enumerable}))),g.push.apply(g,B)}return g}function S(A){for(var I=1;I<arguments.length;I++){var g=null!=arguments[I]?arguments[I]:{};I%2?t(Object(g),!0).forEach((function(I){y(A,I,g[I])})):Object.getOwnPropertyDescriptors?Object.defineProperties(A,Object.getOwnPropertyDescriptors(g)):t(Object(g)).forEach((function(I){Object.defineProperty(A,I,Object.getOwnPropertyDescriptor(g,I))}))}return A}var M=function(){function A(I,g,B,Q){C(this,A),this.options=S(S({},{canvas:null,orientation:"landscape"}),Q),this.id=-1,this.width=I,this.height=g,this.image,this.orientation=this.options.orientation,this.cameraParam=B,this.cameraId=-1,this.cameraLoaded=!1,this.artoolkit,this.listeners={},this.defaultMarkerWidth=1,this.patternMarkers={},this.barcodeMarkers={},this.nftMarkers={},this.transform_mat=new Float32Array(16),this.transformGL_RH=new Float64Array(16),this.videoWidth=I,this.videoHeight=g,this.videoSize=this.videoWidth*this.videoHeight,this.framepointer=null,this.framesize=null,this.dataHeap=null,this.videoLuma=null,this.camera_mat=null,this.marker_transform_mat=null,this.videoLumaPointer=null,this.options.canvas?this.canvas=this.options.canvas:"undefined"!=typeof document&&(this.canvas=document.createElement("canvas")),this.canvas?(this.canvas.width=I,this.canvas.height=g,this.ctx=this.canvas.getContext("2d")):console.warn("No canvas available"),this.nftMarkerFound=!1,this.nftMarkerFoundTime=!1,this.nftMarkerCount=0,this._bwpointer=!1}var g,B,Q,i,D,a;return E(A,[{key:"dispose",value:function(){for(var A in this.cameraId=-1,this.cameraParam="",this.cameraLoaded=!1,this.id>-1&&this.artoolkit.teardown(this.id),this.image&&this.image.srcObject,this)this[A]=null}},{key:"process",value:function(A){var I=this.detectMarker(A);0!=I&&console.error("[ARController]","detectMarker error:",I);var g,B,C=this.getMarkerNum();for(g in this.patternMarkers)(B=this.patternMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.barcodeMarkers)(B=this.barcodeMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(g in this.nftMarkers)(B=this.nftMarkers[g]).inPrevious=B.inCurrent,B.inCurrent=!1;for(var Q=0;Q<C;Q++){var E=this.getMarker(Q),i=U.UNKNOWN_MARKER,o=this.trackPatternMarkerId(-1);E.idPatt>-1&&(E.id===E.idPatt||-1===E.idMatrix)?(o=this.trackPatternMarkerId(E.idPatt),i=U.PATTERN_MARKER,E.dir!==E.dirPatt&&this.setMarkerInfoDir(Q,E.dirPatt)):E.idMatrix>-1&&(o=this.trackBarcodeMarkerId(E.idMatrix),i=U.BARCODE_MARKER,E.dir!==E.dirMatrix&&this.setMarkerInfoDir(Q,E.dirMatrix)),i!==U.UNKNOWN_MARKER&&o.inPrevious?this.getTransMatSquareCont(Q,o.markerWidth,o.matrix,o.matrix):this.getTransMatSquare(Q,o.markerWidth,o.matrix),o.inCurrent=!0,this.transMatToGLMat(o.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMarker",target:this,data:{index:Q,type:i,marker:E,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}var D=this.nftMarkerCount;this.detectNFTMarker();for(var a=0;a<D;a++){var w=this.getNFTMarker(a),F=U.NFT_MARKER;if(w.found){this.nftMarkerFound=a,this.nftMarkerFoundTime=Date.now();var G=this.trackNFTMarkerId(a);G.matrix.set(w.pose),G.inCurrent=!0,this.transMatToGLMat(G.matrix,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getNFTMarker",target:this,data:{index:a,type:F,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}else self.nftMarkerFound===a&&Date.now()-this.nftMarkerFoundTime>200&&(this.nftMarkerFound=!1,this.dispatchEvent({name:"lostNFTMarker",target:this,data:{index:a,type:F,marker:w,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}}))}for(var h=this.getMultiMarkerCount(),s=0;s<h;s++){var R=this.getMultiMarkerPatternCount(s),y=!1;this.artoolkit.getTransMatMultiSquareRobust(this.id,s),this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat);for(var t=0;t<R;t++)if((M=this.getMultiEachMarker(s,t)).visible>=0){y=!0,this.dispatchEvent({name:"getMultiMarker",target:this,data:{multiMarkerId:s,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}});break}if(y)for(var S=0;S<R;S++){var M=this.getMultiEachMarker(s,S);this.transMatToGLMat(this.marker_transform_mat,this.transform_mat),this.transformGL_RH=this.arglCameraViewRHf(this.transform_mat),this.dispatchEvent({name:"getMultiMarkerSub",target:this,data:{multiMarkerId:s,markerIndex:S,marker:M,matrix:this.transform_mat,matrixGL_RH:this.transformGL_RH}})}}this._bwpointer&&this.debugDraw()}},{key:"detectNFTMarker",value:function(){this.artoolkit.detectNFTMarker(this.id)}},{key:"trackPatternMarkerId",value:function(A,I){var g=this.patternMarkers[A];return g||(this.patternMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackBarcodeMarkerId",value:function(A,I){var g=this.barcodeMarkers[A];return g||(this.barcodeMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"trackNFTMarkerId",value:function(A,I){var g=this.nftMarkers[A];return g||(this.nftMarkers[A]=g={inPrevious:!1,inCurrent:!1,matrix:new Float64Array(12),matrixGL_RH:new Float64Array(12),markerWidth:I||this.defaultMarkerWidth}),I&&(g.markerWidth=I),g}},{key:"getMultiMarkerCount",value:function(){return this.artoolkit.getMultiMarkerCount(this.id)}},{key:"getMultiMarkerPatternCount",value:function(A){return this.artoolkit.getMultiMarkerNum(this.id,A)}},{key:"addEventListener",value:function(A,I){this.listeners[A]||(this.listeners[A]=[]),this.listeners[A].push(I)}},{key:"removeEventListener",value:function(A,I){if(this.listeners[A]){var g=this.listeners[A].indexOf(I);g>-1&&this.listeners[A].splice(g,1)}}},{key:"dispatchEvent",value:function(A){var I=this.listeners[A.name];if(I)for(var g=0;g<I.length;g++)I[g].call(this,A)}},{key:"debugSetup",value:function(){"undefined"!=typeof document?(document.body.appendChild(this.canvas),this.setDebugMode(!0),this._bwpointer=this.getProcessingImage()):console.log("debugSetup() currently only supports Browser environments")}},{key:"debugDraw",value:function(){for(var A=new Uint8ClampedArray(this.artoolkit.instance.HEAPU8.buffer,this._bwpointer,this.framesize),I=new ImageData(new Uint8ClampedArray(this.canvas.width*this.canvas.height*4),this.canvas.width,this.canvas.height),g=0,B=0;g<A.length;g++,B+=4){var C=A[g];I.data[B+0]=C,I.data[B+1]=C,I.data[B+2]=C,I.data[B+3]=255}this.ctx.putImageData(I,0,0);for(var Q=this.getMarkerNum(),E=0;E<Q;E++)this.drawDebugMarker(this.getMarker(E))}},{key:"drawDebugMarker",value:function(A){var I=A.vertex,g=A.pos,B=this.ctx;B.lineWidth=5,B.strokeStyle="red",B.beginPath(),B.moveTo(I[0][0],I[0][1]),B.lineTo(I[1][0],I[1][1]),B.stroke(),B.beginPath(),B.moveTo(I[2][0],I[2][1]),B.lineTo(I[3][0],I[3][1]),B.stroke(),B.strokeStyle="green",B.beginPath(),B.lineTo(I[1][0],I[1][1]),B.lineTo(I[2][0],I[2][1]),B.stroke(),B.beginPath(),B.moveTo(I[3][0],I[3][1]),B.lineTo(I[0][0],I[0][1]),B.stroke(),B.beginPath(),B.arc(g[0],g[1],8,0,2*Math.PI),B.fillStyle="red",B.fill()}},{key:"loadMarker",value:(a=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return a.apply(this,arguments)})},{key:"loadMultiMarker",value:(D=I(o().mark((function A(I){return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addMultiMarker(this.id,I);case 2:return A.abrupt("return",A.sent);case 3:case"end":return A.stop()}}),A,this)}))),function(A){return D.apply(this,arguments)})},{key:"loadNFTMarker",value:(i=I(o().mark((function A(I){var g;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,this.artoolkit.addNFTMarker(this.id,I);case 2:return g=A.sent,this.nftMarkerCount=g+1,A.abrupt("return",g);case 5:case"end":return A.stop()}}),A,this)}))),function(A){return i.apply(this,arguments)})},{key:"getTransMatSquare",value:function(A,I,g){return this.artoolkit.getTransMatSquare(this.id,A,I),g.set(this.marker_transform_mat),g}},{key:"getTransMatSquareCont",value:function(A,I,g,B){return this.marker_transform_mat.set(g),this.artoolkit.getTransMatSquareCont(this.id,A,I),B.set(this.marker_transform_mat),B}},{key:"getTransMatMultiSquare",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"getTransMatMultiSquareRobust",value:function(A,I){return this.artoolkit.getTransMatMultiSquare(this.id,A),I.set(this.marker_transform_mat),I}},{key:"transMatToGLMat",value:function(A,I,g){return null==I&&(I=new Float64Array(16)),I[0]=A[0],I[4]=A[1],I[8]=A[2],I[12]=A[3],I[1]=A[4],I[5]=A[5],I[9]=A[6],I[13]=A[7],I[2]=A[8],I[6]=A[9],I[10]=A[10],I[14]=A[11],I[3]=0,I[7]=0,I[11]=0,I[15]=1,null!=g&&0!==g&&(I[12]*=g,I[13]*=g,I[14]*=g),I}},{key:"arglCameraViewRHf",value:function(A,I,g){var B;return(B=null==I?new Float64Array(16):I)[0]=A[0],B[4]=A[4],B[8]=A[8],B[12]=A[12],B[1]=-A[1],B[5]=-A[5],B[9]=-A[9],B[13]=-A[13],B[2]=-A[2],B[6]=-A[6],B[10]=-A[10],B[14]=-A[14],B[3]=0,B[7]=0,B[11]=0,B[15]=1,null!=g&&0!==g&&(B[12]*=g,B[13]*=g,B[14]*=g),B}},{key:"detectMarker",value:function(A){return this._copyImageToHeap(A)?this.artoolkit.detectMarker(this.id):-99}},{key:"getMarkerNum",value:function(){return this.artoolkit.getMarkerNum(this.id)}},{key:"getMarker",value:function(A){if(0===this.artoolkit.getMarker(this.id,A))return this.artoolkit.markerInfo}},{key:"getNFTMarker",value:function(A){if(0===this.artoolkit.getNFTMarker(this.id,A))return this.artoolkit.NFTMarkerInfo}},{key:"setMarkerInfoVertex",value:function(A,I){for(var g=0;g<I.length;g++)this.marker_transform_mat[2*g+0]=I[g][0],this.marker_transform_mat[2*g+1]=I[g][1];return this.artoolkit.setMarkerInfoVertex(this.id,A)}},{key:"cloneMarkerInfo",value:function(A){return JSON.parse(JSON.stringify(A))}},{key:"getMultiEachMarker",value:function(A,I){if(0===this.artoolkit.getMultiEachMarker(this.id,A,I))return this.artoolkit.multiEachMarkerInfo}},{key:"getTransformationMatrix",value:function(){return this.transform_mat}},{key:"getCameraMatrix",value:function(){return this.camera_mat}},{key:"getMarkerTransformationMatrix",value:function(){return this.marker_transform_mat}},{key:"setDebugMode",value:function(A){return this.artoolkit.setDebugMode(this.id,A)}},{key:"getDebugMode",value:function(){return this.artoolkit.getDebugMode(this.id)}},{key:"getProcessingImage",value:function(){return this.artoolkit.getProcessingImage(this.id)}},{key:"setLogLevel",value:function(A){return this.artoolkit.setLogLevel(A)}},{key:"getLogLevel",value:function(){return this.artoolkit.getLogLevel()}},{key:"setMarkerInfoDir",value:function(A,I){return this.artoolkit.setMarkerInfoDir(this.id,A,I)}},{key:"setProjectionNearPlane",value:function(A){return this.artoolkit.setProjectionNearPlane(this.id,A)}},{key:"getProjectionNearPlane",value:function(){return this.artoolkit.getProjectionNearPlane(this.id)}},{key:"setProjectionFarPlane",value:function(A){return this.artoolkit.setProjectionFarPlane(this.id,A)}},{key:"getProjectionFarPlane",value:function(){return this.artoolkit.getProjectionFarPlane(this.id)}},{key:"setThresholdMode",value:function(A){return this.artoolkit.setThresholdMode(this.id,A)}},{key:"getThresholdMode",value:function(){return this.artoolkit.getThresholdMode(this.id)}},{key:"setThreshold",value:function(A){return this.artoolkit.setThreshold(this.id,A)}},{key:"getThreshold",value:function(){return this.artoolkit.getThreshold(this.id)}},{key:"setPatternDetectionMode",value:function(A){return this.artoolkit.setPatternDetectionMode(this.id,A)}},{key:"getPatternDetectionMode",value:function(){return this.artoolkit.getPatternDetectionMode(this.id)}},{key:"setMatrixCodeType",value:function(A){return this.artoolkit.setMatrixCodeType(this.id,A)}},{key:"getMatrixCodeType",value:function(){return this.artoolkit.getMatrixCodeType(this.id)}},{key:"setLabelingMode",value:function(A){return this.artoolkit.setLabelingMode(this.id,A)}},{key:"getLabelingMode",value:function(){return this.artoolkit.getLabelingMode(this.id)}},{key:"setPattRatio",value:function(A){return this.artoolkit.setPattRatio(this.id,A)}},{key:"getPattRatio",value:function(){return this.artoolkit.getPattRatio(this.id)}},{key:"setImageProcMode",value:function(A){return this.artoolkit.setImageProcMode(this.id,A)}},{key:"getImageProcMode",value:function(){return this.artoolkit.getImageProcMode(this.id)}},{key:"_initialize",value:(Q=I(o().mark((function A(){var I,g=this;return o().wrap((function(A){for(;;)switch(A.prev=A.next){case 0:return A.next=2,(new U).init();case 2:return this.artoolkit=A.sent,console.log("[ARController]","ARToolkit initialized"),A.next=6,this.artoolkit.loadCamera(this.cameraParam);case 6:return this.cameraId=A.sent,console.log("[ARController]","Camera params loaded with ID",this.cameraId),this.id=this.artoolkit.setup(this.width,this.height,this.cameraId),console.log("[ARController]","Got ID from setup",this.id),this._initNFT(),I=artoolkit.frameMalloc,this.framepointer=I.framepointer,this.framesize=I.framesize,this.videoLumaPointer=I.videoLumaPointer,this.dataHeap=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.framepointer,this.framesize),this.videoLuma=new Uint8Array(this.artoolkit.instance.HEAPU8.buffer,this.videoLumaPointer,this.framesize/4),this.camera_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.camera,16),this.marker_transform_mat=new Float64Array(this.artoolkit.instance.HEAPU8.buffer,I.transform,12),this.setProjectionNearPlane(.1),this.setProjectionFarPlane(1e3),setTimeout((function(){g.dispatchEvent({name:"load",target:g})}),1),A.abrupt("return",this);case 23:case"end":return A.stop()}}),A,this)}))),function(){return Q.apply(this,arguments)})},{key:"_initNFT",value:function(){this.artoolkit.setupAR2(this.id)}},{key:"_copyImageToHeap",value:function(A){var I;if(A||(A=this.image),A.data?I=A.data:(this.ctx.save(),"portrait"===this.orientation?this.ctx.drawImage(A,0,0,this.canvas.height,this.canvas.width):this.ctx.drawImage(A,0,0,this.canvas.width,this.canvas.height),this.ctx.restore(),I=this.ctx.getImageData(0,0,this.canvas.width,this.canvas.height).data),this.videoLuma)for(var g=0,B=0;B<this.videoSize;B++){var C=I[g+0],Q=I[g+1],E=I[g+2];this.videoLuma[B]=C+C+C+E+Q+Q+Q+Q>>3,g+=4}return!!this.dataHeap&&(this.dataHeap.set(I),!0)}}],[{key:"initWithDimensions",value:(B=I(o().mark((function I(g,B,C,Q){var E;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return E=new A(g,B,C,Q),I.next=3,E._initialize();case 3:return I.abrupt("return",I.sent);case 4:case"end":return I.stop()}}),I)}))),function(A,I,g,C){return B.apply(this,arguments)})},{key:"initWithImage",value:(g=I(o().mark((function I(g,B,C){var Q,E,i;return o().wrap((function(I){for(;;)switch(I.prev=I.next){case 0:return Q=g.videoWidth||g.width,E=g.videoHeight||g.height,I.next=4,A.initWithDimensions(Q,E,B,C);case 4:return(i=I.sent).image=g,I.abrupt("return",i);case 7:case"end":return I.stop()}}),I)}))),function(A,I,B){return g.apply(this,arguments)})}]),A}();const n={ARToolkit:U,ARController:M}})(),B.default})()}));

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareacontrols.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareacontrols.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");





const MarkersAreaControls = function(arToolkitContext, object3d, parameters){
	var _this = this
	_threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.call(this, object3d)

	if( arguments.length > 3 )	console.assert('wrong api for', MarkersAreaControls)

	// have a parameters in argument
	this.parameters = {
		// list of controls for each subMarker
		subMarkersControls: parameters.subMarkersControls,
		// list of pose for each subMarker relative to the origin
		subMarkerPoses: parameters.subMarkerPoses,
		// change matrix mode - [modelViewMatrix, cameraTransformMatrix]
		changeMatrixMode : parameters.changeMatrixMode !== undefined ? parameters.changeMatrixMode : 'modelViewMatrix',
	}
	
	this.object3d.visible = false
	// honor obsolete stuff - add a warning to use
	this.subMarkersControls = this.parameters.subMarkersControls
	this.subMarkerPoses = this.parameters.subMarkerPoses

	// listen to arToolkitContext event 'sourceProcessed'
	// - after we fully processed one image, aka when we know all detected poses in it
	arToolkitContext.addEventListener('sourceProcessed', function(){
		_this._onSourceProcessed()
	})
}

MarkersAreaControls.prototype = Object.create( _threex_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.prototype );
MarkersAreaControls.prototype.constructor = MarkersAreaControls;

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////


/**
 * What to do when a image source is fully processed
 */
MarkersAreaControls.prototype._onSourceProcessed = function(){
	var _this = this
	var stats = {
		count: 0,
		position : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
		},
		quaternion : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),
		},
		scale : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
		},
	}

	var firstQuaternion = _this.parameters.subMarkersControls[0].object3d.quaternion

	this.parameters.subMarkersControls.forEach(function(markerControls, markerIndex){
		
		var markerObject3d = markerControls.object3d
		// if this marker is not visible, ignore it
		if( markerObject3d.visible === false )	return

		// transformation matrix of this.object3d according to this sub-markers
		var matrix = markerObject3d.matrix.clone()
		var markerPose = _this.parameters.subMarkerPoses[markerIndex]
		matrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().getInverse(markerPose))

		// decompose the matrix into .position, .quaternion, .scale
		var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion()
		var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		matrix.decompose(position, quaternion, scale)

		// http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
		stats.count++

		MarkersAreaControls.averageVector3(stats.position.sum, position, stats.count, stats.position.average)
		MarkersAreaControls.averageQuaternion(stats.quaternion.sum, quaternion, firstQuaternion, stats.count, stats.quaternion.average)
		MarkersAreaControls.averageVector3(stats.scale.sum, scale, stats.count, stats.scale.average)
	})

	// honor _this.object3d.visible
	if( stats.count > 0 ){
		_this.object3d.visible = true
	}else{
		_this.object3d.visible = false			
	}

	// if at least one sub-marker has been detected, make the average of all detected markers
	if( stats.count > 0 ){
		// compute modelViewMatrix
		var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
		modelViewMatrix.compose(stats.position.average, stats.quaternion.average, stats.scale.average)

		// change _this.object3d.matrix based on parameters.changeMatrixMode
		if( this.parameters.changeMatrixMode === 'modelViewMatrix' ){
			_this.object3d.matrix.copy(modelViewMatrix)
		}else if( this.parameters.changeMatrixMode === 'cameraTransformMatrix' ){
			_this.object3d.matrix.getInverse( modelViewMatrix )
		}else {
			console.assert(false)
		}

		// decompose - the matrix into .position, .quaternion, .scale
		_this.object3d.matrix.decompose(_this.object3d.position, _this.object3d.quaternion, _this.object3d.scale)
	}

}

//////////////////////////////////////////////////////////////////////////////
//		Utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
 */
MarkersAreaControls.averageQuaternion = function(quaternionSum, newQuaternion, firstQuaternion, count, quaternionAverage){
	quaternionAverage = quaternionAverage || new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion()
	// sanity check
	console.assert(firstQuaternion instanceof three__WEBPACK_IMPORTED_MODULE_0__.Quaternion === true)
	
	// from http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
	if( newQuaternion.dot(firstQuaternion) > 0 ){
		newQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(-newQuaternion.x, -newQuaternion.y, -newQuaternion.z, -newQuaternion.w)
	}

	quaternionSum.x += newQuaternion.x
	quaternionSum.y += newQuaternion.y
	quaternionSum.z += newQuaternion.z
	quaternionSum.w += newQuaternion.w
	
	quaternionAverage.x = quaternionSum.x/count
	quaternionAverage.y = quaternionSum.y/count
	quaternionAverage.z = quaternionSum.z/count
	quaternionAverage.w = quaternionSum.w/count
	
	quaternionAverage.normalize()

	return quaternionAverage
}


MarkersAreaControls.averageVector3 = function(vector3Sum, vector3, count, vector3Average){
	vector3Average = vector3Average || new three__WEBPACK_IMPORTED_MODULE_0__.Vector3()
	
	vector3Sum.x += vector3.x
	vector3Sum.y += vector3.y
	vector3Sum.z += vector3.z
	
	vector3Average.x = vector3Sum.x / count
	vector3Average.y = vector3Sum.y / count
	vector3Average.z = vector3Sum.z / count
	
	return vector3Average
}

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * compute the center of this multimarker file
 */
MarkersAreaControls.computeCenter = function(jsonData){
	var multiMarkerFile = JSON.parse(jsonData)
	var stats = {
		count : 0,
		position : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),						
		},
		quaternion : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion(0,0,0,0),						
		},
		scale : {
			sum: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),
			average: new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0,0,0),						
		},
	}
	var firstQuaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion() // FIXME ???
	
	multiMarkerFile.subMarkersControls.forEach(function(item){
		var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix)
		
		var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion
		var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		poseMatrix.decompose(position, quaternion, scale)
		
		// http://wiki.unity3d.com/index.php/Averaging_Quaternions_and_Vectors
		stats.count++

		MarkersAreaControls.averageVector3(stats.position.sum, position, stats.count, stats.position.average)
		MarkersAreaControls.averageQuaternion(stats.quaternion.sum, quaternion, firstQuaternion, stats.count, stats.quaternion.average)
		MarkersAreaControls.averageVector3(stats.scale.sum, scale, stats.count, stats.scale.average)
	})
	
	var averageMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
	averageMatrix.compose(stats.position.average, stats.quaternion.average, stats.scale.average)

	return averageMatrix
}

MarkersAreaControls.computeBoundingBox = function(jsonData){
	var multiMarkerFile = JSON.parse(jsonData)
	var boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3()

	multiMarkerFile.subMarkersControls.forEach(function(item){
		var poseMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix)
		
		var position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		var quaternion = new three__WEBPACK_IMPORTED_MODULE_0__.Quaternion
		var scale = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3
		poseMatrix.decompose(position, quaternion, scale)

		boundingBox.expandByPoint(position)
	})

	return boundingBox
}
//////////////////////////////////////////////////////////////////////////////
//		updateSmoothedControls
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.prototype.updateSmoothedControls = function(smoothedControls, lerpsValues){
	// handle default values
	if( lerpsValues === undefined ){
		// FIXME this parameter format is uselessly cryptic
		// lerpValues = [
		// {lerpPosition: 0.5, lerpQuaternion: 0.2, lerpQuaternion: 0.7}
		// ]
		lerpsValues = [
			[0.3+.1, 0.1, 0.3],
			[0.4+.1, 0.1, 0.4],
			[0.4+.1, 0.2, 0.5],
			[0.5+.1, 0.2, 0.7],
			[0.5+.1, 0.2, 0.7],
		]
	}
	// count how many subMarkersControls are visible
	var nVisible = 0
	this.parameters.subMarkersControls.forEach(function(markerControls, markerIndex){
		var markerObject3d = markerControls.object3d
		if( markerObject3d.visible === true )	nVisible ++
	})

	// find the good lerpValues
	if( lerpsValues[nVisible-1] !== undefined ){
		var lerpValues = lerpsValues[nVisible-1]
	}else{
		var lerpValues = lerpsValues[lerpsValues.length-1]
	}

	// modify lerpValues in smoothedControls
	smoothedControls.parameters.lerpPosition = lerpValues[0]
	smoothedControls.parameters.lerpQuaternion = lerpValues[1]
	smoothedControls.parameters.lerpScale = lerpValues[2]
}


//////////////////////////////////////////////////////////////////////////////
//		Create ArMultiMarkerControls from JSON
//////////////////////////////////////////////////////////////////////////////

MarkersAreaControls.fromJSON = function(arToolkitContext, parent3D, markerRoot, jsonData, parameters){
	var multiMarkerFile = JSON.parse(jsonData)
	// declare variables
	var subMarkersControls = []
	var subMarkerPoses = []
	// handle default arguments
	parameters = parameters || {}

	// prepare the parameters
	multiMarkerFile.subMarkersControls.forEach(function(item){
		// create a markerRoot
		var markerRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D()
		parent3D.add(markerRoot)

		// create markerControls for our markerRoot
		var subMarkerControls = new _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_2__.default(arToolkitContext, markerRoot, item.parameters)

// if( true ){
		// store it in the parameters
		subMarkersControls.push(subMarkerControls)
		subMarkerPoses.push(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(item.poseMatrix))	
// }else{
// 		// build a smoothedControls
// 		var smoothedRoot = new THREE.Group()
// 		parent3D.add(smoothedRoot)
// 		var smoothedControls = new THREEx.ArSmoothedControls(smoothedRoot, {
// 			lerpPosition : 0.1,
// 			lerpQuaternion : 0.1, 
// 			lerpScale : 0.1,
// 			minVisibleDelay: 0,
// 			minUnvisibleDelay: 0,
// 		})
// 		onRenderFcts.push(function(delta){
// 			smoothedControls.update(markerRoot)	// TODO this is a global
// 		})
// 	
// 
// 		// store it in the parameters
// 		subMarkersControls.push(smoothedControls)
// 		subMarkerPoses.push(new THREE.Matrix4().fromArray(item.poseMatrix))
// }
	})
	
	parameters.subMarkersControls = subMarkersControls
	parameters.subMarkerPoses = subMarkerPoses
	// create a new ArMultiMarkerControls
	var multiMarkerControls = new _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_3__.default(arToolkitContext, markerRoot, parameters)

	// return it
	return multiMarkerControls	
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaControls);

/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersarealearning.js":
/*!***************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersarealearning.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");


const MarkersAreaLearning = function(arToolkitContext, subMarkersControls){
	var _this = this
	this._arToolkitContext = arToolkitContext

	// Init variables
	this.subMarkersControls = subMarkersControls
	this.enabled = true
		
	// listen to arToolkitContext event 'sourceProcessed'
	// - after we fully processed one image, aka when we know all detected poses in it
	arToolkitContext.addEventListener('sourceProcessed', function(){
		_this._onSourceProcessed()
	})
}

//////////////////////////////////////////////////////////////////////////////
//		statistic collection
//////////////////////////////////////////////////////////////////////////////

/**
 * What to do when a image source is fully processed
 */
MarkersAreaLearning.prototype._onSourceProcessed = function(){
	var originQuaternion = this.subMarkersControls[0].object3d.quaternion
	// here collect the statistic on relative positioning 
	
	// honor this.enabled
	if( this.enabled === false )	return

	// keep only the visible markers
	var visibleMarkerControls = this.subMarkersControls.filter(function(markerControls){
		return markerControls.object3d.visible === true
	})

	var count = Object.keys(visibleMarkerControls).length

	var positionDelta = new THREE.Vector3()
	var quaternionDelta = new THREE.Quaternion()
	var scaleDelta = new THREE.Vector3()
	var tmpMatrix = new THREE.Matrix4()
	
	// go thru all the visibleMarkerControls
	for(var i = 0; i < count; i++){
		var markerControls1 = visibleMarkerControls[i]
		for(var j = 0; j < count; j++){
			var markerControls2 = visibleMarkerControls[j]

			// if markerControls1 is markerControls2, then skip it
			if( i === j )	continue


			//////////////////////////////////////////////////////////////////////////////
			//		create data in markerControls1.object3d.userData if needed
			//////////////////////////////////////////////////////////////////////////////
			// create seenCouples for markerControls1 if needed
			if( markerControls1.object3d.userData.seenCouples === undefined ){
				markerControls1.object3d.userData.seenCouples = {}
			}
			var seenCouples = markerControls1.object3d.userData.seenCouples
			// create the multiMarkerPosition average if needed`
			if( seenCouples[markerControls2.id] === undefined ){
				// console.log('create seenCouples between', markerControls1.id, 'and', markerControls2.id)
				seenCouples[markerControls2.id] = {
					count : 0,
					position : {
						sum: new THREE.Vector3(0,0,0),
						average: new THREE.Vector3(0,0,0),						
					},
					quaternion : {
						sum: new THREE.Quaternion(0,0,0,0),
						average: new THREE.Quaternion(0,0,0,0),						
					},
					scale : {
						sum: new THREE.Vector3(0,0,0),
						average: new THREE.Vector3(0,0,0),						
					},
				}
			}

			
			//////////////////////////////////////////////////////////////////////////////
			//		Compute markerControls2 position relative to markerControls1
			//////////////////////////////////////////////////////////////////////////////
			
			// compute markerControls2 position/quaternion/scale in relation with markerControls1
			tmpMatrix.getInverse(markerControls1.object3d.matrix)
			tmpMatrix.multiply(markerControls2.object3d.matrix)
			tmpMatrix.decompose(positionDelta, quaternionDelta, scaleDelta)
			
			//////////////////////////////////////////////////////////////////////////////
			//		update statistics
			//////////////////////////////////////////////////////////////////////////////
			var stats = seenCouples[markerControls2.id]
			// update the count
			stats.count++

			// update the average of position/rotation/scale
			_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__.default.averageVector3(stats.position.sum, positionDelta, stats.count, stats.position.average)
			_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__.default.averageQuaternion(stats.quaternion.sum, quaternionDelta, originQuaternion, stats.count, stats.quaternion.average)
			_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_0__.default.averageVector3(stats.scale.sum, scaleDelta, stats.count, stats.scale.average)
		}
	}
}

//////////////////////////////////////////////////////////////////////////////
//		Compute markers transformation matrix from current stats
//////////////////////////////////////////////////////////////////////////////

MarkersAreaLearning.prototype.computeResult = function(){
	var _this = this
	var originSubControls = this.subMarkersControls[0]

	this.deleteResult()

	// special case of originSubControls averageMatrix
	originSubControls.object3d.userData.result = {
		averageMatrix : new THREE.Matrix4(),
		confidenceFactor: 1,
	}
	// TODO here check if the originSubControls has been seen at least once!!
	
	
	/**
	 * ALGO in pseudo code
	 *
	 * - Set confidenceFactor of origin sub markers as 1
	 *
	 * Start Looping
	 * - For a given sub marker, skip it if it already has a result.
	 * - if no result, check all seen couple and find n ones which has a progress of 1 or more.
	 * - So the other seen sub markers, got a valid transformation matrix. 
	 * - So take local averages position/orientation/scale, compose a transformation matrix. 
	 *   - aka transformation matrix from parent matrix * transf matrix pos/orientation/scale
	 * - Multiple it by the other seen marker matrix. 
	 * - Loop on the array until one pass could not compute any new sub marker
	 */
	
	do{
		var resultChanged = false
		// loop over each subMarkerControls
		this.subMarkersControls.forEach(function(subMarkerControls){

			// if subMarkerControls already has a result, do nothing
			var result = subMarkerControls.object3d.userData.result
			var isLearned = (result !== undefined && result.confidenceFactor >= 1) ? true : false
			if( isLearned === true )	return
			
			// console.log('compute subMarkerControls', subMarkerControls.name())
			var otherSubControlsID = _this._getLearnedCoupleStats(subMarkerControls)
			if( otherSubControlsID === null ){
				// console.log('no learnedCoupleStats')
				return
			}
			
			var otherSubControls = _this._getSubMarkerControlsByID(otherSubControlsID)

			var seenCoupleStats = subMarkerControls.object3d.userData.seenCouples[otherSubControlsID]
			
			var averageMatrix = new THREE.Matrix4()
			averageMatrix.compose(seenCoupleStats.position.average, seenCoupleStats.quaternion.average, seenCoupleStats.scale.average)
				
			var otherAverageMatrix = otherSubControls.object3d.userData.result.averageMatrix

			var matrix = new THREE.Matrix4().getInverse(otherAverageMatrix).multiply(averageMatrix)
			matrix = new THREE.Matrix4().getInverse(matrix)

			console.assert( subMarkerControls.object3d.userData.result === undefined )
			subMarkerControls.object3d.userData.result = {
				averageMatrix: matrix,
				confidenceFactor: 1
			}
			
			resultChanged = true
		})
		// console.log('loop')
	}while(resultChanged === true)
	
	// debugger
	// console.log('json:', this.toJSON())
	// this.subMarkersControls.forEach(function(subMarkerControls){
	// 	var hasResult = subMarkerControls.object3d.userData.result !== undefined
	// 	console.log('marker', subMarkerControls.name(), hasResult ? 'has' : 'has NO', 'result')
	// })
}

//////////////////////////////////////////////////////////////////////////////
//		Utility function
//////////////////////////////////////////////////////////////////////////////

/** 
 * get a _this.subMarkersControls id based on markerControls.id
 */
MarkersAreaLearning.prototype._getLearnedCoupleStats	= function(subMarkerControls){

	// if this subMarkerControls has never been seen with another subMarkerControls
	if( subMarkerControls.object3d.userData.seenCouples === undefined )	return null
	
	var seenCouples = subMarkerControls.object3d.userData.seenCouples
	var coupleControlsIDs = Object.keys(seenCouples).map(Number)

	for(var i = 0; i < coupleControlsIDs.length; i++){
		var otherSubControlsID = coupleControlsIDs[i]
		// get otherSubControls
		var otherSubControls = this._getSubMarkerControlsByID(otherSubControlsID)
			
		// if otherSubControls isnt learned, skip it
		var result = otherSubControls.object3d.userData.result
		var isLearned = (result !== undefined && result.confidenceFactor >= 1) ? true : false
		if( isLearned === false )	continue

		// return this seenCouplesStats
		return otherSubControlsID
	}
	
	// if none is found, return null
	return null
}

/** 
 * get a _this.subMarkersControls based on markerControls.id
 */
MarkersAreaLearning.prototype._getSubMarkerControlsByID	= function(controlsID){

	for(var i = 0; i < this.subMarkersControls.length; i++){
		var subMarkerControls = this.subMarkersControls[i]
		if( subMarkerControls.id === controlsID ){
			return subMarkerControls
		}
	}

	return null
}
 //////////////////////////////////////////////////////////////////////////////
//		JSON file building
//////////////////////////////////////////////////////////////////////////////

MarkersAreaLearning.prototype.toJSON = function(){

	// compute the average matrix before generating the file
	this.computeResult()

	//////////////////////////////////////////////////////////////////////////////
	//		actually build the json
	//////////////////////////////////////////////////////////////////////////////
	var data = {
		meta : {
			createdBy : "Area Learning - AR.js "+THREEx.ArToolkitContext.REVISION, // TODO: ArToolkitContext depending on build
			createdAt : new Date().toJSON(),
			
		},
		trackingBackend: this._arToolkitContext.parameters.trackingBackend,
		subMarkersControls : [],
	}

	var originSubControls = this.subMarkersControls[0]
	var originMatrixInverse = new THREE.Matrix4().getInverse(originSubControls.object3d.matrix)
	this.subMarkersControls.forEach(function(subMarkerControls, index){
		
		// if a subMarkerControls has no result, ignore it
		if( subMarkerControls.object3d.userData.result === undefined )	return

		var poseMatrix = subMarkerControls.object3d.userData.result.averageMatrix
		console.assert(poseMatrix instanceof THREE.Matrix4)
		

		// build the info
		var info = {
			parameters : {
				// to fill ...
			},
			poseMatrix : poseMatrix.toArray(),
		}
		if( subMarkerControls.parameters.type === 'pattern' ){
			info.parameters.type = subMarkerControls.parameters.type
			info.parameters.patternUrl = subMarkerControls.parameters.patternUrl
		}else if( subMarkerControls.parameters.type === 'barcode' ){
			info.parameters.type = subMarkerControls.parameters.type
			info.parameters.barcodeValue = subMarkerControls.parameters.barcodeValue
		}else console.assert(false)

		data.subMarkersControls.push(info)
	})

	var strJSON = JSON.stringify(data, null, '\t');
	
	
	//////////////////////////////////////////////////////////////////////////////
	//		round matrix elements to ease readability - for debug
	//////////////////////////////////////////////////////////////////////////////
	var humanReadable = false
	if( humanReadable === true ){
		var tmp = JSON.parse(strJSON)
		tmp.subMarkersControls.forEach(function(markerControls){
			markerControls.poseMatrix = markerControls.poseMatrix.map(function(value){
				var roundingFactor = 100
				return Math.round(value*roundingFactor)/roundingFactor
			})
		})
		strJSON = JSON.stringify(tmp, null, '\t');
	}
	
	return strJSON;	
}

//////////////////////////////////////////////////////////////////////////////
//		utility function
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all collected statistics
 */
MarkersAreaLearning.prototype.resetStats = function(){
	this.deleteResult()
	
	this.subMarkersControls.forEach(function(markerControls){
		delete markerControls.object3d.userData.seenCouples
	})
}
/**
 * reset all collected statistics
 */
MarkersAreaLearning.prototype.deleteResult = function(){
	this.subMarkersControls.forEach(function(markerControls){
		delete markerControls.object3d.userData.result
	})
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaLearning);


/***/ }),

/***/ "./three.js/src/markers-area/arjs-markersareautils.js":
/*!************************************************************!*\
  !*** ./three.js/src/markers-area/arjs-markersareautils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../threex/arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

const MarkersAreaUtils = {};

//////////////////////////////////////////////////////////////////////////////
//		navigateToLearnerPage
//////////////////////////////////////////////////////////////////////////////

/**
 * Navigate to the multi-marker learner page
 *
 * @param {String} learnerBaseURL  - the base url for the learner
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.navigateToLearnerPage = function(learnerBaseURL, trackingBackend){
	var learnerParameters = {
		backURL : location.href,
		trackingBackend: trackingBackend,
		markersControlsParameters: MarkersAreaUtils.createDefaultMarkersControlsParameters(trackingBackend),
	}
	location.href = learnerBaseURL + '?' + encodeURIComponent(JSON.stringify(learnerParameters))
}

//////////////////////////////////////////////////////////////////////////////
//		DefaultMultiMarkerFile
//////////////////////////////////////////////////////////////////////////////

/**
 * Create and store a default multi-marker file
 *
 * @param {String} trackingBackend - the tracking backend to use
 */
MarkersAreaUtils.storeDefaultMultiMarkerFile = function(trackingBackend){
	var file = MarkersAreaUtils.createDefaultMultiMarkerFile(trackingBackend)
	// json.strinfy the value and store it in localStorage
	localStorage.setItem('ARjsMultiMarkerFile', JSON.stringify(file))
}



/**
 * Create a default multi-marker file
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object of the multi-marker file
 */
MarkersAreaUtils.createDefaultMultiMarkerFile = function(trackingBackend){
	console.assert(trackingBackend)
	if( trackingBackend === undefined )	debugger

	// create absoluteBaseURL
	var link = document.createElement('a')
	link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL
	var absoluteBaseURL = link.href

	// create the base file
	var file = {
		meta : {
			createdBy : 'AR.js ' + _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.REVISION + ' - Default Marker',
			createdAt : new Date().toJSON(),
		},
		trackingBackend : trackingBackend,
		subMarkersControls : [
			// empty for now... being filled
		]
	}
	// add a subMarkersControls
	file.subMarkersControls[0] = {
		parameters: {},
		poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(0,0, 0).toArray(),
	}
	if( trackingBackend === 'artoolkit' ){
		file.subMarkersControls[0].parameters.type = 'pattern'
		file.subMarkersControls[0].parameters.patternUrl = absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-hiro.patt'
	}else console.assert(false)

	// json.strinfy the value and store it in localStorage
	return file
}

//////////////////////////////////////////////////////////////////////////////
//		createDefaultMarkersControlsParameters
//////////////////////////////////////////////////////////////////////////////

/**
 * Create a default controls parameters for the multi-marker learner
 *
 * @param {String} trackingBackend - the tracking backend to use
 * @return {Object} - json object containing the controls parameters
 */
MarkersAreaUtils.createDefaultMarkersControlsParameters = function(trackingBackend){
	// create absoluteBaseURL
	var link = document.createElement('a')
	link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL
	var absoluteBaseURL = link.href


	if( trackingBackend === 'artoolkit' ){
		// pattern hiro/kanji/a/b/c/f
		var markersControlsParameters = [
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-hiro.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-kanji.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterA.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterB.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterC.patt',
			},
			{
				type : 'pattern',
				patternUrl : absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterF.patt',
			},
		]
	}else console.assert(false)
	return markersControlsParameters
}


//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
/**
 * generate areaFile
 */
MarkersAreaUtils.storeMarkersAreaFileFromResolution = function (trackingBackend, resolutionW, resolutionH) {
	// generate areaFile
	var areaFile = this.buildMarkersAreaFileFromResolution(trackingBackend, resolutionW, resolutionH)
	// store areaFile in localStorage
	localStorage.setItem('ARjsMultiMarkerFile', JSON.stringify(areaFile))
}


//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

MarkersAreaUtils.buildMarkersAreaFileFromResolution = function(trackingBackend, resolutionW, resolutionH){
	// create the base file
	var file = {
		meta : {
			createdBy : 'AR.js - Augmented Website',
			createdAt : new Date().toJSON(),
		},
		trackingBackend : trackingBackend,
		subMarkersControls : [
			// empty for now...
		]
	}

	var whiteMargin = 0.1
	if( resolutionW > resolutionH ){
		var markerImageSize = 0.4 * resolutionH
	}else if( resolutionW < resolutionH ){
		var markerImageSize = 0.4 * resolutionW
	}else if( resolutionW === resolutionH ){
		// specific for twitter player - https://dev.twitter.com/cards/types/player
		var markerImageSize = 0.33 * resolutionW
	}else console.assert(false)

	// console.warn('using new markerImageSize computation')
	var actualMarkerSize = markerImageSize * (1 - 2*whiteMargin)

	var deltaX = (resolutionW - markerImageSize)/2 / actualMarkerSize
	var deltaZ = (resolutionH - markerImageSize)/2 / actualMarkerSize

	var subMarkerControls = buildSubMarkerControls('center', 0, 0)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('topleft', -deltaX, -deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('topright', +deltaX, -deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('bottomleft', -deltaX, +deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	var subMarkerControls = buildSubMarkerControls('bottomright', +deltaX, +deltaZ)
	file.subMarkersControls.push(subMarkerControls)

	return file

	//////////////////////////////////////////////////////////////////////////////
	//		Code Separator
	//////////////////////////////////////////////////////////////////////////////

	function buildSubMarkerControls(layout, positionX, positionZ){
		console.log('buildSubMarkerControls', layout, positionX, positionZ)
		// create subMarkersControls
		var subMarkersControls = {
			parameters: {},
			poseMatrix: new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeTranslation(positionX,0, positionZ).toArray(),
		}
		// fill the parameters
		if( trackingBackend === 'artoolkit' ){
			layout2MarkerParametersArtoolkit(subMarkersControls.parameters, layout)
		}else console.assert(false)
		// return subMarkersControls
		return subMarkersControls
	}

	function layout2MarkerParametersArtoolkit(parameters, layout){
		// create absoluteBaseURL
		var link = document.createElement('a')
		link.href = _threex_arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL
		var absoluteBaseURL = link.href

		var layout2PatternUrl = {
			'center' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-hiro.patt'),
			'topleft' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterA.patt'),
			'topright' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterB.patt'),
			'bottomleft' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterC.patt'),
			'bottomright' : convertRelativeUrlToAbsolute(absoluteBaseURL + 'examples/marker-training/examples/pattern-files/pattern-letterF.patt'),
		}
		console.assert(layout2PatternUrl[layout] !== undefined )
		parameters.type = 'pattern'
		parameters.patternUrl = layout2PatternUrl[layout]
		return
		function convertRelativeUrlToAbsolute(relativeUrl){
			var tmpLink = document.createElement('a');
			tmpLink.href = relativeUrl
			return tmpLink.href
		}
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkersAreaUtils);


/***/ }),

/***/ "./three.js/src/new-api/arjs-utils.js":
/*!********************************************!*\
  !*** ./three.js/src/new-api/arjs-utils.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const Utils = {};

/**
 * Create a default rendering camera for this trackingBackend. They may be modified later. to fit physical camera parameters
 *
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Utils.createDefaultCamera = function (trackingMethod) {
    var trackingBackend = this.parseTrackingMethod(trackingMethod).trackingBackend
    // Create a camera
    if (trackingBackend === 'artoolkit') {
        var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
    } else console.assert(false, 'unknown trackingBackend: ' + trackingBackend)

    return camera
}

/**
 * parse tracking method
 *
 * @param {String} trackingMethod - the tracking method to parse
 * @return {Object} - various field of the tracking method
 */
Utils.parseTrackingMethod = function (trackingMethod) {

    if (trackingMethod === 'best') {
        trackingMethod = 'area-artoolkit';
    }

    if (trackingMethod.startsWith('area-')) {
        return {
            trackingBackend: trackingMethod.replace('area-', ''),
            markersAreaEnabled: true,
        }
    } else {
        return {
            trackingBackend: trackingMethod,
            markersAreaEnabled: false,
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Utils);


/***/ }),

/***/ "./three.js/src/threex/arjs-context.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-context.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! threexArmarkercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);

 // Alias for dynamic importing
 // TODO comment explanation
const { ARToolkit, ARController } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());
const artoolkit = new ARToolkit();

const Context = function (parameters) {
    var _this = this

    _this._updatedAt = null

    // handle default parameters
    this.parameters = {
        // AR backend - ['artoolkit']
        trackingBackend: 'artoolkit',
        // debug - true if one should display artoolkit debug canvas, false otherwise
        debug: false,
        // the mode of detection - ['color', 'color_and_matrix', 'mono', 'mono_and_matrix']
        detectionMode: 'mono',
        // type of matrix code - valid iif detectionMode end with 'matrix' - [3x3, 3x3_HAMMING63, 3x3_PARITY65, 4x4, 4x4_BCH_13_9_3, 4x4_BCH_13_5_5]
        matrixCodeType: '3x3',

        // url of the camera parameters
        cameraParametersUrl: Context.baseURL + '../data/data/camera_para.dat',

        // tune the maximum rate of pose detection in the source image
        maxDetectionRate: 60,
        // resolution of at which we detect pose in the source image
        canvasWidth: 640,
        canvasHeight: 480,

        // the patternRatio inside the artoolkit marker - artoolkit only
        patternRatio: 0.5,

        // enable image smoothing or not for canvas copy - default to true
        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled
        imageSmoothingEnabled: false,
    }
    // parameters sanity check
    console.assert(['artoolkit'].indexOf(this.parameters.trackingBackend) !== -1, 'invalid parameter trackingBackend', this.parameters.trackingBackend)
    console.assert(['color', 'color_and_matrix', 'mono', 'mono_and_matrix'].indexOf(this.parameters.detectionMode) !== -1, 'invalid parameter detectionMode', this.parameters.detectionMode)

    this.arController = null;

    _this.initialized = false


    this._arMarkersControls = []

    //////////////////////////////////////////////////////////////////////////////
    //		setParameters
    //////////////////////////////////////////////////////////////////////////////
    setParameters(parameters)
    function setParameters(parameters) {
        if (parameters === undefined) return
        for (var key in parameters) {
            var newValue = parameters[key]

            if (newValue === undefined) {
                console.warn("Context: '" + key + "' parameter is undefined.")
                continue
            }

            var currentValue = _this.parameters[key]

            if (currentValue === undefined) {
                console.warn("Context: '" + key + "' is not a property of this material.")
                continue
            }

            _this.parameters[key] = newValue
        }
    }
}

Context.prototype.dispatchEvent = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.dispatchEvent;
Context.prototype.addEventListener = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.addEventListener;
Context.prototype.hasEventListener = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.hasEventListener;
Context.prototype.removeEventListener = three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype.removeEventListener;

// default to github page
Context.baseURL = 'https://ar-js-org.github.io/AR.js/three.js/'
Context.REVISION = '3.3.3-es6-beta-01'
/**
 * Create a default camera for this trackingBackend
 * @param {string} trackingBackend - the tracking to user
 * @return {THREE.Camera} the created camera
 */
Context.createDefaultCamera = function (trackingBackend) {
    console.assert(false, 'use ARjs.Utils.createDefaultCamera instead')
    // Create a camera
    if (trackingBackend === 'artoolkit') {
        var camera = new three__WEBPACK_IMPORTED_MODULE_0__.Camera();
    } else console.assert(false);
    return camera
}


//////////////////////////////////////////////////////////////////////////////
//		init functions
//////////////////////////////////////////////////////////////////////////////
Context.prototype.init = function (onCompleted) {
    var _this = this
    if (this.parameters.trackingBackend === 'artoolkit') {
        this._initArtoolkit(done);
    } else console.assert(false);
    return

    function done() {
        // dispatch event
        _this.dispatchEvent({
            type: 'initialized'
        });

        _this.initialized = true

        onCompleted && onCompleted()
    }

}
////////////////////////////////////////////////////////////////////////////////
//          update function
////////////////////////////////////////////////////////////////////////////////
Context.prototype.update = function (srcElement) {

    // be sure arController is fully initialized
    if (this.parameters.trackingBackend === 'artoolkit' && this.arController === null) return false;

    // honor this.parameters.maxDetectionRate
    var present = performance.now()
    if (this._updatedAt !== null && present - this._updatedAt < 1000 / this.parameters.maxDetectionRate) {
        return false
    }
    this._updatedAt = present

    var prevVisibleMarkers = []

    // mark all markers to invisible before processing this frame
    this._arMarkersControls.forEach(function (markerControls) {
        if (markerControls.object3d.visible) {
            prevVisibleMarkers.push(markerControls)
        }
        markerControls.object3d.visible = false
    })

    // process this frame
    if (this.parameters.trackingBackend === 'artoolkit') {
        this._updateArtoolkit(srcElement);
    }  else {
        console.assert(false);
    }

    // dispatch event
    this.dispatchEvent({
        type: 'sourceProcessed'
    });

    // After frame is processed, check visibility of each marker to determine if it was found or lost
    this._arMarkersControls.forEach(function (markerControls) {
        var wasVisible = prevVisibleMarkers.includes(markerControls);
        var isVisible = markerControls.object3d.visible;
    
        if (isVisible === true && wasVisible === false) {
            window.dispatchEvent(new CustomEvent('markerFound', {
                detail: markerControls,
            }))
        } else if (isVisible === false && wasVisible === true) {
            window.dispatchEvent(new CustomEvent('markerLost', {
                detail: markerControls,
            }))
        }
    })


    // return true as we processed the frame
    return true;
}

////////////////////////////////////////////////////////////////////////////////
//          Add/Remove markerControls
////////////////////////////////////////////////////////////////////////////////
Context.prototype.addMarker = function (arMarkerControls) {
    console.assert(arMarkerControls instanceof threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__.default)
    this._arMarkersControls.push(arMarkerControls)
}

Context.prototype.removeMarker = function (arMarkerControls) {
    console.assert(arMarkerControls instanceof threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__.default)
    var index = this._arMarkersControls.indexOf(arMarkerControls);
    if( index < 0 ) {
    	return;
    }
    this._arMarkersControls.splice(index, 1)
}

//////////////////////////////////////////////////////////////////////////////
//		artoolkit specific
//////////////////////////////////////////////////////////////////////////////
Context.prototype._initArtoolkit = function (onCompleted) {
    var _this = this

    // set this._artoolkitProjectionAxisTransformMatrix to change artoolkit projection matrix axis to match usual webgl one
    this._artoolkitProjectionAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4()
    this._artoolkitProjectionAxisTransformMatrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationY(Math.PI))
    this._artoolkitProjectionAxisTransformMatrix.multiply(new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationZ(Math.PI))

    // init ARToolkit
    artoolkit.init().then(_ => {
        // init controller
        ARController.initWithDimensions(_this.parameters.canvasWidth, _this.parameters.canvasHeight, _this.parameters.cameraParametersUrl).then((arController) => {
            _this.arController = arController

            // honor this.parameters.imageSmoothingEnabled
            arController.ctx.mozImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;
            arController.ctx.webkitImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;
            arController.ctx.msImageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;
            arController.ctx.imageSmoothingEnabled = _this.parameters.imageSmoothingEnabled;

            // honor this.parameters.debug
            if (_this.parameters.debug === true) {
                arController.debugSetup();
                arController.canvas.style.position = 'absolute'
                arController.canvas.style.top = '0px'
                arController.canvas.style.opacity = '0.6'
                arController.canvas.style.pointerEvents = 'none'
                arController.canvas.style.zIndex = '-1'
            }

            // setPatternDetectionMode
            var detectionModes = {
                'color': artoolkit.AR_TEMPLATE_MATCHING_COLOR,
                'color_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_COLOR_AND_MATRIX,
                'mono': artoolkit.AR_TEMPLATE_MATCHING_MONO,
                'mono_and_matrix': artoolkit.AR_TEMPLATE_MATCHING_MONO_AND_MATRIX,
            }
            var detectionMode = detectionModes[_this.parameters.detectionMode]
            console.assert(detectionMode !== undefined)
            arController.setPatternDetectionMode(detectionMode);

            // setMatrixCodeType
            var matrixCodeTypes = {
                '3x3': artoolkit.AR_MATRIX_CODE_3x3,
                '3x3_HAMMING63': artoolkit.AR_MATRIX_CODE_3x3_HAMMING63,
                '3x3_PARITY65': artoolkit.AR_MATRIX_CODE_3x3_PARITY65,
                '4x4': artoolkit.AR_MATRIX_CODE_4x4,
                '4x4_BCH_13_9_3': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_9_3,
                '4x4_BCH_13_5_5': artoolkit.AR_MATRIX_CODE_4x4_BCH_13_5_5,
            }
            var matrixCodeType = matrixCodeTypes[_this.parameters.matrixCodeType]
            console.assert(matrixCodeType !== undefined)
            arController.setMatrixCodeType(matrixCodeType);

            // set the patternRatio for artoolkit
            arController.setPattRatio(_this.parameters.patternRatio);

            // set thresholding in artoolkit
            // this seems to be the default
            // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_MANUAL)
            // adatative consume a LOT of cpu...
            // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE)
            // arController.setThresholdMode(artoolkit.AR_LABELING_THRESH_MODE_AUTO_OTSU)

            // notify
            onCompleted()
        });
    });
    return this
}

/**
 * return the projection matrix
 */
Context.prototype.getProjectionMatrix = function (srcElement) {


    // FIXME rename this function to say it is artoolkit specific - getArtoolkitProjectMatrix
    // keep a backward compatibility with a console.warn

    console.assert(this.parameters.trackingBackend === 'artoolkit')
    console.assert(this.arController, 'arController MUST be initialized to call this function')
    // get projectionMatrixArr from artoolkit
    var projectionMatrixArr = this.arController.getCameraMatrix();
    var projectionMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(projectionMatrixArr)

    // return the result
    return projectionMatrix
}

Context.prototype._updateArtoolkit = function (srcElement) {
    this.arController.process(srcElement)
}

//////////////////////////////////////////////////////////////////////////////
//		dispose function
//////////////////////////////////////////////////////////////////////////////
Context.prototype.dispose = function () {
	this.initialized = false;

	// markers
	this._arMarkersControls.forEach(function (markerControls) {
		console.assert(markerControls instanceof threexArmarkercontrols__WEBPACK_IMPORTED_MODULE_1__.default);
		markerControls.dispose();
	} );
	this._arMarkersControls = [];

	// cameraParam
	if (this.arController && this.arController.cameraParam && this.arController.cameraParam.dispose) {
		this.arController.cameraParam.dispose();
	}

	
	// ARController
	if( this.arController && this.arController.dispose ) {
		this.arController.dispose();
	}
	this.arController = null;

    // class properties
    this._artoolkitProjectionAxisTransformMatrix = null;

	// artoolkit
	// NOTE: since the instance of ARToolkit is created globally 
	// we should probably do not call .teardown() ... ?
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Context);

/***/ }),

/***/ "./three.js/src/threex/arjs-markercontrols.js":
/*!****************************************************!*\
  !*** ./three.js/src/threex/arjs-markercontrols.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jsartoolkit */ "./node_modules/@ar-js-org/artoolkit5-js/dist/ARToolkit.js");
/* harmony import */ var jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jsartoolkit__WEBPACK_IMPORTED_MODULE_2__);


 // TODO comment explanation
const { ARToolkit } = (jsartoolkit__WEBPACK_IMPORTED_MODULE_2___default());

const MarkerControls = function(context, object3d, parameters){
	var _this = this

	_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.call(this, object3d)

	this.context = context
	// handle default parameters
	this.parameters = {
		// size of the marker in meter
		size : 1,
		// type of marker - ['pattern', 'barcode', 'unknown' ]
		type : 'unknown',
		// url of the pattern - IIF type='pattern'
		patternUrl : null,
		// value of the barcode - IIF type='barcode'
		barcodeValue : null,
		// change matrix mode - [modelViewMatrix, cameraTransformMatrix]
		changeMatrixMode : 'modelViewMatrix',
		// minimal confidence in the marke recognition - between [0, 1] - default to 1
		minConfidence: 0.6,
		// turn on/off camera smoothing
		smooth: false,
		// number of matrices to smooth tracking over, more = smoother but slower follow
		smoothCount: 5,
		// distance tolerance for smoothing, if smoothThreshold # of matrices are under tolerance, tracking will stay still
		smoothTolerance: 0.01,
		// threshold for smoothing, will keep still unless enough matrices are over tolerance
		smoothThreshold: 2,
	}

	// sanity check
	var possibleValues = ['pattern', 'barcode', 'unknown']
	console.assert(possibleValues.indexOf(this.parameters.type) !== -1, 'illegal value', this.parameters.type)
	var possibleValues = ['modelViewMatrix', 'cameraTransformMatrix' ]
	console.assert(possibleValues.indexOf(this.parameters.changeMatrixMode) !== -1, 'illegal value', this.parameters.changeMatrixMode)


        // create the marker Root
	this.object3d = object3d
	this.object3d.matrixAutoUpdate = false;
	this.object3d.visible = false

	//////////////////////////////////////////////////////////////////////////////
	//		setParameters
	//////////////////////////////////////////////////////////////////////////////
	setParameters(parameters)
	function setParameters(parameters){
		if( parameters === undefined )	return
		for( var key in parameters ){
			var newValue = parameters[ key ]

			if( newValue === undefined ){
				console.warn( "ArMarkerControls: '" + key + "' parameter is undefined." )
				continue
			}

			var currentValue = _this.parameters[ key ]

			if( currentValue === undefined ){
				console.warn( "ArMarkerControls: '" + key + "' is not a property of this material." )
				continue
			}

			_this.parameters[ key ] = newValue
		}
	}

	if (this.parameters.smooth) {
		this.smoothMatrices = []; // last DEBOUNCE_COUNT modelViewMatrix
	}

	//////////////////////////////////////////////////////////////////////////////
	//		Code Separator
	//////////////////////////////////////////////////////////////////////////////
	// add this marker to artoolkitsystem
	// TODO rename that .addMarkerControls
	context.addMarker(this)

	if( _this.context.parameters.trackingBackend === 'artoolkit' ){
		this._initArtoolkit()
	}else console.assert(false)
}

MarkerControls.prototype = Object.create( _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_1__.default.prototype );
MarkerControls.prototype.constructor = MarkerControls;


//////////////////////////////////////////////////////////////////////////////
//		dispose instance
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype.dispose = function(){
	if( this.context && this.context.arController ) {
		this.context.arController.removeEventListener('getMarker', this.onGetMarker);
	}

	this.context.removeMarker(this);
	
	this.object3d = null;
	this.smoothMatrices = [];
}

//////////////////////////////////////////////////////////////////////////////
//		update controls with new modelViewMatrix
//////////////////////////////////////////////////////////////////////////////

/**
 * When you actually got a new modelViewMatrix, you need to perfom a whole bunch
 * of things. it is done here.
 */
MarkerControls.prototype.updateWithModelViewMatrix = function(modelViewMatrix){
	var markerObject3D = this.object3d;

	// mark object as visible
	markerObject3D.visible = true

	if( this.context.parameters.trackingBackend === 'artoolkit' ){
		// apply context._axisTransformMatrix - change artoolkit axis to match usual webgl one
		var tmpMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().copy(this.context._artoolkitProjectionAxisTransformMatrix)
		tmpMatrix.multiply(modelViewMatrix)

		modelViewMatrix.copy(tmpMatrix)
	}else console.assert(false)

	// change axis orientation on marker - artoolkit say Z is normal to the marker - ar.js say Y is normal to the marker
	var markerAxisTransformMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().makeRotationX(Math.PI/2)
	modelViewMatrix.multiply(markerAxisTransformMatrix)

	var renderReqd = false;

	// change markerObject3D.matrix based on parameters.changeMatrixMode
	if( this.parameters.changeMatrixMode === 'modelViewMatrix' ){
		if (this.parameters.smooth) {
			var sum,
					i, j,
					averages, // average values for matrix over last smoothCount
					exceedsAverageTolerance = 0;

			this.smoothMatrices.push(modelViewMatrix.elements.slice()); // add latest

			if (this.smoothMatrices.length < (this.parameters.smoothCount + 1)) {
				markerObject3D.matrix.copy(modelViewMatrix); // not enough for average
			} else {
				this.smoothMatrices.shift(); // remove oldest entry
				averages = [];

				for (i in modelViewMatrix.elements) { // loop over entries in matrix
					sum = 0;
					for (j in this.smoothMatrices) { // calculate average for this entry
						sum += this.smoothMatrices[j][i];
					}
					averages[i] = sum / this.parameters.smoothCount;
					// check how many elements vary from the average by at least AVERAGE_MATRIX_TOLERANCE
					if (Math.abs(averages[i] - modelViewMatrix.elements[i]) >= this.parameters.smoothTolerance) {
						exceedsAverageTolerance++;
					}
				}

				// if moving (i.e. at least AVERAGE_MATRIX_THRESHOLD entries are over AVERAGE_MATRIX_TOLERANCE)
				if (exceedsAverageTolerance >= this.parameters.smoothThreshold) {
					// then update matrix values to average, otherwise, don't render to minimize jitter
					for (i in modelViewMatrix.elements) {
						modelViewMatrix.elements[i] = averages[i];
					}
					markerObject3D.matrix.copy(modelViewMatrix);
					renderReqd = true; // render required in animation loop
				}
			}
		} else {
			markerObject3D.matrix.copy(modelViewMatrix)
		}
	}else if( this.parameters.changeMatrixMode === 'cameraTransformMatrix' ){
		markerObject3D.matrix.copy(modelViewMatrix).invert()
	}else {
		console.assert(false)
	}

	// decompose - the matrix into .position, .quaternion, .scale
	markerObject3D.matrix.decompose(markerObject3D.position, markerObject3D.quaternion, markerObject3D.scale)

	// dispatchEvent
	this.dispatchEvent( { type: 'markerFound' } );

	return renderReqd;
}

//////////////////////////////////////////////////////////////////////////////
//		utility functions
//////////////////////////////////////////////////////////////////////////////

/**
 * provide a name for a marker
 * - silly heuristic for now
 * - should be improved
 */
MarkerControls.prototype.name = function(){
	var name = ''
	name += this.parameters.type;
	if( this.parameters.type === 'pattern' ){
		var url = this.parameters.patternUrl
		var basename = url.replace(/^.*\//g, '')
		name += ' - ' + basename
	}else if( this.parameters.type === 'barcode' ){
		name += ' - ' + this.parameters.barcodeValue
	}else{
		console.assert(false, 'no .name() implemented for this marker controls')
	}
	return name
}

//////////////////////////////////////////////////////////////////////////////
//		init for Artoolkit
//////////////////////////////////////////////////////////////////////////////
MarkerControls.prototype._initArtoolkit = function(){
	var _this = this

	var artoolkitMarkerId = null

	var delayedInitTimerId = setInterval(function(){
		// check if arController is init
		var arController = _this.context.arController
		if( arController === null )	return
		// stop looping if it is init
		clearInterval(delayedInitTimerId)
		delayedInitTimerId = null
		// launch the _postInitArtoolkit
		postInit()
	}, 1000/50)

	return

	function postInit(){
		// check if arController is init
		var arController = _this.context.arController
		console.assert(arController !== null )

		// start tracking this pattern
		if( _this.parameters.type === 'pattern' ){
	                arController.loadMarker(_this.parameters.patternUrl).then(function(markerId) {
				artoolkitMarkerId = markerId
	                        arController.trackPatternMarkerId(artoolkitMarkerId, _this.parameters.size);
	                });
		}else if( _this.parameters.type === 'barcode' ){
			artoolkitMarkerId = _this.parameters.barcodeValue
			arController.trackBarcodeMarkerId(artoolkitMarkerId, _this.parameters.size);
		}else if( _this.parameters.type === 'unknown' ){
			artoolkitMarkerId = null
		}else{
			console.log(false, 'invalid marker type', _this.parameters.type)
		}

		// listen to the event
		arController.addEventListener('getMarker', onGetMarker)

	}

	function onMarkerFound(event){
		// honor his.parameters.minConfidence
		if( event.data.type === ARToolkit.PATTERN_MARKER && event.data.marker.cfPatt < _this.parameters.minConfidence )	return
		if( event.data.type === ARToolkit.BARCODE_MARKER && event.data.marker.cfMatrix < _this.parameters.minConfidence )	return

		var modelViewMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4().fromArray(event.data.matrix)
		_this.updateWithModelViewMatrix(modelViewMatrix)
	}

	function onGetMarker(event){
		if( event.data.type === ARToolkit.PATTERN_MARKER && _this.parameters.type === 'pattern' ){
			if( artoolkitMarkerId === null )	return
			if( event.data.marker.idPatt === artoolkitMarkerId ) onMarkerFound(event)
		}else if( event.data.type === ARToolkit.BARCODE_MARKER && _this.parameters.type === 'barcode' ){
			// console.log('BARCODE_MARKER idMatrix', event.data.marker.idMatrix, artoolkitMarkerId )
			if( artoolkitMarkerId === null )	return
			if( event.data.marker.idMatrix === artoolkitMarkerId )  onMarkerFound(event)
		}else if( event.data.type === ARToolkit.UNKNOWN_MARKER && _this.parameters.type === 'unknown'){
			onMarkerFound(event)
		}
	}

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MarkerControls);


/***/ }),

/***/ "./three.js/src/threex/arjs-profile.js":
/*!*********************************************!*\
  !*** ./three.js/src/threex/arjs-profile.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../new-api/arjs-utils */ "./three.js/src/new-api/arjs-utils.js");
/* harmony import */ var _arjs_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./arjs-context */ "./three.js/src/threex/arjs-context.js");

 // TODO context build-dependent

/**
 * ArToolkitProfile helps you build parameters for artoolkit
 * - it is fully independent of the rest of the code
 * - all the other classes are still expecting normal parameters
 * - you can use this class to understand how to tune your specific usecase
 * - it is made to help people to build parameters without understanding all the underlying details.
 */
const Profile = function () {
    this.reset()

    this.performance('default')
}

Profile.prototype._guessPerformanceLabel = function () {
    var isMobile = navigator.userAgent.match(/Android/i)
        || navigator.userAgent.match(/webOS/i)
        || navigator.userAgent.match(/iPhone/i)
        || navigator.userAgent.match(/iPad/i)
        || navigator.userAgent.match(/iPod/i)
        || navigator.userAgent.match(/BlackBerry/i)
        || navigator.userAgent.match(/Windows Phone/i)
        ? true : false
    if (isMobile === true) {
        return 'phone-normal'
    }
    return 'desktop-normal'
}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

/**
 * reset all parameters
 */
Profile.prototype.reset = function () {
    this.sourceParameters = {
        // to read from the webcam
        sourceType: 'webcam',
    }

    this.contextParameters = {
        cameraParametersUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL + '../data/data/camera_para.dat', // TODO dependent of build?
        detectionMode: 'mono',
    }
    this.defaultMarkerParameters = {
        type: 'pattern',
        patternUrl: _arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL + '../data/data/patt.hiro', // TODO dependent of build?
        changeMatrixMode: 'modelViewMatrix',
    }
    return this
};

//////////////////////////////////////////////////////////////////////////////
//		Performance
//////////////////////////////////////////////////////////////////////////////



Profile.prototype.performance = function (label) {

    if (label === 'default') {
        label = this._guessPerformanceLabel()
    }

    if (label === 'desktop-fast') {
        this.contextParameters.canvasWidth = 640 * 3
        this.contextParameters.canvasHeight = 480 * 3

        this.contextParameters.maxDetectionRate = 30
    } else if (label === 'desktop-normal') {
        this.contextParameters.canvasWidth = 640
        this.contextParameters.canvasHeight = 480

        this.contextParameters.maxDetectionRate = 60
    } else if (label === 'phone-normal') {
        this.contextParameters.canvasWidth = 80 * 4
        this.contextParameters.canvasHeight = 60 * 4

        this.contextParameters.maxDetectionRate = 30
    } else if (label === 'phone-slow') {
        this.contextParameters.canvasWidth = 80 * 3
        this.contextParameters.canvasHeight = 60 * 3

        this.contextParameters.maxDetectionRate = 30
    } else {
        console.assert(false, 'unknonwn label ' + label)
    }
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		Marker
//////////////////////////////////////////////////////////////////////////////


Profile.prototype.defaultMarker = function (trackingBackend) {
    trackingBackend = trackingBackend || this.contextParameters.trackingBackend

    if (trackingBackend === 'artoolkit') {
        this.contextParameters.detectionMode = 'mono'
        this.defaultMarkerParameters.type = 'pattern'
        this.defaultMarkerParameters.patternUrl = _arjs_context__WEBPACK_IMPORTED_MODULE_1__.default.baseURL + '../data/data/patt.hiro' // TODO dependent of build?
    } else console.assert(false)

    return this
}
//////////////////////////////////////////////////////////////////////////////
//		Source
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.sourceWebcam = function () {
    this.sourceParameters.sourceType = 'webcam'
    delete this.sourceParameters.sourceUrl
    return this
}

Profile.prototype.sourceVideo = function (url) {
    this.sourceParameters.sourceType = 'video'
    this.sourceParameters.sourceUrl = url
    return this
}

Profile.prototype.sourceImage = function (url) {
    this.sourceParameters.sourceType = 'image'
    this.sourceParameters.sourceUrl = url
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingBackend = function (trackingBackend) {
    console.warn('stop profile.trackingBackend() obsolete function. use .trackingMethod instead')
    this.contextParameters.trackingBackend = trackingBackend
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.changeMatrixMode = function (changeMatrixMode) {
    this.defaultMarkerParameters.changeMatrixMode = changeMatrixMode
    return this
}

//////////////////////////////////////////////////////////////////////////////
//		trackingBackend
//////////////////////////////////////////////////////////////////////////////
Profile.prototype.trackingMethod = function (trackingMethod) {
    var data = _new_api_arjs_utils__WEBPACK_IMPORTED_MODULE_0__.default.parseTrackingMethod(trackingMethod)
    this.defaultMarkerParameters.markersAreaEnabled = data.markersAreaEnabled
    this.contextParameters.trackingBackend = data.trackingBackend
    return this
}

/**
 * check if the profile is valid. Throw an exception is not valid
 */
Profile.prototype.checkIfValid = function () {
    return this
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Profile);


/***/ }),

/***/ "./three.js/src/threex/arjs-source.js":
/*!********************************************!*\
  !*** ./three.js/src/threex/arjs-source.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const Source = function (parameters) {
    var _this = this

    this.ready = false
    this.domElement = null

    // handle default parameters
    this.parameters = {
        // type of source - ['webcam', 'image', 'video']
        sourceType: 'webcam',
        // url of the source - valid if sourceType = image|video
        sourceUrl: null,

        // Device id of the camera to use (optional)
        deviceId: null,

        // resolution of at which we initialize in the source image
        sourceWidth: 640,
        sourceHeight: 480,
        // resolution displayed for the source
        displayWidth: 640,
        displayHeight: 480,
    }
    //////////////////////////////////////////////////////////////////////////////
    //		setParameters
    //////////////////////////////////////////////////////////////////////////////
    setParameters(parameters)
    function setParameters(parameters) {
        if (parameters === undefined) return
        for (var key in parameters) {
            var newValue = parameters[key]

            if (newValue === undefined) {
                console.warn("ArToolkitSource: '" + key + "' parameter is undefined.")
                continue
            }

            var currentValue = _this.parameters[key]

            if (currentValue === undefined) {
                console.warn("ArToolkitSource: '" + key + "' is not a property of this material.")
                continue
            }

            _this.parameters[key] = newValue
        }
    }

    this.onInitialClick = function() {
        if( this.domElement && this.domElement.play ) {
            this.domElement.play().then( () => {});
        }
    }
}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////
Source.prototype.init = function (onReady, onError) {
    var _this = this

    if (this.parameters.sourceType === 'image') {
        var domElement = this._initSourceImage(onSourceReady, onError)
    } else if (this.parameters.sourceType === 'video') {
        var domElement = this._initSourceVideo(onSourceReady, onError)
    } else if (this.parameters.sourceType === 'webcam') {
        // var domElement = this._initSourceWebcamOld(onSourceReady)
        var domElement = this._initSourceWebcam(onSourceReady, onError)
    } else {
        console.assert(false)
    }

    // attach
    this.domElement = domElement
    this.domElement.style.position = 'absolute'
    this.domElement.style.top = '0px'
    this.domElement.style.left = '0px'
    this.domElement.style.zIndex = '-2'
    this.domElement.setAttribute('id', 'arjs-video');

    return this
    function onSourceReady() {
        if( !_this.domElement ) {
            return;
        }

        document.body.appendChild(_this.domElement);
        window.dispatchEvent(new CustomEvent('arjs-video-loaded', {
            detail: {
                component: document.querySelector('#arjs-video'),
            },
        }));

        _this.ready = true

        onReady && onReady()
    }
}

////////////////////////////////////////////////////////////////////////////////
//          init image source
////////////////////////////////////////////////////////////////////////////////


Source.prototype._initSourceImage = function (onReady) {
    // TODO make it static
    var domElement = document.createElement('img');
    domElement.src = this.parameters.sourceUrl;

    domElement.width = this.parameters.sourceWidth;
    domElement.height = this.parameters.sourceHeight;
    domElement.style.width = this.parameters.displayWidth + 'px';
    domElement.style.height = this.parameters.displayHeight + 'px';

    domElement.onload = onReady;
    return domElement
}

////////////////////////////////////////////////////////////////////////////////
//          init video source
////////////////////////////////////////////////////////////////////////////////


Source.prototype._initSourceVideo = function (onReady) {
    // TODO make it static
    var domElement = document.createElement('video');
    domElement.src = this.parameters.sourceUrl;

    domElement.style.objectFit = 'initial';

    domElement.autoplay = true;
    domElement.webkitPlaysinline = true;
    domElement.controls = false;
    domElement.loop = true;
    domElement.muted = true;

    // start the video on first click if not started automatically
    document.body.addEventListener('click', this.onInitialClick, {once:true});

    domElement.width = this.parameters.sourceWidth;
    domElement.height = this.parameters.sourceHeight;
    domElement.style.width = this.parameters.displayWidth + 'px';
    domElement.style.height = this.parameters.displayHeight + 'px';

    domElement.onloadeddata = onReady;
    return domElement
}

////////////////////////////////////////////////////////////////////////////////
//          init webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._initSourceWebcam = function (onReady, onError) {
    var _this = this

    // init default value
    onError = onError || function (error) {
        var event = new CustomEvent('camera-error', { error: error });
        window.dispatchEvent(event);

        setTimeout(() => {
            if (!document.getElementById('error-popup')) {
                var errorPopup = document.createElement('div');
                errorPopup.innerHTML = 'Webcam Error\nName: ' + error.name + '\nMessage: ' + error.message
                errorPopup.setAttribute('id', 'error-popup');
                document.body.appendChild(errorPopup);
            }
        }, 1000);
    }

    var domElement = document.createElement('video');
    domElement.setAttribute('autoplay', '');
    domElement.setAttribute('muted', '');
    domElement.setAttribute('playsinline', '');
    domElement.style.width = this.parameters.displayWidth + 'px'
    domElement.style.height = this.parameters.displayHeight + 'px'

    // check API is available
    if (navigator.mediaDevices === undefined
        || navigator.mediaDevices.enumerateDevices === undefined
        || navigator.mediaDevices.getUserMedia === undefined) {
        if (navigator.mediaDevices === undefined) var fctName = 'navigator.mediaDevices'
        else if (navigator.mediaDevices.enumerateDevices === undefined) var fctName = 'navigator.mediaDevices.enumerateDevices'
        else if (navigator.mediaDevices.getUserMedia === undefined) var fctName = 'navigator.mediaDevices.getUserMedia'
        else console.assert(false)
        onError({
            name: '',
            message: 'WebRTC issue-! ' + fctName + ' not present in your browser'
        });
        return null
    }

    // get available devices
    navigator.mediaDevices.enumerateDevices().then(function (devices) {
        var userMediaConstraints = {
            audio: false,
            video: {
                facingMode: 'environment',
                width: {
                    ideal: _this.parameters.sourceWidth,
                    // min: 1024,
                    // max: 1920
                },
                height: {
                    ideal: _this.parameters.sourceHeight,
                    // min: 776,
                    // max: 1080
                }
            }
        };

        if (null !== _this.parameters.deviceId) {
            userMediaConstraints.video.deviceId = {
                exact: _this.parameters.deviceId
            };
        }

        // get a device which satisfy the constraints
        navigator.mediaDevices.getUserMedia(userMediaConstraints).then(function success(stream) {
            // set the .src of the domElement
            domElement.srcObject = stream;

            var event = new CustomEvent('camera-init', { stream: stream });
            window.dispatchEvent(event);

            // start the video on first click if not started automatically
            document.body.addEventListener('click', _this.onInitialClick, {once:true});            

            onReady();
        }).catch(function (error) {
            onError({
                name: error.name,
                message: error.message
            });
        });
    }).catch(function (error) {
        onError({
            message: error.message
        });
    });

    return domElement
}

////////////////////////////////////////////////////////////////////////////////
//          dispose source
////////////////////////////////////////////////////////////////////////////////

Source.prototype.dispose = function () {
    this.ready = false;

    switch (this.parameters.sourceType) {
        case 'image':
            this._disposeSourceImage();
            break;

        case 'video':
            this._disposeSourceVideo();
            break;

        case 'webcam':
            this._disposeSourceWebcam();
            break;
    }

    this.domElement = null;

    document.body.removeEventListener('click', this.onInitialClick, {once:true});            
}	

////////////////////////////////////////////////////////////////////////////////
//          dispose image source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceImage = function () {
    var domElement = document.querySelector('#arjs-video');

    if( !domElement ) {
        return;
    }

    domElement.remove();
}

////////////////////////////////////////////////////////////////////////////////
//          dispose video source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceVideo = function () {
    var domElement = document.querySelector('#arjs-video');
    
    if( !domElement ) {
        return;
    }

    // https://html.spec.whatwg.org/multipage/media.html#best-practices-for-authors-using-media-elements
    domElement.pause();
    domElement.removeAttribute('src'); 
    domElement.load(); 

    domElement.remove();    
}

////////////////////////////////////////////////////////////////////////////////
//          dispose webcam source
////////////////////////////////////////////////////////////////////////////////

Source.prototype._disposeSourceWebcam = function () {
    var domElement = document.querySelector('#arjs-video');

    if( !domElement ) {
        return;
    }

    // https://stackoverflow.com/a/12436772
    if( domElement.srcObject && domElement.srcObject.getTracks ) {
        domElement.srcObject.getTracks().map((track) => track.stop());    
    }	

    domElement.remove();	
}

//////////////////////////////////////////////////////////////////////////////
//		Handle Mobile Torch
//////////////////////////////////////////////////////////////////////////////
Source.prototype.hasMobileTorch = function () {
    var stream = arToolkitSource.domElement.srcObject
    if (stream instanceof MediaStream === false) return false

    if (this._currentTorchStatus === undefined) {
        this._currentTorchStatus = false
    }

    var videoTrack = stream.getVideoTracks()[0];

    // if videoTrack.getCapabilities() doesnt exist, return false now
    if (videoTrack.getCapabilities === undefined) return false

    var capabilities = videoTrack.getCapabilities()

    return capabilities.torch ? true : false
}

/**
 * toggle the flash/torch of the mobile fun if applicable.
 * Great post about it https://www.oberhofer.co/mediastreamtrack-and-its-capabilities/
 */
Source.prototype.toggleMobileTorch = function () {
    // sanity check
    console.assert(this.hasMobileTorch() === true)

    var stream = arToolkitSource.domElement.srcObject
    if (stream instanceof MediaStream === false) {
        if (!document.getElementById('error-popup')) {
            var errorPopup = document.createElement('div');
            errorPopup.innerHTML = 'enabling mobile torch is available only on webcam'
            errorPopup.setAttribute('id', 'error-popup');
            document.body.appendChild(errorPopup);
        }
        return
    }

    if (this._currentTorchStatus === undefined) {
        this._currentTorchStatus = false
    }

    var videoTrack = stream.getVideoTracks()[0];
    var capabilities = videoTrack.getCapabilities()

    if (!capabilities.torch) {
        if (!document.getElementById('error-popup')) {
            var errorPopup = document.createElement('div');
            errorPopup.innerHTML = 'no mobile torch is available on your camera'
            errorPopup.setAttribute('id', 'error-popup');
            document.body.appendChild(errorPopup);
        }
        return
    }

    this._currentTorchStatus = this._currentTorchStatus === false ? true : false
    videoTrack.applyConstraints({
        advanced: [{
            torch: this._currentTorchStatus
        }]
    }).catch(function (error) {
        console.log(error)
    });
}

Source.prototype.domElementWidth = function () {
    return parseInt(this.domElement.style.width)
}
Source.prototype.domElementHeight = function () {
    return parseInt(this.domElement.style.height)
}

////////////////////////////////////////////////////////////////////////////////
//          handle resize
////////////////////////////////////////////////////////////////////////////////

Source.prototype.onResizeElement = function () {
    var _this = this
    var screenWidth = window.innerWidth
    var screenHeight = window.innerHeight

    // sanity check
    console.assert(arguments.length === 0)

    // compute sourceWidth, sourceHeight
    if (this.domElement.nodeName === "IMG") {
        var sourceWidth = this.domElement.naturalWidth
        var sourceHeight = this.domElement.naturalHeight
    } else if (this.domElement.nodeName === "VIDEO") {
        var sourceWidth = this.domElement.videoWidth
        var sourceHeight = this.domElement.videoHeight
    } else {
        console.assert(false)
    }

    // compute sourceAspect
    var sourceAspect = sourceWidth / sourceHeight
    // compute screenAspect
    var screenAspect = screenWidth / screenHeight

    // if screenAspect < sourceAspect, then change the width, else change the height
    if (screenAspect < sourceAspect) {
        // compute newWidth and set .width/.marginLeft
        var newWidth = sourceAspect * screenHeight
        this.domElement.style.width = newWidth + 'px'
        this.domElement.style.marginLeft = -(newWidth - screenWidth) / 2 + 'px'

        // init style.height/.marginTop to normal value
        this.domElement.style.height = screenHeight + 'px'
        this.domElement.style.marginTop = '0px'
    } else {
        // compute newHeight and set .height/.marginTop
        var newHeight = 1 / (sourceAspect / screenWidth)
        this.domElement.style.height = newHeight + 'px'
        this.domElement.style.marginTop = -(newHeight - screenHeight) / 2 + 'px'

        // init style.width/.marginLeft to normal value
        this.domElement.style.width = screenWidth + 'px'
        this.domElement.style.marginLeft = '0px'
    }
}
/*
Source.prototype.copyElementSizeTo = function(otherElement){
	otherElement.style.width = this.domElement.style.width
	otherElement.style.height = this.domElement.style.height
	otherElement.style.marginLeft = this.domElement.style.marginLeft
	otherElement.style.marginTop = this.domElement.style.marginTop
}
*/

Source.prototype.copyElementSizeTo = function (otherElement) {

    if (window.innerWidth > window.innerHeight) {
        //landscape
        otherElement.style.width = this.domElement.style.width
        otherElement.style.height = this.domElement.style.height
        otherElement.style.marginLeft = this.domElement.style.marginLeft
        otherElement.style.marginTop = this.domElement.style.marginTop
    }
    else {
        //portrait
        otherElement.style.height = this.domElement.style.height
        otherElement.style.width = (parseInt(otherElement.style.height) * 4 / 3) + "px";
        otherElement.style.marginLeft = ((window.innerWidth - parseInt(otherElement.style.width)) / 2) + "px";
        otherElement.style.marginTop = 0;
    }

}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.copySizeTo = function () {
    console.warn('obsolete function arToolkitSource.copySizeTo. Use arToolkitSource.copyElementSizeTo')
    this.copyElementSizeTo.apply(this, arguments)
}

//////////////////////////////////////////////////////////////////////////////
//		Code Separator
//////////////////////////////////////////////////////////////////////////////

Source.prototype.onResize = function (arToolkitContext, renderer, camera) {
    if (arguments.length !== 3) {
        console.warn('obsolete function arToolkitSource.onResize. Use arToolkitSource.onResizeElement')
        return this.onResizeElement.apply(this, arguments)
    }

    var trackingBackend = arToolkitContext.parameters.trackingBackend


    // RESIZE DOMELEMENT
    if (trackingBackend === 'artoolkit') {

        this.onResizeElement()

        var isAframe = renderer.domElement.dataset.aframeCanvas ? true : false
        if (isAframe === false) {
            this.copyElementSizeTo(renderer.domElement)
        } else {

        }

        if (arToolkitContext.arController !== null) {
            this.copyElementSizeTo(arToolkitContext.arController.canvas)
        }
    } else console.assert(false, 'unhandled trackingBackend ' + trackingBackend)


    // UPDATE CAMERA
    if (trackingBackend === 'artoolkit') {
        if (arToolkitContext.arController !== null) {
            camera.projectionMatrix.copy(arToolkitContext.getProjectionMatrix());
        }
    } else console.assert(false, 'unhandled trackingBackend ' + trackingBackend)
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Source);

/***/ }),

/***/ "./three.js/src/threex/threex-arbasecontrols.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-arbasecontrols.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArBaseControls = function(object3d) {
	this.id = ArBaseControls.id++

	this.object3d = object3d
	this.object3d.matrixAutoUpdate = false;
	this.object3d.visible = false

	// Events to honor
	// this.dispatchEvent({ type: 'becameVisible' })
	// this.dispatchEvent({ type: 'markerVisible' })	// replace markerFound
	// this.dispatchEvent({ type: 'becameUnVisible' })
}

ArBaseControls.id = 0

ArBaseControls.prototype = Object.create(three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher.prototype);

//////////////////////////////////////////////////////////////////////////////
//		Functions
//////////////////////////////////////////////////////////////////////////////
/**
 * error catching function for update()
 */
ArBaseControls.prototype.update = function(){
	console.assert(false, 'you need to implement your own update')
}

/**
 * error catching function for name()
 */
ArBaseControls.prototype.name = function(){
	console.assert(false, 'you need to implement your own .name()')
	return 'Not yet implemented - name()'
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArBaseControls);


/***/ }),

/***/ "./three.js/src/threex/threex-armarkerhelper.js":
/*!******************************************************!*\
  !*** ./three.js/src/threex/threex-armarkerhelper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ "three");
/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);


const ArMarkerHelper = function(markerControls){
	this.object3d = new three__WEBPACK_IMPORTED_MODULE_0__.Group

	var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.AxesHelper()
	this.object3d.add(mesh)

	var text = markerControls.id
	// debugger
	// var text = markerControls.parameters.patternUrl.slice(-1).toUpperCase();

	var canvas = document.createElement( 'canvas' );
	canvas.width =  64;
	canvas.height = 64;

	var context = canvas.getContext( '2d' );
	var texture = new three__WEBPACK_IMPORTED_MODULE_0__.CanvasTexture( canvas );

	// put the text in the sprite
	context.font = '48px monospace';
	context.fillStyle = 'rgba(192,192,255, 0.5)';
	context.fillRect( 0, 0, canvas.width, canvas.height );
	context.fillStyle = 'darkblue';
	context.fillText(text, canvas.width/4, 3*canvas.height/4 )
	texture.needsUpdate = true

	// var geometry = new THREE.CubeGeometry(1, 1, 1)
	var geometry = new three__WEBPACK_IMPORTED_MODULE_0__.PlaneGeometry(1, 1)
	var material = new three__WEBPACK_IMPORTED_MODULE_0__.MeshBasicMaterial({
		map: texture,
		transparent: true
	});
	var mesh = new three__WEBPACK_IMPORTED_MODULE_0__.Mesh(geometry, material)
	mesh.rotation.x = -Math.PI/2

	this.object3d.add(mesh)

}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArMarkerHelper);


/***/ }),

/***/ "./three.js/src/threex/threex-arsmoothedcontrols.js":
/*!**********************************************************!*\
  !*** ./three.js/src/threex/threex-arsmoothedcontrols.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex-arbasecontrols */ "./three.js/src/threex/threex-arbasecontrols.js");


/**
 * - lerp position/quaternino/scale
 * - minDelayDetected
 * - minDelayUndetected
 * @param {[type]} object3d   [description]
 * @param {[type]} parameters [description]
 */
const ArSmoothedControls = function(object3d, parameters){
	var _this = this
	
	_threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__.default.call(this, object3d)
	
	// copy parameters
	this.object3d.visible = false
	
	this._lastLerpStepAt = null
	this._visibleStartedAt = null
	this._unvisibleStartedAt = null

	// handle default parameters
	parameters = parameters || {}
	this.parameters = {
		// lerp coeficient for the position - between [0,1] - default to 1
		lerpPosition: 0.8,
		// lerp coeficient for the quaternion - between [0,1] - default to 1
		lerpQuaternion: 0.2,
		// lerp coeficient for the scale - between [0,1] - default to 1
		lerpScale: 0.7,
		// delay for lerp fixed steps - in seconds - default to 1/120
		lerpStepDelay: 1/60,
		// minimum delay the sub-control must be visible before this controls become visible - default to 0 seconds
		minVisibleDelay: 0.0,
		// minimum delay the sub-control must be unvisible before this controls become unvisible - default to 0 seconds
		minUnvisibleDelay: 0.2,
	}
	
	//////////////////////////////////////////////////////////////////////////////
	//		setParameters
	//////////////////////////////////////////////////////////////////////////////
	setParameters(parameters)
	function setParameters(parameters){
		if( parameters === undefined )	return
		for( var key in parameters ){
			var newValue = parameters[ key ]

			if( newValue === undefined ){
				console.warn( "ArSmoothedControls: '" + key + "' parameter is undefined." )
				continue
			}

			var currentValue = _this.parameters[ key ]

			if( currentValue === undefined ){
				console.warn( "ArSmoothedControls: '" + key + "' is not a property of this material." )
				continue
			}

			_this.parameters[ key ] = newValue
		}
	}
}
	
ArSmoothedControls.prototype = Object.create( _threex_arbasecontrols__WEBPACK_IMPORTED_MODULE_0__.default.prototype );
ArSmoothedControls.prototype.constructor = ArSmoothedControls;

//////////////////////////////////////////////////////////////////////////////
//		update function
//////////////////////////////////////////////////////////////////////////////

ArSmoothedControls.prototype.update = function(targetObject3d){
	var object3d = this.object3d
	var parameters = this.parameters
	var wasVisible = object3d.visible
	var present = performance.now()/1000


	//////////////////////////////////////////////////////////////////////////////
	//		handle object3d.visible with minVisibleDelay/minUnvisibleDelay
	//////////////////////////////////////////////////////////////////////////////
	if( targetObject3d.visible === false )	this._visibleStartedAt = null
	if( targetObject3d.visible === true )	this._unvisibleStartedAt = null

	if( targetObject3d.visible === true && this._visibleStartedAt === null )	this._visibleStartedAt = present
	if( targetObject3d.visible === false && this._unvisibleStartedAt === null )	this._unvisibleStartedAt = present

	if( wasVisible === false && targetObject3d.visible === true ){
		var visibleFor = present - this._visibleStartedAt
		if( visibleFor >= this.parameters.minVisibleDelay ){
			object3d.visible = true
			snapDirectlyToTarget()
		}
		// console.log('visibleFor', visibleFor)
	}

	if( wasVisible === true && targetObject3d.visible === false ){
		var unvisibleFor = present - this._unvisibleStartedAt
		if( unvisibleFor >= this.parameters.minUnvisibleDelay ){
			object3d.visible = false			
		}
	}
	
	//////////////////////////////////////////////////////////////////////////////
	//		apply lerp on positon/quaternion/scale
	//////////////////////////////////////////////////////////////////////////////

	// apply lerp steps - require fix time steps to behave the same no matter the fps
	if( this._lastLerpStepAt === null ){
		applyOneSlerpStep()
		this._lastLerpStepAt = present
	}else{
		var nStepsToDo = Math.floor( (present - this._lastLerpStepAt)/this.parameters.lerpStepDelay )
		for(var i = 0; i < nStepsToDo; i++){
			applyOneSlerpStep()
			this._lastLerpStepAt += this.parameters.lerpStepDelay
		}
	}

	// disable the lerp by directly copying targetObject3d position/quaternion/scale
	if( false ){}

	// update the matrix
	this.object3d.updateMatrix()

	//////////////////////////////////////////////////////////////////////////////
	//		honor becameVisible/becameUnVisible event
	//////////////////////////////////////////////////////////////////////////////
	// honor becameVisible event
	if( wasVisible === false && object3d.visible === true ){
		this.dispatchEvent({ type: 'becameVisible' })
	}
	// honor becameUnVisible event
	if( wasVisible === true && object3d.visible === false ){
		this.dispatchEvent({ type: 'becameUnVisible' })
	}
	return

	function snapDirectlyToTarget(){
		object3d.position.copy( targetObject3d.position )
		object3d.quaternion.copy( targetObject3d.quaternion )
		object3d.scale.copy( targetObject3d.scale )
	}	
	
	function applyOneSlerpStep(){
		object3d.position.lerp(targetObject3d.position, parameters.lerpPosition)
		object3d.quaternion.slerp(targetObject3d.quaternion, parameters.lerpQuaternion)
		object3d.scale.lerp(targetObject3d.scale, parameters.lerpScale)
	}
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArSmoothedControls);


/***/ }),

/***/ "three":
/*!**************************************************************************************!*\
  !*** external {"commonjs":"three","commonjs2":"three","amd":"three","root":"THREE"} ***!
  \**************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_three__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**************************************!*\
  !*** ./three.js/src/index-threex.js ***!
  \**************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ArMarkerControls": () => (/* reexport safe */ _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "ArMarkerHelper": () => (/* reexport safe */ _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "ArSmoothedControls": () => (/* reexport safe */ _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "ArToolkitContext": () => (/* reexport safe */ _threex_arjs_context__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "ArToolkitProfile": () => (/* reexport safe */ _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "ArToolkitSource": () => (/* reexport safe */ _threex_arjs_source__WEBPACK_IMPORTED_MODULE_5__.default),
/* harmony export */   "ArMultiMarkerControls": () => (/* reexport safe */ _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_6__.default),
/* harmony export */   "ArMultiMakersLearning": () => (/* reexport safe */ _markers_area_arjs_markersarealearning__WEBPACK_IMPORTED_MODULE_7__.default),
/* harmony export */   "ArMultiMarkerUtils": () => (/* reexport safe */ _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_8__.default)
/* harmony export */ });
/* harmony import */ var _threex_arjs_markercontrols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./threex/arjs-markercontrols */ "./three.js/src/threex/arjs-markercontrols.js");
/* harmony import */ var _threex_threex_armarkerhelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./threex/threex-armarkerhelper */ "./three.js/src/threex/threex-armarkerhelper.js");
/* harmony import */ var _threex_threex_arsmoothedcontrols__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./threex/threex-arsmoothedcontrols */ "./three.js/src/threex/threex-arsmoothedcontrols.js");
/* harmony import */ var _threex_arjs_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./threex/arjs-context */ "./three.js/src/threex/arjs-context.js");
/* harmony import */ var _threex_arjs_profile__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./threex/arjs-profile */ "./three.js/src/threex/arjs-profile.js");
/* harmony import */ var _threex_arjs_source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./threex/arjs-source */ "./three.js/src/threex/arjs-source.js");
/* harmony import */ var _markers_area_arjs_markersareacontrols__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./markers-area/arjs-markersareacontrols */ "./three.js/src/markers-area/arjs-markersareacontrols.js");
/* harmony import */ var _markers_area_arjs_markersarealearning__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./markers-area/arjs-markersarealearning */ "./three.js/src/markers-area/arjs-markersarealearning.js");
/* harmony import */ var _markers_area_arjs_markersareautils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./markers-area/arjs-markersareautils */ "./three.js/src/markers-area/arjs-markersareautils.js");







 // typo is spread over codebase




})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,